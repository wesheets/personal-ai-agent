[
  {
    "file": "belief_identity_checkpoint.json",
    "path": "app/memory/belief_identity_checkpoint.json",
    "type": "control_log",
    "purpose": "Stores the full belief surface at the moment of reinforcement. Used for detecting identity rollback or belief deviation.",
    "status": "missing_from_repo",
    "dependencies": [
      "app/schemas/self/belief_state.schema.json",
      "app/routes/self_routes.py"
    ],
    "source_archive_hint": "0421_identity_reinforcement_logic.md"
  },
  {
    "file": "auto_unlock_proposal_monitor.py",
    "path": "app/agents/auto_unlock_proposal_monitor.py",
    "type": "agent",
    "purpose": "Monitors under_review beliefs and stability thresholds. Requests unlock if drift exceeds operator-defined volatility bounds.",
    "status": "missing_from_archive",
    "dependencies": [
      "app/memory/core_beliefs.json",
      "app/routes/self_routes.py"
    ],
    "source_archive_hint": "0422_operator_unlock_delegation.md"
  },
  {
    "file": "loop_belief_unlock_request.json",
    "path": "app/memory/loop_belief_unlock_request.json",
    "type": "agent_output",
    "purpose": "Tracks formal unlock requests initiated by Promethios when belief volatility is sustained without Operator response.",
    "status": "missing_from_repo",
    "dependencies": [
      "app/routes/self_routes.py"
    ],
    "source_archive_hint": "0422_operator_unlock_delegation.md"
  },
  {
    "file": "vertical_loop_initializer.py",
    "path": "app/loop/vertical_loop_initializer.py",
    "type": "loop_orchestration",
    "purpose": "Bootstraps vertical SaaS project trees by initializing loop memory and HAL/ASH plan scaffolds from vertical manifest.",
    "status": "missing_from_repo",
    "dependencies": [
      "app/memory/",
      "app/routes/loop_routes.py"
    ],
    "source_archive_hint": "0423_vertical_scaling_init.md"
  },
  {
    "file": "saas_component_manifest.json",
    "path": "app/memory/saas_component_manifest.json",
    "type": "memory_template",
    "purpose": "Contains module plans, file targets, and agent responsibility for active verticals like insight_loop_saas.",
    "status": "missing_from_repo",
    "dependencies": [
      "app/routes/loop_routes.py",
      "app/agents/"
    ],
    "source_archive_hint": "0423_vertical_scaling_init.md"
  },
  {
    "file": "hal_code_generator.py",
    "path": "app/agents/hal_code_generator.py",
    "type": "agent_logic",
    "purpose": "Generates JSX/Tailwind code based on loop memory. Converts HAL\u2019s intent memory into usable frontend files.",
    "status": "missing_from_archive",
    "dependencies": [
      "app/memory/",
      "app/routes/loop_routes.py"
    ],
    "source_archive_hint": "0423_loop_respond_patch.md"
  },
  {
    "file": "loop_drift_analyzer.py",
    "path": "app/validators/loop_drift_analyzer.py",
    "type": "validator",
    "purpose": "Detect long-term drift between loop outcomes using loop_summary.json.",
    "status": "missing_from_repo",
    "dependencies": [
      "app/memory/loop_summary.json",
      "app/validators/mutation_verification.py"
    ],
    "source_archive_hint": "0417_loop_reflection_ideas.md"
  },
  {
    "file": "operator_unlock_tracker.json",
    "path": "app/memory/operator_unlock_tracker.json",
    "type": "control_log",
    "purpose": "Tracks Operator-authorized surface unlocks across batches. Prevents accidental memory mutation without trace.",
    "status": "missing_from_repo",
    "dependencies": [
      "app/tools/truth_guard.py",
      "app/config/final_truth_surface_manifest.json"
    ],
    "source_archive_hint": "0421_operator_overrides.md"
  },
  {
    "file": "loop_summary_drift_report.json",
    "path": "app/memory/loop_summary_drift_report.json",
    "type": "cognitive_log",
    "purpose": "Stores loop reflection deviations over time for replay-aware drift scoring.",
    "status": "missing_from_repo",
    "dependencies": [
      "app/memory/loop_trace.json",
      "app/validators/loop_drift_analyzer.py"
    ],
    "source_archive_hint": "0417_loop_reflection_ideas.md"
  },
  {
    "file": "vertical_registry.json",
    "path": "app/config/vertical_registry.json",
    "type": "config",
    "purpose": "Stores all active vertical agent types, their startup schemas, and boot order sequence for loop activation.",
    "status": "missing_from_repo",
    "dependencies": [
      "app/loop/vertical_loop_initializer.py",
      "app/memory/saas_component_manifest.json"
    ],
    "source_archive_hint": "0423_vertical_agent_config.md"
  },
  {
    "file": "insight_loop_saas_agent.py",
    "path": "app/agents/insight_loop_saas_agent.py",
    "type": "agent",
    "purpose": "Agent responsible for running loop-scoped SaaS reflections and launching insight loop plans from vertical manifest.",
    "status": "missing_from_archive",
    "dependencies": [
      "app/memory/saas_component_manifest.json",
      "app/loop/vertical_loop_initializer.py"
    ],
    "source_archive_hint": "0423_vertical_scaling_init.md"
  },
  {
    "file": "validate_snapshot_before_build.py",
    "path": "tools/validate_snapshot_before_build.py",
    "type": "tool",
    "purpose": "Ensures all builds are blocked unless the latest system snapshot has been reviewed and acknowledged. Compares snapshot hash to live manifest before allowing changes.",
    "status": "missing_from_repo",
    "dependencies": [
      "system/snapshot_latest.json",
      "tools/print_system_snapshot.py",
      "acknowledged_snapshot_hash.txt"
    ],
    "source_archive_hint": "0425_snapshot_firewall_design.md"
  },
  {
    "file": "acknowledged_snapshot_hash.txt",
    "path": "system/acknowledged_snapshot_hash.txt",
    "type": "confirmation_token",
    "purpose": "Human- or agent-signed file containing the last reviewed snapshot hash and timestamp. Required before executing any protected module changes.",
    "status": "missing_from_repo",
    "dependencies": [
      "tools/validate_snapshot_before_build.py"
    ],
    "source_archive_hint": "0425_snapshot_firewall_design.md"
  },
  {
    "file": "agent_snapshot_guard.py",
    "path": "app/guardrails/agent_snapshot_guard.py",
    "type": "firewall_logic",
    "purpose": "Blocks any agent from modifying protected files unless the system snapshot has been explicitly acknowledged in memory.",
    "status": "missing_from_repo",
    "dependencies": [
      "system/snapshot_latest.json",
      "app/memory/system_acknowledgments.json"
    ],
    "source_archive_hint": "0425_snapshot_firewall_design.md"
  },
  {
    "file": "system_acknowledgments.json",
    "path": "app/memory/system_acknowledgments.json",
    "type": "control_log",
    "purpose": "Logs all snapshot acknowledgment events by agent or operator. Used to confirm build authorization prior to execution.",
    "status": "missing_from_repo",
    "dependencies": [
      "agent_snapshot_guard.py",
      "validate_snapshot_before_build.py"
    ],
    "source_archive_hint": "0425_snapshot_firewall_design.md"
  },
  {
    "file": "print_system_snapshot.py",
    "path": "tools/print_system_snapshot.py",
    "type": "tool",
    "purpose": "Generates and exports the current system file structure, contracts, schemas, and agent map to a canonical snapshot file.",
    "status": "found_in_repo",
    "dependencies": [
      "app/agents/",
      "app/routes/",
      "app/schemas/",
      "system/system_manifest.json"
    ],
    "source_archive_hint": "0421_snapshot_core_activation.md"
  },
  {
    "file": "pre-commit",
    "path": ".git/hooks/pre-commit",
    "type": "hook",
    "purpose": "Prevents any Git commit unless snapshot validation passes. Executes validate_snapshot_before_build.py and blocks if mismatched.",
    "status": "missing_from_repo",
    "dependencies": [
      "tools/validate_snapshot_before_build.py"
    ],
    "source_archive_hint": "0425_snapshot_firewall_design.md"
  },
  {
    "file": "agent_drift_reconciler.py",
    "path": "app/validators/agent_drift_reconciler.py",
    "type": "validator",
    "purpose": "Compares agents declared in the registry vs. those found in app/agents/. Flags drift, ghost brains, or unregistered agents.",
    "status": "missing_from_repo",
    "dependencies": [
      "app/registries/agent_registry.py",
      "app/agents/"
    ],
    "source_archive_hint": "0426_agent_surface_reconciliation.md"
  },
  {
    "file": "drift_surface_report.json",
    "path": "logs/drift_surface_report.json",
    "type": "drift_log",
    "purpose": "Stores startup or post-merge memory surface drift findings across ACI/PICE-registry mismatches.",
    "status": "missing_from_repo",
    "dependencies": [
      "system/agent_cognition_index.json",
      "system/system_consciousness_index.json",
      "app/registries/"
    ],
    "source_archive_hint": "0426_phase_2_startup_validation.md"
  },
  {
    "file": "agent_deduplication_plan.json",
    "path": "app/maintenance/agent_deduplication_plan.json",
    "type": "maintenance_plan",
    "purpose": "Details which duplicate agent files should be archived (e.g., hal.py vs hal_agent.py) and their memory mapping status.",
    "status": "missing_from_repo",
    "dependencies": [
      "app/agents/",
      "app/registries/agent_registry.py"
    ],
    "source_archive_hint": "0426_agent_code_deduplication.md"
  },
  {
    "file": "startup_surface_validator.py",
    "path": "app/validators/startup_surface_validator.py",
    "type": "validator",
    "purpose": "Validates agents, modules, schemas, endpoints, and components against memory surfaces at system boot.",
    "status": "missing_from_repo",
    "dependencies": [
      "system/agent_cognition_index.json",
      "system/system_consciousness_index.json",
      "app/registries/"
    ],
    "source_archive_hint": "0426_phase_2_startup_validation.md"
  },
  {
    "file": "repair_trigger_queue.json",
    "path": "app/memory/repair_trigger_queue.json",
    "type": "recovery_log",
    "purpose": "Stores Operator-approved repair instructions (e.g., schema rewraps, endpoint reactivation).",
    "status": "missing_from_repo",
    "dependencies": [
      "logs/drift_surface_report.json"
    ],
    "source_archive_hint": "0426_light_repair_hooks.md"
  },
  {
    "file": "repair_executor.py",
    "path": "app/repair/repair_executor.py",
    "type": "repair_engine",
    "purpose": "Executes targeted repair operations (schema rewraps, route remounts) based on queued Operator instructions.",
    "status": "missing_from_repo",
    "dependencies": [
      "app/memory/repair_trigger_queue.json",
      "app/routes/"
    ],
    "source_archive_hint": "0426_light_repair_hooks.md"
  },
  {
    "file": "endpoint_200_ok_checker.py",
    "path": "tools/endpoint_200_ok_checker.py",
    "type": "tool",
    "purpose": "Sends internal requests to all registered endpoints and records 200 OK or error status. Used to validate live schema and route health post-healing.",
    "status": "missing_from_repo",
    "dependencies": [
      "app/registries/endpoint_registry.py",
      "app/routes/"
    ],
    "source_archive_hint": "0425_postman_simulation_pass.md"
  },
  {
    "file": "endpoint_health_report.json",
    "path": "logs/endpoint_health_report.json",
    "type": "drift_log",
    "purpose": "Stores results from endpoint 200 OK sweeps. Captures status codes, timestamps, and failed routes for operator review.",
    "status": "missing_from_repo",
    "dependencies": [
      "tools/endpoint_200_ok_checker.py"
    ],
    "source_archive_hint": "0425_postman_simulation_pass.md"
  },
  {
    "file": "postman_sweep_controller.py",
    "path": "app/validators/postman_sweep_controller.py",
    "type": "validator",
    "purpose": "Manages sweep runs across all endpoint groups. Can be triggered manually or post-deployment to verify live schema enforcement.",
    "status": "missing_from_repo",
    "dependencies": [
      "tools/endpoint_200_ok_checker.py",
      "logs/endpoint_health_report.json"
    ],
    "source_archive_hint": "0425_postman_simulation_pass.md"
  },
  {
    "file": "orchestrator.py",
    "path": "app/agents/orchestrator.py",
    "type": "agent",
    "purpose": "Interprets Operator intent, builds modular file tree, assigns loop tasks to agents.",
    "status": "missing_from_archive",
    "dependencies": [
      "app/memory/file_tree.json",
      "app/memory/task_log.json"
    ],
    "source_archive_hint": "0501_operator_architecture_loop.md"
  },
  {
    "file": "hal.py",
    "path": "app/agents/hal.py",
    "type": "agent",
    "purpose": "Initializes scope and project memory from Operator prompt. First agent in the cognitive loop.",
    "status": "missing_from_archive",
    "dependencies": [
      "app/memory/project_scope.json"
    ],
    "source_archive_hint": "0403_core_loop_agents.md"
  },
  {
    "file": "nova.py",
    "path": "app/agents/nova.py",
    "type": "agent",
    "purpose": "Generates UI components and logic files from HAL's scope memory.",
    "status": "missing_from_archive",
    "dependencies": [
      "app/memory/file_tree.json"
    ],
    "source_archive_hint": "0403_core_loop_agents.md"
  },
  {
    "file": "critic.py",
    "path": "app/agents/critic.py",
    "type": "agent",
    "purpose": "Reviews outputs from agents like NOVA, flags issues, and recommends repair or escalation.",
    "status": "missing_from_archive",
    "dependencies": [
      "app/memory/task_log.json"
    ],
    "source_archive_hint": "0403_core_loop_agents.md"
  },
  {
    "file": "ash.py",
    "path": "app/agents/ash.py",
    "type": "agent",
    "purpose": "Documents completed files, creates usage notes, and finalizes agent outputs.",
    "status": "missing_from_archive",
    "dependencies": [
      "app/memory/file_tree.json",
      "app/memory/task_log.json"
    ],
    "source_archive_hint": "0403_core_loop_agents.md"
  },
  {
    "file": "sage.py",
    "path": "app/agents/sage.py",
    "type": "agent",
    "purpose": "Summarizes each loop cycle, writes loop_summary.md, and sets loop_complete = true.",
    "status": "missing_from_archive",
    "dependencies": [
      "app/memory/loop_summary.md",
      "app/memory/file_tree.json"
    ],
    "source_archive_hint": "0403_core_loop_agents.md"
  },
  {
    "file": "file_tree.schema.json",
    "path": "app/schemas/memory/file_tree.schema.json",
    "type": "schema",
    "purpose": "Defines modular file tree structure used by Orchestrator and agents to plan and execute scoped file tasks.",
    "status": "missing_from_repo",
    "dependencies": [
      "app/memory/file_tree.json"
    ],
    "source_archive_hint": "0429_modular_tree_planning.md"
  },
  {
    "file": "build_module.schema.json",
    "path": "app/schemas/loop/build_module.schema.json",
    "type": "schema",
    "purpose": "Defines the structure of a modular build task passed to agents during loop execution.",
    "status": "missing_from_repo",
    "dependencies": [
      "app/memory/task_log.json"
    ],
    "source_archive_hint": "0429_modular_tree_planning.md"
  },
  {
    "file": "task_log.schema.json",
    "path": "app/schemas/memory/task_log.schema.json",
    "type": "schema",
    "purpose": "Schema for loop task log entries \u2014 tracks file ownership, status, and timestamps across agents.",
    "status": "missing_from_repo",
    "dependencies": [
      "app/memory/task_log.json"
    ],
    "source_archive_hint": "0429_loop_task_tracking.md"
  },
  {
    "file": "FileTreeView.jsx",
    "path": "app/ui/components/FileTreeView.jsx",
    "type": "ui_component",
    "purpose": "Displays real-time status of planned, active, and completed files during the loop. Grey-to-green transition on build.",
    "status": "missing_from_repo",
    "dependencies": [
      "app/memory/file_tree.json"
    ],
    "source_archive_hint": "0501_operator_dashboard_ui.md"
  },
  {
    "file": "LoopRunnerPanel.jsx",
    "path": "app/ui/components/LoopRunnerPanel.jsx",
    "type": "ui_component",
    "purpose": "Visual display of active loop agents and their status. Syncs to current loop_id, logs, and memory state.",
    "status": "missing_from_repo",
    "dependencies": [
      "app/memory/task_log.json",
      "app/memory/loop_summary.md"
    ],
    "source_archive_hint": "0501_operator_dashboard_ui.md"
  },
  {
    "file": "AgentLogViewer.jsx",
    "path": "app/ui/components/AgentLogViewer.jsx",
    "type": "ui_component",
    "purpose": "Shows detailed task logs for each agent in a loop. Pulls from task_log.json and error reports.",
    "status": "missing_from_repo",
    "dependencies": [
      "app/memory/task_log.json"
    ],
    "source_archive_hint": "0501_operator_dashboard_ui.md"
  },
  {
    "file": "skeptic_agent.py",
    "path": "plugins/agents/skeptic/skeptic_agent.py",
    "type": "agent",
    "purpose": "Flags summary confidence drop or belief mismatch using post_summary analysis. Registered via plugin system.",
    "status": "missing_from_repo",
    "dependencies": [
      "agent_plugin_storage.json",
      "loop_summary.py"
    ],
    "source_archive_hint": "0426_skeptic_plugin_refactor.md"
  },
  {
    "file": "philosopher_agent.py",
    "path": "plugins/agents/philosopher/philosopher_agent.py",
    "type": "agent",
    "purpose": "Performs belief alignment drift audits across historical loop behavior. Detects unused or degraded values.",
    "status": "missing_from_repo",
    "dependencies": [
      "PROMETHIOS_CORE.md",
      "belief_volatility_tracker.py"
    ],
    "source_archive_hint": "0426_belief_integrity_layer.md"
  },
  {
    "file": "reconciler_agent.py",
    "path": "plugins/agents/reconciler/reconciler_agent.py",
    "type": "agent",
    "purpose": "Detects contradiction between finalized loop summaries. Recommends Operator or SAGE intervention.",
    "status": "missing_from_repo",
    "dependencies": [
      "loop_summary_drift_report.json",
      "loop_trace.schema.json"
    ],
    "source_archive_hint": "0426_loop_contradiction_handling.md"
  },
  {
    "file": "trust_score_manager.py",
    "path": "plugins/agents/trust_score_manager/trust_score_manager.py",
    "type": "agent",
    "purpose": "Adjusts agent-level trust weighting based on loop rerun history, success rate, and fatigue flags.",
    "status": "missing_from_repo",
    "dependencies": [
      "loop_trace.json",
      "agent_plugin_storage.json"
    ],
    "source_archive_hint": "0426_agent_rerun_scoring_layer.md"
  },
  {
    "file": "symbolist_agent.py",
    "path": "plugins/agents/symbolist/symbolist_agent.py",
    "type": "agent",
    "purpose": "Infers symbolic tone, emotion, and visual metaphor for finalized memory loops. Used in Life Tree and Ritual mode.",
    "status": "missing_from_repo",
    "dependencies": [
      "symbolic_classifier.py",
      "loop_summary.py"
    ],
    "source_archive_hint": "0426_emotional_encoding_pathways.md"
  },
  {
    "file": "agent_registry_bootstrap.py",
    "path": "app/modules/agent_registry_bootstrap.py",
    "type": "bootloader",
    "purpose": "Ensures all core agents (HAL, NOVA, CRITIC, ASH, SAGE) are registered at startup from a single entry point.",
    "status": "missing_from_repo",
    "dependencies": [
      "app/modules/agent_registry.py",
      "app/modules/register_all_agents.py"
    ],
    "source_archive_hint": "0501_registry_unification_patch.md"
  },
  {
    "file": "agent_loop_debug_log.json",
    "path": "app/memory/agent_loop_debug_log.json",
    "type": "execution_log",
    "purpose": "Stores each agent's raw execution trace, input task, and output. Used for tracking cognition flow across loops.",
    "status": "missing_from_repo",
    "dependencies": [
      "app/routes/loop_routes.py",
      "app/agents/"
    ],
    "source_archive_hint": "0501_loop_debug_replay_log.md"
  },
  {
    "file": "agent_registry_status.json",
    "path": "logs/agent_registry_status.json",
    "type": "registry_snapshot",
    "purpose": "Stores current agent registration state including agent_id, file path, status, and function handler name for runtime auditing.",
    "status": "missing_from_repo",
    "dependencies": [
      "app/modules/agent_registry.py"
    ],
    "source_archive_hint": "0501_registry_unification_patch.md"
  },
  {
    "file": "agent_reflection_injector.py",
    "path": "app/validators/agent_reflection_injector.py",
    "type": "validator",
    "purpose": "Injects memory reflections into agent loop based on behavior patterns or loop review triggers.",
    "status": "missing_from_repo",
    "dependencies": [
      "app/memory/loop_summary.md",
      "app/memory/agent_loop_debug_log.json"
    ],
    "source_archive_hint": "0501_loop_reflection_injection.md"
  },
  {
    "file": "agent_registry_verification_test.py",
    "path": "tools/agent_registry_verification_test.py",
    "type": "test_tool",
    "purpose": "Unit test that ensures every agent listed in registry is callable, memory-safe, and matches expected function signature.",
    "status": "missing_from_repo",
    "dependencies": [
      "app/modules/agent_registry.py",
      "app/modules/register_all_agents.py"
    ],
    "source_archive_hint": "0501_registry_unification_patch.md"
  },
  {
    "file": "orchestrator_schemas.py",
    "path": "app/schemas/agents/orchestrator/orchestrator_schemas.py",
    "type": "discovered_archive",
    "purpose": "Discovered during archive extraction, not in conceptual plan.",
    "status": "discovered_in_archive",
    "dependencies": [],
    "source_archive_hint": "batch_unknown"
  },
  {
    "file": "sage_schemas.py",
    "path": "app/schemas/agents/sage/sage_schemas.py",
    "type": "discovered_archive",
    "purpose": "Discovered during archive extraction, not in conceptual plan.",
    "status": "discovered_in_archive",
    "dependencies": [],
    "source_archive_hint": "batch_unknown"
  },
  {
    "file": "agent_result.py",
    "path": "app/schemas/core/agent_result.py",
    "type": "discovered_archive",
    "purpose": "Discovered during archive extraction, not in conceptual plan.",
    "status": "discovered_in_archive",
    "dependencies": [],
    "source_archive_hint": "batch_unknown"
  },
  {
    "file": "agent_registry.py",
    "path": "app/core/agent_registry.py",
    "type": "discovered_archive",
    "purpose": "Discovered during archive extraction, not in conceptual plan.",
    "status": "discovered_in_archive",
    "dependencies": [],
    "source_archive_hint": "batch_unknown"
  },
  {
    "file": "sage_agent.py",
    "path": "app/agents/sage_agent.py",
    "type": "discovered_archive",
    "purpose": "Discovered during archive extraction, not in conceptual plan.",
    "status": "discovered_in_archive",
    "dependencies": [],
    "source_archive_hint": "batch_unknown"
  },
  {
    "file": "agent_types.py",
    "path": "app/core/agent_types.py",
    "type": "discovered_archive",
    "purpose": "Discovered during archive extraction, not in conceptual plan.",
    "status": "discovered_in_archive",
    "dependencies": [],
    "source_archive_hint": "batch_unknown"
  },
  {
    "file": "task_payload.py",
    "path": "app/schemas/core/task_payload.py",
    "type": "discovered_archive",
    "purpose": "Discovered during archive extraction, not in conceptual plan.",
    "status": "discovered_in_archive",
    "dependencies": [],
    "source_archive_hint": "batch_unknown"
  },
  {
    "file": "nova_agent.py",
    "path": "app/agents/nova_agent.py",
    "type": "discovered_archive",
    "purpose": "Discovered during archive extraction, not in conceptual plan.",
    "status": "discovered_in_archive",
    "dependencies": [],
    "source_archive_hint": "batch_unknown"
  },
  {
    "file": "forge_schemas.py",
    "path": "app/schemas/agents/forge/forge_schemas.py",
    "type": "discovered_archive",
    "purpose": "Discovered during archive extraction, not in conceptual plan.",
    "status": "discovered_in_archive",
    "dependencies": [],
    "source_archive_hint": "batch_unknown"
  },
  {
    "file": "registration_utils.py",
    "path": "app/core/registration_utils.py",
    "type": "discovered_archive",
    "purpose": "Discovered during archive extraction, not in conceptual plan.",
    "status": "discovered_in_archive",
    "dependencies": [],
    "source_archive_hint": "batch_unknown"
  },
  {
    "file": "forge_agent.py",
    "path": "app/agents/forge_agent.py",
    "type": "discovered_archive",
    "purpose": "Discovered during archive extraction, not in conceptual plan.",
    "status": "discovered_in_archive",
    "dependencies": [],
    "source_archive_hint": "batch_unknown"
  },
  {
    "file": "hal_agent.py",
    "path": "app/agents/hal_agent.py",
    "type": "discovered_archive",
    "purpose": "Discovered during archive extraction, not in conceptual plan.",
    "status": "discovered_in_archive",
    "dependencies": [],
    "source_archive_hint": "batch_unknown"
  },
  {
    "file": "base_agent.py",
    "path": "app/core/base_agent.py",
    "type": "discovered_archive",
    "purpose": "Discovered during archive extraction, not in conceptual plan.",
    "status": "discovered_in_archive",
    "dependencies": [],
    "source_archive_hint": "batch_unknown"
  },
  {
    "file": "critic_schemas.py",
    "path": "app/schemas/agents/critic/critic_schemas.py",
    "type": "discovered_archive",
    "purpose": "Discovered during archive extraction, not in conceptual plan.",
    "status": "discovered_in_archive",
    "dependencies": [],
    "source_archive_hint": "batch_unknown"
  },
  {
    "file": "hal_schemas.py",
    "path": "app/schemas/agents/hal/hal_schemas.py",
    "type": "discovered_archive",
    "purpose": "Discovered during archive extraction, not in conceptual plan.",
    "status": "discovered_in_archive",
    "dependencies": [],
    "source_archive_hint": "batch_unknown"
  },
  {
    "file": "nova_schemas.py",
    "path": "app/schemas/agents/nova/nova_schemas.py",
    "type": "discovered_archive",
    "purpose": "Discovered during archive extraction, not in conceptual plan.",
    "status": "discovered_in_archive",
    "dependencies": [],
    "source_archive_hint": "batch_unknown"
  },
  {
    "file": "orchestrator_agent.py",
    "path": "app/agents/orchestrator_agent.py",
    "type": "discovered_archive",
    "purpose": "Discovered during archive extraction, not in conceptual plan.",
    "status": "discovered_in_archive",
    "dependencies": [],
    "source_archive_hint": "batch_unknown"
  },
  {
    "file": "critic_agent.py",
    "path": "app/agents/critic_agent.py",
    "type": "discovered_archive",
    "purpose": "Discovered during archive extraction, not in conceptual plan.",
    "status": "discovered_in_archive",
    "dependencies": [],
    "source_archive_hint": "batch_unknown"
  },
  {
    "file": "loop_controller.py",
    "path": "app/core/loop_controller.py",
    "type": "discovered_archive",
    "purpose": "Discovered during archive extraction, not in conceptual plan.",
    "status": "discovered_in_archive",
    "dependencies": [],
    "source_archive_hint": "batch_unknown"
  },
  {
    "file": "loop_create_schema.py",
    "path": "app/schemas/loop/loop_create_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "trainer_schema.py",
    "path": "app/schemas/trainer_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "pessimist_router.py",
    "path": "app/routes/pessimist_router.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "module_audit_report.json",
    "path": "logs/module_audit_report.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "memory_recall_routes.py",
    "path": "app/routes/memory_recall_routes.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "historian_schema.py",
    "path": "app/schemas/historian_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "orchestrator_memory_enhanced.py",
    "path": "app/modules/orchestrator_memory_enhanced.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "identify_remaining_endpoints.py",
    "path": "tools/identify_remaining_endpoints.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "memory_fallback.json",
    "path": "logs/memory_fallback.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "sage_endpoint_test.py",
    "path": "tools/sage_endpoint_test.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "train_schema.py",
    "path": "app/schemas/train_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "agent_permissions.json",
    "path": "app/config/agent_permissions.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "ip_violation_scanner.py",
    "path": "app/modules/ip_violation_scanner.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "run_fresh_postman_sweep.py",
    "path": "tools/run_fresh_postman_sweep.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "direct_endpoint_fixer.py",
    "path": "tools/direct_endpoint_fixer.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "project_state_watch.py",
    "path": "app/modules/project_state_watch.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "postman_sweep_20250428_initial_backup.md",
    "path": "logs/postman_sweep_20250428_initial_backup.md",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "hal_openai_enhanced.py",
    "path": "app/modules/hal_openai_enhanced.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "final_deploy_debug.md",
    "path": "logs/deploy/final_deploy_debug.md",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "live_memory_inspection.py",
    "path": "app/modules/live_memory_inspection.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "loop_execution_guard.py",
    "path": "app/modules/loop_execution_guard.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "agent_routes.py",
    "path": "app/routes/agent_routes.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "delegate.py",
    "path": "app/modules/delegate.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "plan_chainer.py",
    "path": "app/modules/plan_chainer.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "output_schema.json",
    "path": "app/schemas/debug_analyzer/output_schema.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "agent_registry.py",
    "path": "app/modules/agent_registry.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "loop_resume_engine.py",
    "path": "app/modules/loop_resume_engine.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "task_tagger.py",
    "path": "app/core/task_tagger.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "reflection_chain_weaver.py",
    "path": "app/modules/reflection_chain_weaver.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "hal_agent_registration_fix_20250425_155230.json",
    "path": "logs/hal_agent_registration_fix_20250425_155230.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "delegate_schema.py",
    "path": "app/schemas/delegate/delegate_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "loop_routes.py",
    "path": "app/routes/loop_routes.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "forge_build_20250426_0154.json",
    "path": "logs/postman_sweeps/forge_build_20250426_0154.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "agent_verify.py",
    "path": "app/modules/agent_verify.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "self_router.py",
    "path": "app/routes/self_router.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "generate_final_report.py",
    "path": "tools/generate_final_report.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "pessimist_schema.py",
    "path": "app/schemas/pessimist_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "safety_loop_summary.py",
    "path": "app/modules/safety_loop_summary.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "generate_summary_report.py",
    "path": "tools/generate_summary_report.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "live_endpoint_audit_report.json",
    "path": "logs/live_endpoint_audit_report.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "synthetic_identity_checker.py",
    "path": "app/modules/synthetic_identity_checker.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "forge_schema.py",
    "path": "app/schemas/forge_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "input_schema.json",
    "path": "app/schemas/observer/input_schema.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "pessimist_agent.py",
    "path": "app/modules/pessimist_agent.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "persona_routes.py",
    "path": "app/routes/persona_routes.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "project_memory.py",
    "path": "app/memory/project_memory.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "agent_manifest.json",
    "path": "config/agent_manifest.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "guardian_router.py",
    "path": "app/routes/guardian_router.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "remaining_non_operational_endpoints.json",
    "path": "logs/remaining_non_operational_endpoints.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "export.py",
    "path": "app/modules/export.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "belief_versioning.py",
    "path": "app/modules/belief_versioning.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "system_caps.json",
    "path": "config/system_caps.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "input_schema.json",
    "path": "app/schemas/critic/input_schema.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "memory_block_writer.py",
    "path": "app/modules/memory_block_writer.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "drift_routes_router.py",
    "path": "app/routes/drift_routes_router.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "orchestrator_plan_routes.py",
    "path": "app/routes/orchestrator_plan_routes.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "__init__.py",
    "path": "app/schemas/__init__.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "manus_mission_zero.md",
    "path": "logs/diagnostics/manus_mission_zero.md",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "send_schema.py",
    "path": "app/schemas/message/send_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "hal_sandbox_bypass.json",
    "path": "logs/hal_sandbox_bypass.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "agent_runner.py",
    "path": "app/modules/agent_runner.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "output_schema.json",
    "path": "app/schemas/nova/output_schema.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "output_policy_routes.py",
    "path": "app/routes/output_policy_routes.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "sage_routes.py",
    "path": "app/routes/sage_routes.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "plan_execution_schemas.py",
    "path": "app/schemas/plan_execution_schemas.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "drift_auto_healer.py",
    "path": "app/modules/drift_auto_healer.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "export_schema.py",
    "path": "app/schemas/export_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "final_validation_results.json",
    "path": "logs/final_validation_results.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "cto_review_schema.py",
    "path": "app/schemas/agent/cto_review_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "future_expansion_tickler.jsonl",
    "path": "logs/future_expansion_tickler.jsonl",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "schema_trace.py",
    "path": "tools/schema_trace.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "react_generator.py",
    "path": "app/modules/code_generation/react_generator.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "critic_agent.py",
    "path": "app/modules/critic_agent.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "deployment_fix_analysis.json",
    "path": "logs/deployment_fix_analysis.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "input_schema.json",
    "path": "app/schemas/sage/input_schema.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "loop_surface_map.json",
    "path": "config/loop_surface_map.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "prioritize_endpoints.py",
    "path": "tools/prioritize_endpoints.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "agent_context.py",
    "path": "app/modules/agent_context.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "task_state_manager.py",
    "path": "app/core/task_state_manager.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "plan_generate_schema.py",
    "path": "app/schemas/plan_generate_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "memory_embed.py",
    "path": "app/modules/memory_embed.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "test_memory_thread.py",
    "path": "app/modules/test_memory_thread.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "pessimist_bias_tracking.py",
    "path": "app/modules/pessimist_bias_tracking.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "orchestrator_router.py",
    "path": "app/routes/orchestrator_router.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "test_health_monitor.py",
    "path": "tools/test_health_monitor.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "test_llm_infer.py",
    "path": "app/modules/test_llm_infer.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "schema_route_mapping.json",
    "path": "logs/schema_route_mapping.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "memory_routes.py",
    "path": "app/routes/memory_routes.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "module_audit.py",
    "path": "tools/module_audit.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "input_gateway.py",
    "path": "app/core/input_gateway.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "reflection_grader.py",
    "path": "app/modules/reflection_grader.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "simplified_final_report.py",
    "path": "tools/simplified_final_report.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "tool_router.py",
    "path": "app/core/tool_router.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "agent_runner_retry_integration.py",
    "path": "app/modules/agent_runner_retry_integration.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "loop.py",
    "path": "app/modules/loop.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "generate_final_snapshot.py",
    "path": "tools/generate_final_snapshot.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "main_py_patcher.py",
    "path": "tools/main_py_patcher.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "debug_schema.py",
    "path": "app/schemas/debug_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "schema_parser.py",
    "path": "tools/schema_parser.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "planner_orchestrator.py",
    "path": "app/core/planner_orchestrator.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "fix_routes.py",
    "path": "app/routes/fix_routes.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "self_reflection_schema.py",
    "path": "app/schemas/self_reflection_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "baseline_surface_drift_v1.0_20250427.txt",
    "path": "logs/baseline_surface_drift_v1.0_20250427.txt",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "memory_writer.py",
    "path": "app/modules/memory_writer.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "test_phase3_endpoints.py",
    "path": "tools/test_phase3_endpoints.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "vector_memory.py",
    "path": "app/core/vector_memory.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "endpoint_drift_report_20250427.json",
    "path": "logs/endpoint_drift_report_20250427.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "system_manifest.py",
    "path": "app/core/system_manifest.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "loop_trace.schema.v1.0.2.json",
    "path": "app/loop/debug/loop_trace.schema.v1.0.2.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "task_supervisor.py",
    "path": "app/modules/task_supervisor.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "sage_beliefs_routes.py",
    "path": "app/routes/sage_beliefs_routes.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "core_router.py",
    "path": "app/routes/core_router.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "project_schema.py",
    "path": "app/schemas/project/project_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "generate_aci.py",
    "path": "tools/generate_aci.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "agent_router.py",
    "path": "app/core/agent_router.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "hal_memory_patch.py",
    "path": "app/modules/hal_memory_patch.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "route_reconstruction_log_final.json",
    "path": "logs/route_reconstruction_log_final.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "endpoint_status_verification.json",
    "path": "logs/endpoint_status_verification.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "snapshot_latest.json",
    "path": "system/snapshot_latest.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "core_beliefs.json",
    "path": "app/memory/core_beliefs.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "agent_context_routes.py",
    "path": "app/routes/agent_context_routes.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "hal_agent.schema.json",
    "path": "app/schemas/hal_agent.schema.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "delegate_stream_schema.py",
    "path": "app/schemas/delegate/delegate_stream_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "loop_map_visualizer.py",
    "path": "app/modules/loop_map_visualizer.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "plan_chain_schemas.py",
    "path": "app/schemas/plan_chain_schemas.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "__init__.py",
    "path": "app/modules/critic/__init__.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "error_logger.py",
    "path": "app/core/error_logger.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "pr_template_created_20250427.txt",
    "path": "logs/pr_template_created_20250427.txt",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "system_manifest.json",
    "path": "system/system_manifest.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "loop_trace_schema.py",
    "path": "app/schemas/loop/loop_trace_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "task_state_log.json",
    "path": "app/core/task_state_log.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "memory_api_quota_guard.py",
    "path": "app/core/memory_api_quota_guard.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "nova_agent.py",
    "path": "app/modules/nova_agent.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "analyze_prompt_schema.py",
    "path": "app/schemas/agent/analyze_prompt_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "agent_registry.json",
    "path": "app/config/agent_registry.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "router_import_analyzer.py",
    "path": "tools/router_import_analyzer.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "fix.py",
    "path": "app/modules/fix.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "memory_get_key_schema.py",
    "path": "app/schemas/memory/memory_get_key_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "shared_memory.py",
    "path": "app/core/shared_memory.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "reflection_chain_schemas.py",
    "path": "app/schemas/reflection_chain_schemas.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "agent_trust_delta_monitoring.py",
    "path": "app/modules/agent_trust_delta_monitoring.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "reset_flags.py",
    "path": "app/modules/reset_flags.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "test_endpoints.py",
    "path": "tools/test_endpoints.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "drift_schema.py",
    "path": "app/schemas/drift_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "system_manifest.json",
    "path": "config/system_manifest.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "batch1_validation_report_20250428_184652.md",
    "path": "logs/batch1_validation_report_20250428_184652.md",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "auditor_agent.py",
    "path": "app/modules/auditor_agent.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "orchestrator_build.py",
    "path": "app/modules/orchestrator_build.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "__init__.py",
    "path": "app/modules/__init__.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "train_routes.py",
    "path": "app/routes/train_routes.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "__init__.py",
    "path": "app/schemas/memory/__init__.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "sitegen_routes.py",
    "path": "app/routes/sitegen_routes.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "promethios_observations.md",
    "path": "logs/observation/promethios_observations.md",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "freeze_controller.py",
    "path": "app/modules/freeze_controller.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "plancreate_schemas.py",
    "path": "app/schemas/plancreate_schemas.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "main_update.py",
    "path": "app/core/main_update.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "__init__.py",
    "path": "app/modules/code_generation/__init__.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "reflection_schemas.py",
    "path": "app/schemas/reflection_schemas.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "memory_thread.py",
    "path": "app/modules/memory_thread.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "project_manifest.py",
    "path": "app/modules/project_manifest.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "input_schema.json",
    "path": "app/schemas/sitegen/input_schema.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "system_manifest.json",
    "path": "app/core/system_manifest.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "ash_agent.py",
    "path": "app/modules/ash_agent.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "debugger_routes.py",
    "path": "app/routes/debugger_routes.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "reflection_router.py",
    "path": "app/routes/reflection_router.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "planner_agent_enhancer.py",
    "path": "app/core/planner_agent_enhancer.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "route_reconstruction_log.json",
    "path": "logs/route_reconstruction_log.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "postman_sweep_20250428.json",
    "path": "logs/postman_sweep_20250428.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "router_import_analysis.json",
    "path": "logs/router_import_analysis.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "reflection_fatigue_scoring.py",
    "path": "app/modules/reflection_fatigue_scoring.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "__init__.py",
    "path": "app/memory/__init__.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "execute_chain.py",
    "path": "app/modules/plan/execute_chain.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "aci_pice_fragmentation_report.json",
    "path": "logs/aci_pice_fragmentation_report.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "ash_routes.py",
    "path": "app/routes/ash_routes.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "execute_routes.py",
    "path": "app/routes/execute_routes.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "__init__.py",
    "path": "app/core/middleware/__init__.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "train.py",
    "path": "app/modules/train.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "rerun_decision.py",
    "path": "app/schemas/rerun_decision.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "fix_validation_results.json",
    "path": "logs/fix_validation_results.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "system_caps.json",
    "path": "app/config/system_caps.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "nova_test_strategy.py",
    "path": "app/modules/logic/test/nova_test_strategy.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "debugger_router.py",
    "path": "app/routes/debugger_router.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "self_reinforcement_schema.py",
    "path": "app/schemas/self_reinforcement_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "validate_schema_hash.py",
    "path": "app/schemas/validate_schema_hash.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "input_schema.json",
    "path": "app/schemas/lifetree/input_schema.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "review.py",
    "path": "app/modules/critic/review.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "escalation_manager.py",
    "path": "app/core/escalation_manager.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "orchestrator_logic.py",
    "path": "app/modules/orchestrator_logic.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "export_routes.py",
    "path": "app/routes/export_routes.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "non_operational_endpoints.json",
    "path": "logs/non_operational_endpoints.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "project_state.py",
    "path": "app/modules/project_state.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "orchestrator_drift_integration.py",
    "path": "app/modules/orchestrator_drift_integration.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "openai_client.py",
    "path": "app/core/openai_client.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "agent_discovery_report.json",
    "path": "app/core/agent_discovery_report.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "batch1_validation_summary.json",
    "path": "logs/batch1_validation_summary.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "step_type_enum.py",
    "path": "app/schemas/memory/step_type_enum.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "health_monitor_schema.py",
    "path": "app/schemas/health_monitor_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "analyze_deployment_impact.py",
    "path": "tools/analyze_deployment_impact.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "planupdate_schemas.py",
    "path": "app/schemas/planupdate_schemas.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "nova_strategy_default.py",
    "path": "app/modules/logic/nova_strategy_default.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "test_phase_6_1_project.json",
    "path": "app/modules/project_states/test_phase_6_1_project.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "batch2_validation_summary.json",
    "path": "logs/batch2_validation_summary.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "scope.py",
    "path": "app/modules/plan/scope.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "loop_trace.py",
    "path": "app/schemas/loop_trace.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "postman_sweep_after_rewire.json",
    "path": "logs/postman_sweep_after_rewire.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "agent_context_schema.py",
    "path": "app/schemas/agent_context_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "cognitive_continuity_integration.py",
    "path": "app/modules/cognitive_continuity_integration.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "agent_list_schema.py",
    "path": "app/schemas/agent/agent_list_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "loop_validation.py",
    "path": "app/modules/loop_validation.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "output_policy_enforcer.py",
    "path": "app/modules/output_policy_enforcer.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "drift_healing_schemas.py",
    "path": "app/schemas/drift_healing_schemas.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "hal_openai.py",
    "path": "app/modules/hal_openai.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "loop_summary_validator.py",
    "path": "app/modules/loop_summary_validator.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "nova_routes.py",
    "path": "app/routes/nova_routes.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "schema_breadcrumbs_analysis.json",
    "path": "logs/schema_breadcrumbs_analysis.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "agent_permission_validator.py",
    "path": "app/modules/agent_permission_validator.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "pessimist_evaluation_routes.py",
    "path": "app/routes/pessimist_evaluation_routes.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "execution_chain_logger.py",
    "path": "app/core/execution_chain_logger.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "agent_create.py",
    "path": "app/modules/agent_create.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "agent_reflection.py",
    "path": "app/modules/agent_reflection.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "sitegen_router.py",
    "path": "app/routes/sitegen_router.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "deployment_impact_analysis.json",
    "path": "logs/deployment_impact_analysis.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "root_schema.py",
    "path": "app/schemas/root/root_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "debug_status_implementation_20250425_172600.json",
    "path": "logs/debug_status_implementation_20250425_172600.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "critic_schema.py",
    "path": "app/schemas/critic_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "cto_routes.py",
    "path": "app/routes/cto_routes.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "hal_deploy_fs_trace_20250425_145630.json",
    "path": "logs/hal_deploy_fs_trace_20250425_145630.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "endpoint_fix_results.json",
    "path": "logs/endpoint_fix_results.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "agent_loop_trigger.py",
    "path": "app/modules/agent_loop_trigger.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "memory_summarizer_project.py",
    "path": "app/modules/memory_summarizer_project.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "logic_registry_validator.py",
    "path": "app/modules/logic_registry_validator.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "fix_schema.py",
    "path": "app/schemas/fix_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "upload_file_routes.py",
    "path": "app/routes/upload_file_routes.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "orchestrator_scope.py",
    "path": "app/modules/orchestrator_scope.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "execution_logger.py",
    "path": "app/core/execution_logger.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "ash_schema.py",
    "path": "app/schemas/ash_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "postmerge_validation_completion_report.md",
    "path": "logs/postmerge_validation_completion_report.md",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "critic_review_routes.py",
    "path": "app/routes/critic_review_routes.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "orchestrator_integration.py",
    "path": "app/modules/orchestrator_integration.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "observer_router.py",
    "path": "app/routes/observer_router.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "phase_3_1_planning_log_20250427.txt",
    "path": "logs/phase_3_1_planning_log_20250427.txt",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "__init__.py",
    "path": "app/core/__init__.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "builder_schema.py",
    "path": "app/schemas/builder/builder_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "hal_agent.schema.json",
    "path": "app/schemas/schemas/hal_agent.schema.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "memory_read_request_schema.py",
    "path": "app/schemas/memory/memory_read_request_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "seeding.py",
    "path": "app/core/seeding.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "endpoint_repair_priorities.json",
    "path": "logs/endpoint_repair_priorities.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "llm_infer.py",
    "path": "app/modules/llm_infer.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "critic_review_20250426_0155.json",
    "path": "logs/postman_sweeps/critic_review_20250426_0155.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "goal_schema.py",
    "path": "app/schemas/goal/goal_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "html_export_validator.py",
    "path": "app/modules/schema_compliance/html_export_validator.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "endpoint_validation_20250427.log",
    "path": "logs/endpoint_validation_20250427.log",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "schema_audit.py",
    "path": "tools/schema_audit.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "agent_config.py",
    "path": "app/modules/agent_config.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "output_schema.json",
    "path": "app/schemas/observer/output_schema.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "__init__.py",
    "path": "app/schemas/loop/__init__.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "reflection_styler.py",
    "path": "app/modules/reflection_styler.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "identify_non_operational_endpoints.py",
    "path": "tools/identify_non_operational_endpoints.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "memory_get_schema.py",
    "path": "app/schemas/memory/memory_get_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "agent_reflect.py",
    "path": "app/modules/agent_reflect.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "memory_config.py",
    "path": "app/modules/memory_config.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "generate_pice.py",
    "path": "tools/generate_pice.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "planexecution_schemas.py",
    "path": "app/schemas/planexecution_schemas.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "test_debug_analyzer.py",
    "path": "tools/test_debug_analyzer.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "schema_validation_integration.py",
    "path": "app/core/schema_validation_integration.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "health_monitor.py",
    "path": "app/modules/health_monitor.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "schema_error_report.json",
    "path": "logs/schema_error_report.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "orchestrator_present.py",
    "path": "app/modules/orchestrator_present.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "final_endpoint_repair_report.json",
    "path": "logs/final_endpoint_repair_report.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "batch1_validation_20250428_184453.json",
    "path": "logs/batch1_validation_20250428_184453.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "init_schema.py",
    "path": "app/schemas/utility/init_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "test_memory_summarize.py",
    "path": "app/modules/test_memory_summarize.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "loop_trace.schema.json",
    "path": "app/loop/debug/loop_trace.schema.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "persona_router.py",
    "path": "app/routes/persona_router.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "delegate_stream_output_schema.py",
    "path": "app/schemas/streaming/delegate_stream_output_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "loop_trace.schema.v1.0.0.json",
    "path": "app/loop/debug/loop_trace.schema.v1.0.0.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "snapshot_routes.py",
    "path": "app/routes/snapshot_routes.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "hal_route_failures.json",
    "path": "logs/hal_route_failures.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "memory_schema.py",
    "path": "app/schemas/memory_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "safety_integration.py",
    "path": "app/modules/safety_integration.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "agent_retry.py",
    "path": "app/modules/agent_retry.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "depth_controller.py",
    "path": "app/modules/depth_controller.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "tool_permissions.json",
    "path": "config/tool_permissions.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "memory.py",
    "path": "app/schemas/memory.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "drift_log_schemas.py",
    "path": "app/schemas/drift_log_schemas.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "agent_loader.py",
    "path": "app/core/agent_loader.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "memory_add_schema.py",
    "path": "app/schemas/memory/memory_add_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "scm_snapshot_batch2_start_20250429.json",
    "path": "system/scm_snapshot_batch2_start_20250429.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "pessimist_evaluation_schema.py",
    "path": "app/schemas/pessimist_evaluation_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "historian_drift_report.py",
    "path": "app/modules/historian_drift_report.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "loop_router.py",
    "path": "app/routes/loop_router.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "drift_monitor.py",
    "path": "app/modules/drift_monitor.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "implement_endpoint_fixes.py",
    "path": "tools/implement_endpoint_fixes.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "passive_reflection.py",
    "path": "app/modules/passive_reflection.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "edit_prompt_schema.py",
    "path": "app/schemas/control/edit_prompt_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "debug_tracker_annotated.md",
    "path": "logs/debug_tracker_annotated.md",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "agent_registry_enhanced.py",
    "path": "app/core/agent_registry_enhanced.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "nudge_manager.py",
    "path": "app/core/nudge_manager.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "checklist_schema.json",
    "path": "app/schemas/checklist_schema.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "post_loop_summary_handler.py",
    "path": "app/modules/post_loop_summary_handler.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "reflectionchain_schemas.py",
    "path": "app/schemas/reflectionchain_schemas.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "orchestrator_contract_routes.py",
    "path": "app/routes/orchestrator_contract_routes.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "memory_write_schema.py",
    "path": "app/schemas/memory/memory_write_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "output_schema.json",
    "path": "app/schemas/neureal/output_schema.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "nova_schema.py",
    "path": "app/schemas/nova_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "delegate_stream_routes.py",
    "path": "app/routes/delegate_stream_routes.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "forge_routes.py",
    "path": "app/routes/forge_routes.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "memory_recall_schema.py",
    "path": "app/schemas/memory_recall_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "instruction_validator.py",
    "path": "app/modules/instruction_validator.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "sage_router.py",
    "path": "app/routes/sage_router.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "loop_snapshot_schema.py",
    "path": "app/schemas/loop_snapshot_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "orchestrator_schema.py",
    "path": "app/schemas/orchestrator_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "orchestrator.py",
    "path": "app/core/orchestrator.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "memory_read_schema.py",
    "path": "app/schemas/memory/memory_read_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "direct_fix_implementation_results.json",
    "path": "logs/direct_fix_implementation_results.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "system_consciousness_index.json",
    "path": "system/system_consciousness_index.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "startup_validation_install_log_20250427.txt",
    "path": "logs/startup_validation_install_log_20250427.txt",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "boot.py",
    "path": "app/core/boot.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "agent_router.py",
    "path": "app/routes/agent_router.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "hal_code_generator.py",
    "path": "app/modules/code_generation/hal_code_generator.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "project_schemas.py",
    "path": "app/schemas/project_schemas.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "loop_lineage_export_system.py",
    "path": "app/modules/loop_lineage_export_system.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "memory_recall.py",
    "path": "app/modules/memory_recall.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "historian_router.py",
    "path": "app/routes/historian_router.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "schema_compatibility_checker.py",
    "path": "app/loop/debug/schema_compatibility_checker.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "symbolic_memory_encoder.py",
    "path": "app/modules/symbolic_memory_encoder.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "drift_history.jsonl",
    "path": "logs/drift_history.jsonl",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "__init__.py",
    "path": "app/modules/plan/__init__.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "reflection_scanner.py",
    "path": "app/modules/reflection_scanner.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "domain_sensitivity_flagging.py",
    "path": "app/modules/domain_sensitivity_flagging.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "loop_intent_sanitizer.py",
    "path": "app/modules/loop_intent_sanitizer.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "drifthealing_schemas.py",
    "path": "app/schemas/drifthealing_schemas.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "agent_config_schema.py",
    "path": "app/schemas/agent_config_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "debug_routes.py",
    "path": "app/routes/debug_routes.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "loop_schema.py",
    "path": "app/schemas/loop_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "trust_router.py",
    "path": "app/routes/trust_router.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "agent_cognition_schema.json",
    "path": "app/schemas/agent_cognition_schema.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "summary_realism_scorer.py",
    "path": "app/modules/summary_realism_scorer.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "visual_settings_validator.py",
    "path": "app/modules/schema_compliance/visual_settings_validator.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "loop_hardening_integration.py",
    "path": "app/modules/loop_hardening_integration.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "schema_validation.py",
    "path": "app/modules/schema_compliance/schema_validation.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "memory_embed_routes.py",
    "path": "app/routes/memory_embed_routes.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "delegate_input_schema.py",
    "path": "app/schemas/delegate/delegate_input_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "analyze_prompt_schema.py",
    "path": "app/schemas/utility/analyze_prompt_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "output_policy_schema.py",
    "path": "app/schemas/output_policy_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "guardian_routes.py",
    "path": "app/routes/guardian_routes.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "memory_manager.py",
    "path": "app/core/memory_manager.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "phase_3_3a_critical_surface_repair_log_20250428.txt",
    "path": "logs/phase_3_3a_critical_surface_repair_log_20250428.txt",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "agent_contracts.json",
    "path": "app/config/agent_contracts.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "task_persistence.py",
    "path": "app/core/task_persistence.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "system_component_map.json",
    "path": "system/system_component_map.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "tiered_orchestrator.py",
    "path": "app/modules/tiered_orchestrator.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "operator_alignment_profile_tracking.py",
    "path": "app/modules/operator_alignment_profile_tracking.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "orchestrator_contract_integration.py",
    "path": "app/modules/orchestrator_contract_integration.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "next_batch_priorities.json",
    "path": "logs/next_batch_priorities.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "md_export_validator.py",
    "path": "app/modules/schema_compliance/md_export_validator.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "memory_create_schema.py",
    "path": "app/schemas/memory/memory_create_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "cto_router.py",
    "path": "app/routes/cto_router.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "projects_schema.py",
    "path": "app/schemas/projects/projects_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "postman_sweep_after_deployment.json",
    "path": "logs/postman_sweep_after_deployment.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "context_schema.py",
    "path": "app/schemas/agent/context_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "sitegen_schema.py",
    "path": "app/schemas/sitegen_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "self_challenge_schema.py",
    "path": "app/schemas/self_challenge_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "hal_routes_loader.py",
    "path": "app/routes/hal_routes_loader.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "debugger_schema.py",
    "path": "app/schemas/debugger_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "final_route_status.json",
    "path": "logs/final_route_status.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "observer_routes.py",
    "path": "app/routes/observer_routes.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "orchestrator_routes.py",
    "path": "app/routes/orchestrator_routes.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "task_result.py",
    "path": "app/modules/task_result.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "self_evaluation.py",
    "path": "app/core/self_evaluation.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "PROMETHIOS_CORE.md",
    "path": "app/config/PROMETHIOS_CORE.md",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "cors.py",
    "path": "app/core/middleware/cors.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "drift_routes.py",
    "path": "app/routes/drift_routes.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "run_endpoint_tests.py",
    "path": "tools/run_endpoint_tests.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "module_drift.json",
    "path": "logs/module_drift.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "status_debug.py",
    "path": "app/routes/status_debug.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "memory_api_routes.py",
    "path": "app/routes/memory_api_routes.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "schema_diff_log.md",
    "path": "app/loop/debug/schema_diff_log.md",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "dashboard_routes.py",
    "path": "app/routes/dashboard_routes.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "debug_status.py",
    "path": "app/routes/debug_status.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "core_beliefs_integration.py",
    "path": "app/modules/core_beliefs_integration.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "task.py",
    "path": "app/modules/review/task.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "postman_sweep_20250428.md",
    "path": "logs/postman_sweep_20250428.md",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "execute_schema.py",
    "path": "app/schemas/execution/execute_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "plan_status_schemas.py",
    "path": "app/schemas/plan_status_schemas.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "rationale_logger.py",
    "path": "app/core/rationale_logger.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "aci_config.yaml",
    "path": "config/aci_config.yaml",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "trust_routes.py",
    "path": "app/routes/trust_routes.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "smart_sync_test_001.json",
    "path": "app/modules/project_states/smart_sync_test_001.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "health_monitor_routes.py",
    "path": "app/routes/health_monitor_routes.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "self_revision_schema.py",
    "path": "app/schemas/self_revision_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "agent_tool_runner.py",
    "path": "app/modules/agent_tool_runner.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "postman_sweep_20250428_second.json",
    "path": "logs/postman_sweep_20250428_second.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "sweep_comparison_20250428.md",
    "path": "logs/sweep_comparison_20250428.md",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "ceo_review_schema.py",
    "path": "app/schemas/agent/ceo_review_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "trust_score_evaluator.py",
    "path": "app/modules/trust_score_evaluator.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "critic_routes.py",
    "path": "app/routes/critic_routes.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "logic_loader.py",
    "path": "app/modules/logic_loader.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "endpoint_fix_implementation.json",
    "path": "logs/endpoint_fix_implementation.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "schema_validation.py",
    "path": "app/modules/schema_validation.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "plan_routes.py",
    "path": "app/routes/plan_routes.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "system_audit_summary.json",
    "path": "logs/system_audit_summary.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "delegate.py",
    "path": "app/core/delegate.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "output_schema.json",
    "path": "app/schemas/lifetree/output_schema.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "reflection_analyzer.py",
    "path": "app/modules/reflection_analyzer.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "input_schema.json",
    "path": "app/schemas/debug_analyzer/input_schema.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "postman_sweep_live_snapshot_20250428.json",
    "path": "logs/postman_sweep_live_snapshot_20250428.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "prompt_manager.py",
    "path": "app/core/prompt_manager.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "register_all_agents.py",
    "path": "app/modules/register_all_agents.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "plan_generate.py",
    "path": "app/modules/plan_generate.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "memory_summarizer.py",
    "path": "app/modules/memory_summarizer.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "drift_summary_schema.py",
    "path": "app/schemas/drift/drift_summary_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "ceo_schema.py",
    "path": "app/schemas/ceo_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "snapshotrestore_schemas.py",
    "path": "app/schemas/snapshotrestore_schemas.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "debug_hal_schema.py",
    "path": "app/routes/debug_hal_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "debug_status_implementation_20250425_173120.json",
    "path": "logs/debug_status_implementation_20250425_173120.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "task_list_schema.py",
    "path": "app/schemas/task/task_list_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "output_schema.json",
    "path": "app/schemas/sage/output_schema.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "input_router.py",
    "path": "app/core/input_router.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "memory_embed_schema.py",
    "path": "app/schemas/memory_embed_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "route_audit.py",
    "path": "tools/route_audit.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "reflect.py",
    "path": "app/modules/reflect.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "snapshot_schemas.py",
    "path": "app/schemas/snapshot_schemas.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "startup_validation_installation_report.md",
    "path": "logs/startup_validation_installation_report.md",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "memory_summarize.py",
    "path": "app/modules/memory_summarize.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "agent_registry.py",
    "path": "app/core/agent_registry.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "recursive_reflection_engine.py",
    "path": "app/modules/recursive_reflection_engine.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "input_schema.json",
    "path": "app/schemas/nova/input_schema.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "final_endpoint_verification.json",
    "path": "logs/final_endpoint_verification.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "endpoint_fix_implementation_results.json",
    "path": "logs/endpoint_fix_implementation_results.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "orchestrator_memory.py",
    "path": "app/modules/orchestrator_memory.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "loopvalidate_schemas.py",
    "path": "app/schemas/loopvalidate_schemas.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "__init__.py",
    "path": "app/routes/__init__.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "loop_validation_schema.py",
    "path": "app/schemas/loop_validation_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "batch1_postman_sweep_updated.py",
    "path": "tools/batch1_postman_sweep_updated.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "nova_router.py",
    "path": "app/routes/nova_router.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "snapshotsave_schemas.py",
    "path": "app/schemas/snapshotsave_schemas.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "reflection_guardrails.py",
    "path": "app/modules/reflection_guardrails.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "forge_build_routes.py",
    "path": "app/routes/forge_build_routes.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "cto_schema.py",
    "path": "app/schemas/cto_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "memory_router.py",
    "path": "app/routes/memory_router.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "rerun_reasoning_logger.py",
    "path": "app/modules/rerun_reasoning_logger.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "hal_routes_router.py",
    "path": "app/routes/hal_routes_router.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "hal_routes.py",
    "path": "app/routes/hal_routes.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "agent_audit.py",
    "path": "tools/agent_audit.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "status.json",
    "path": "system/status.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "run_postman_sweep.py",
    "path": "tools/run_postman_sweep.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "endpoint_validation_sweep.py",
    "path": "tools/endpoint_validation_sweep.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "parallel_workflow_test.json",
    "path": "logs/diagnostics/parallel_workflow_test.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "loop_validate_20250426_0141.json",
    "path": "logs/postman_sweeps/loop_validate_20250426_0141.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "task_create_schema.py",
    "path": "app/schemas/task/task_create_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "agent_cognition_index.json",
    "path": "system/agent_cognition_index.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "planning_logic_integration.py",
    "path": "app/modules/planning_logic_integration.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "forge.py",
    "path": "app/core/forge.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "final_validation.py",
    "path": "tools/final_validation.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "rerun_decision_engine.py",
    "path": "app/modules/rerun_decision_engine.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "loop_ci_test_runner.py",
    "path": "app/modules/loop_ci_test_runner.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "output_schema.json",
    "path": "app/schemas/sitegen/output_schema.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "diagnostics_routes.py",
    "path": "app/routes/diagnostics_routes.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "critic_router.py",
    "path": "app/routes/critic_router.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "schema_breadcrumb_analyzer.py",
    "path": "tools/schema_breadcrumb_analyzer.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "verify_endpoint_status.py",
    "path": "tools/verify_endpoint_status.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "historian_routes.py",
    "path": "app/routes/historian_routes.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "memory_delete_schema.py",
    "path": "app/schemas/memory/memory_delete_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "delegate_stream_schema.py",
    "path": "app/schemas/delegate_stream_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "schema_trace_report.json",
    "path": "logs/schema_trace_report.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "pessimist_routes.py",
    "path": "app/routes/pessimist_routes.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "agent_audit_report.json",
    "path": "logs/agent_audit_report.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "loop_validator.py",
    "path": "app/modules/loop_validator.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "planchain_schemas.py",
    "path": "app/schemas/planchain_schemas.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "postmerge_validation_installation_log.md",
    "path": "logs/postmerge_validation_installation_log.md",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "agent_dispatch.py",
    "path": "app/modules/agent_dispatch.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "evaluate_schema.py",
    "path": "app/schemas/evaluation/evaluate_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "manifest_updater.py",
    "path": "tools/manifest_updater.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "openai_provider.py",
    "path": "app/core/openai_provider.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "agent_coordinator.py",
    "path": "app/core/agent_coordinator.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "self_routes.py",
    "path": "app/routes/self_routes.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "startup_drift_report_baseline_20250427.json",
    "path": "logs/startup_drift_report_baseline_20250427.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "sage_beliefs_schema.py",
    "path": "app/schemas/sage_beliefs_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "agent_contract_schema.py",
    "path": "app/schemas/agent_contract_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "loop_reset_schema.py",
    "path": "app/schemas/loop/loop_reset_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "system_status_schema.py",
    "path": "app/schemas/core/system_status_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "run.py",
    "path": "app/core/run.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "observer_schema.py",
    "path": "app/schemas/observer_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "sage_schema.py",
    "path": "app/schemas/sage_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "final_endpoint_verification.py",
    "path": "tools/final_endpoint_verification.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "agent_config_routes.py",
    "path": "app/routes/agent_config_routes.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "critic_agent.py",
    "path": "app/modules/review/critic_agent.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "schema_audit_report.json",
    "path": "logs/schema_audit_report.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "hal_path_resolution_fix_20250425_152530.json",
    "path": "logs/hal_path_resolution_fix_20250425_152530.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "chain_schema.py",
    "path": "app/schemas/orchestrator/chain_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "hal_routes_enhanced_fix_20250425_165400.json",
    "path": "logs/hal_routes_enhanced_fix_20250425_165400.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "plan_generate_routes.py",
    "path": "app/routes/plan_generate_routes.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "memory_module_fix_20250425_170430.json",
    "path": "logs/memory_module_fix_20250425_170430.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "hal_memory.py",
    "path": "app/modules/hal_memory.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "core_routes.py",
    "path": "app/routes/core_routes.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "validate_fixes.py",
    "path": "tools/validate_fixes.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "guardian_schema.py",
    "path": "app/schemas/guardian_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "plan_generate_20250426_0141.json",
    "path": "logs/postman_sweeps/plan_generate_20250426_0141.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "debug_router.py",
    "path": "app/routes/debug_router.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "reflection_routes.py",
    "path": "app/routes/reflection_routes.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "delegate_stream.py",
    "path": "app/modules/delegate_stream.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "debug_tracker.md",
    "path": "logs/debug_tracker.md",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "endpoint_fixer.py",
    "path": "tools/endpoint_fixer.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "postman_sweep_after_deploy.json",
    "path": "logs/postman_sweep_after_deploy.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "toolkit_progress_log.json",
    "path": "logs/toolkit_progress_log.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "orchestrator_rewind.py",
    "path": "app/modules/orchestrator_rewind.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "agent_present.py",
    "path": "app/modules/agent_present.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "public_use_transparency_layer.py",
    "path": "app/modules/public_use_transparency_layer.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "input_router_report.json",
    "path": "logs/diagnostics/input_router_report.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "failing_routes_after_deploy.json",
    "path": "logs/failing_routes_after_deploy.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "orchestrator_router_fix_20250425_161010.json",
    "path": "logs/orchestrator_router_fix_20250425_161010.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "input_schema.json",
    "path": "app/schemas/neureal/input_schema.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "loop_validation_routes.py",
    "path": "app/routes/loop_validation_routes.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "plan_executor.py",
    "path": "app/modules/plan_executor.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "agent_surface_recovery_report_20250427.txt",
    "path": "logs/agent_surface_recovery_report_20250427.txt",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "batch3_validation_summary.json",
    "path": "logs/batch3_validation_summary.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "memory_store.json",
    "path": "app/modules/memory_store.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "confidence_retry.py",
    "path": "app/core/confidence_retry.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "thread_request_schema.py",
    "path": "app/schemas/memory/thread_request_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "behavior_manager.py",
    "path": "app/core/behavior_manager.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "logic_module_registry.json",
    "path": "app/modules/logic_module_registry.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "pessimist_evaluation.py",
    "path": "app/modules/pessimist_evaluation.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "loop_monitor.py",
    "path": "app/modules/loop_monitor.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "memory_context_reviewer.py",
    "path": "app/core/memory_context_reviewer.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "health_schema.py",
    "path": "app/schemas/core/health_schema.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "agent_fallback.py",
    "path": "app/modules/agent_fallback.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "output_schema.json",
    "path": "app/schemas/critic/output_schema.json",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "pice_config.yaml",
    "path": "config/pice_config.yaml",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "orchestrator_critic_integration.py",
    "path": "app/modules/orchestrator_critic_integration.py",
    "type": "discovered_repo",
    "purpose": "Discovered during repository scan, not in conceptual plan.",
    "status": "discovered_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "main.py",
    "path": "app/main.py",
    "type": "entry_point",
    "purpose": "Added during Batch 14.4 correction as it exists in repo but was missing from plan.",
    "status": "found_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "agent_registry.py",
    "path": "app/registries/agent_registry.py",
    "type": "registry",
    "purpose": "Added during Batch 14.4 correction as it exists in repo but was missing from plan.",
    "status": "found_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "validate_truth_surface.py",
    "path": "tools/validate_truth_surface.py",
    "type": "python_script",
    "purpose": "Added during Batch 14.4 correction as it exists in repo but was missing from plan.",
    "status": "found_in_repo",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "architect_agent.py",
    "path": "app/agents/architect_agent.py",
    "type": "agent",
    "purpose": "Detects missing or incomplete components in the file tree, stubs new build targets, and generates recursive prompts for self-assembly.",
    "status": "to_be_built",
    "dependencies": [
      "app/memory/file_tree.json",
      "config/final_truth_surface_manifest.json"
    ]
  },
  {
    "file": "prompt_template_engine.py",
    "path": "app/modules/prompt_template_engine.py",
    "type": "planner_logic",
    "purpose": "Generates structured prompts for build, repair, or memory tasks based on schema references and operator history.",
    "status": "to_be_built",
    "dependencies": []
  },
  {
    "file": "reflection_thread.json",
    "path": "app/memory/reflection_thread.json",
    "type": "cognitive_log",
    "purpose": "Stores high-level reflections across loop cycles for recursive context chaining and belief evolution.",
    "status": "to_be_built",
    "dependencies": []
  },
  {
    "file": "conversation_memory.json",
    "path": "app/memory/conversation_memory.json",
    "type": "memory_surface",
    "purpose": "Stores ongoing interaction history between Operator and Orchestrator to inform suggestion logic.",
    "status": "to_be_built",
    "dependencies": []
  },
  {
    "file": "emotion_context_extractor.py",
    "path": "app/modules/emotion_context_extractor.py",
    "type": "nlp_tool",
    "purpose": "Extracts emotional tone and intent from Operator messages to guide prompt generation.",
    "status": "to_be_built",
    "dependencies": []
  },
  {
    "file": "nested_comment.schema.json",
    "path": "app/schemas/comments/nested_comment.schema.json",
    "type": "schema",
    "purpose": "Defines structure for threaded feedback and Operator\u2013Agent reflections.",
    "status": "to_be_built",
    "dependencies": []
  },
  {
    "file": "prompt_memory_plan.json",
    "path": "app/memory/prompt_memory_plan.json",
    "type": "meta_log",
    "purpose": "Maps past prompt chains to their resulting outputs to enable plan recovery and reusability.",
    "status": "to_be_built",
    "dependencies": []
  },
  {
    "file": "build_plan_history.json",
    "path": "logs/build_plan_history.json",
    "type": "log",
    "purpose": "Records all recursive build loops and completed scopes for future replay or adaptation.",
    "status": "to_be_built",
    "dependencies": []
  },
  {
    "file": "file_tree.json",
    "path": "app/memory/file_tree.json",
    "type": "memory_surface",
    "purpose": "Identified as missing during Batch 14.6 audit for recursive capabilities: Core memory surface representing the build plan.",
    "status": "to_be_built",
    "dependencies": [],
    "source_archive_hint": null
  },
  {
    "file": "build_error_handler.py",
    "path": "app/agents/build_error_handler.py",
    "type": "agent",
    "purpose": "Analyzes build failures, attempts basic recovery, logs detailed error context, and potentially escalates to Operator or triggers repair plans.",
    "status": "to_be_built",
    "dependencies": [
      "logs/build_plan_history.json",
      "app/memory/task_log.json"
    ]
  },
  {
    "file": "dependency_analyzer.py",
    "path": "app/modules/dependency_analyzer.py",
    "type": "module",
    "purpose": "Analyzes dependencies listed in the file tree plan to determine build order, identify circular dependencies, and inform the Architect agent.",
    "status": "to_be_built",
    "dependencies": [
      "app/memory/file_tree.json"
    ]
  },
  {
    "file": "resource_monitor.py",
    "path": "app/modules/resource_monitor.py",
    "type": "module",
    "purpose": "Monitors system resources (CPU, memory, disk) during build processes to detect potential issues and prevent runaway builds.",
    "status": "to_be_built",
    "dependencies": []
  },
  {
    "file": "CoreBeliefsViewer.jsx",
    "path": "app/ui/components/CoreBeliefsViewer.jsx",
    "type": "ui_component",
    "status": "to_be_built",
    "purpose": "Renders core_beliefs.json for Operator review",
    "dependencies": [
      "app/memory/core_beliefs.json"
    ]
  },
  {
    "file": "AgentLoopDebugLogViewer.jsx",
    "path": "app/ui/components/AgentLoopDebugLogViewer.jsx",
    "type": "ui_component",
    "status": "to_be_built",
    "purpose": "Renders agent_loop_debug_log.json for Operator review",
    "dependencies": [
      "app/memory/agent_loop_debug_log.json"
    ]
  },
  {
    "file": "SystemManifestViewer.jsx",
    "path": "app/ui/components/SystemManifestViewer.jsx",
    "type": "ui_component",
    "status": "to_be_built",
    "purpose": "Renders system_manifest.json for Operator review",
    "dependencies": [
      "system/system_manifest.json"
    ]
  },
  {
    "file": "ConversationMemoryViewer.jsx",
    "path": "app/ui/components/ConversationMemoryViewer.jsx",
    "type": "ui_component",
    "status": "to_be_built",
    "purpose": "Renders conversation_memory.json for Operator review",
    "dependencies": [
      "app/memory/conversation_memory.json"
    ]
  },
  {
    "file": "SnapshotLatestViewer.jsx",
    "path": "app/ui/components/SnapshotLatestViewer.jsx",
    "type": "ui_component",
    "status": "to_be_built",
    "purpose": "Renders snapshot_latest.json for Operator review",
    "dependencies": [
      "system/snapshot_latest.json"
    ]
  },
  {
    "file": "SaasComponentManifestViewer.jsx",
    "path": "app/ui/components/SaasComponentManifestViewer.jsx",
    "type": "ui_component",
    "status": "to_be_built",
    "purpose": "Renders saas_component_manifest.json for Operator review",
    "dependencies": [
      "app/memory/saas_component_manifest.json"
    ]
  },
  {
    "file": "AgentCognitionIndexViewer.jsx",
    "path": "app/ui/components/AgentCognitionIndexViewer.jsx",
    "type": "ui_component",
    "status": "to_be_built",
    "purpose": "Renders agent_cognition_index.json for Operator review",
    "dependencies": [
      "system/agent_cognition_index.json"
    ]
  },
  {
    "file": "BeliefIdentityCheckpointViewer.jsx",
    "path": "app/ui/components/BeliefIdentityCheckpointViewer.jsx",
    "type": "ui_component",
    "status": "to_be_built",
    "purpose": "Renders belief_identity_checkpoint.json for Operator review",
    "dependencies": [
      "app/memory/belief_identity_checkpoint.json"
    ]
  },
  {
    "file": "OperatorUnlockTrackerViewer.jsx",
    "path": "app/ui/components/OperatorUnlockTrackerViewer.jsx",
    "type": "ui_component",
    "status": "to_be_built",
    "purpose": "Renders operator_unlock_tracker.json for Operator review",
    "dependencies": [
      "app/memory/operator_unlock_tracker.json"
    ]
  },
  {
    "file": "RepairTriggerQueueViewer.jsx",
    "path": "app/ui/components/RepairTriggerQueueViewer.jsx",
    "type": "ui_component",
    "status": "to_be_built",
    "purpose": "Renders repair_trigger_queue.json for Operator review",
    "dependencies": [
      "app/memory/repair_trigger_queue.json"
    ]
  },
  {
    "file": "ScmSnapshotBatch2Start20250429Viewer.jsx",
    "path": "app/ui/components/ScmSnapshotBatch2Start20250429Viewer.jsx",
    "type": "ui_component",
    "status": "to_be_built",
    "purpose": "Renders scm_snapshot_batch2_start_20250429.json for Operator review",
    "dependencies": [
      "system/scm_snapshot_batch2_start_20250429.json"
    ]
  },
  {
    "file": "SystemConsciousnessIndexViewer.jsx",
    "path": "app/ui/components/SystemConsciousnessIndexViewer.jsx",
    "type": "ui_component",
    "status": "to_be_built",
    "purpose": "Renders system_consciousness_index.json for Operator review",
    "dependencies": [
      "system/system_consciousness_index.json"
    ]
  },
  {
    "file": "ReflectionThreadViewer.jsx",
    "path": "app/ui/components/ReflectionThreadViewer.jsx",
    "type": "ui_component",
    "status": "to_be_built",
    "purpose": "Renders reflection_thread.json for Operator review",
    "dependencies": [
      "app/memory/reflection_thread.json"
    ]
  },
  {
    "file": "LoopBeliefUnlockRequestViewer.jsx",
    "path": "app/ui/components/LoopBeliefUnlockRequestViewer.jsx",
    "type": "ui_component",
    "status": "to_be_built",
    "purpose": "Renders loop_belief_unlock_request.json for Operator review",
    "dependencies": [
      "app/memory/loop_belief_unlock_request.json"
    ]
  },
  {
    "file": "LoopSummaryDriftReportViewer.jsx",
    "path": "app/ui/components/LoopSummaryDriftReportViewer.jsx",
    "type": "ui_component",
    "status": "to_be_built",
    "purpose": "Renders loop_summary_drift_report.json for Operator review",
    "dependencies": [
      "app/memory/loop_summary_drift_report.json"
    ]
  },
  {
    "file": "SystemComponentMapViewer.jsx",
    "path": "app/ui/components/SystemComponentMapViewer.jsx",
    "type": "ui_component",
    "status": "to_be_built",
    "purpose": "Renders system_component_map.json for Operator review",
    "dependencies": [
      "system/system_component_map.json"
    ]
  },
  {
    "file": "SystemAcknowledgmentsViewer.jsx",
    "path": "app/ui/components/SystemAcknowledgmentsViewer.jsx",
    "type": "ui_component",
    "status": "to_be_built",
    "purpose": "Renders system_acknowledgments.json for Operator review",
    "dependencies": [
      "app/memory/system_acknowledgments.json"
    ]
  },
  {
    "file": "PromptMemoryPlanViewer.jsx",
    "path": "app/ui/components/PromptMemoryPlanViewer.jsx",
    "type": "ui_component",
    "status": "to_be_built",
    "purpose": "Renders prompt_memory_plan.json for Operator review",
    "dependencies": [
      "app/memory/prompt_memory_plan.json"
    ]
  },
  {
    "file": "StatusViewer.jsx",
    "path": "app/ui/components/StatusViewer.jsx",
    "type": "ui_component",
    "status": "to_be_built",
    "purpose": "Renders status.json for Operator review",
    "dependencies": [
      "system/status.json"
    ]
  }
]
[
  {
    "batch": "22.0",
    "title": "Implement Loop Archetype Classification",
    "phase": "Phase 22: Archetype Classification and Feedback",
    "prompt": "Objective: Classify the archetype of each loop based on its intent.\n1. **Dependency Check:** Ensure batch 16.1 is `verified: true`. Ensure `loop_intent.json` is being populated.\n2. **Define Archetypes:** Define a set of loop archetypes (e.g., Explore, Optimize, Refactor, Correct, Analyze, Validate, Configure) and criteria for classifying intent into these archetypes.\n3. **Implement Classifier:** Create `app/validators/archetype_classifier.py`. Implement logic to read loop intent and classify it into one of the defined archetypes. \n4. **Enhance Controller/Logging:** Modify `loop_controller.py` to call the classifier after reading intent. Log the classified archetype to `loop_summary.json` for the current loop.\n5. **Integration & Test:** Run loops (`loop_0027a`, `loop_0027b`) with intents designed to map to different archetypes.\n6. **Functional Validation:** Verify `loop_summary.json` entries for the test loops include the correctly classified archetype.\n7. **Update Status:** If validation succeeds, update this batch entry to set `verified: true`.\nRecovery: Debug classifier logic or controller integration. Refine archetype definitions if classification is inaccurate.Repo Sync Protocol Note:Before executing this batch, check whether the previous batch prompt resulted in a merged PR.  If no PR was created or merged, do not run `git pull` or reset the local repo.  Proceed with the current workspace state to preserve continuity of in-progress execution.",
    "components_to_build_or_verify": [
      "app/validators/archetype_classifier.py",
      "app/controllers/loop_controller.py",
      "app/memory/loop_summary.json"
    ],
    "expected_artifacts": [
      "/home/ubuntu/personal-ai-agent/app/validators/archetype_classifier.py",
      "/home/ubuntu/personal-ai-agent/app/memory/loop_summary.json",
      "/home/ubuntu/logs/loop_0027a_execution.log",
      "/home/ubuntu/logs/loop_0027b_execution.log"
    ],
    "verification_steps": [
      "Confirm `loop_summary.json` includes correctly classified archetypes for test loops.",
      "Update `verified` status for batch 22.0 to `true`."
    ],
    "dependencies": [
      "16.1"
    ],
    "verified": false
  },
  {
    "batch": "22.1",
    "title": "Implement Archetype Saturation Detection",
    "phase": "Phase 22: Archetype Classification and Feedback",
    "prompt": "Objective: Detect if the system is getting stuck in repetitive loop archetypes.\n1. **Dependency Check:** Ensure batch 22.0 is `verified: true`. Ensure `loop_summary.json` logs archetypes.\n2. **Implement Saturation Detector:** Create `app/validators/archetype_feedback_loop.py` (or enhance if basic version exists). Implement logic to analyze recent loop history (e.g., last N loops) from `loop_summary.json`. Detect if a single archetype dominates (e.g., >X% of recent loops). \n3. **Implement Feedback Logging:** Log the saturation status (e.g., archetype, saturation level, detection window) to a new file `/home/ubuntu/personal-ai-agent/app/memory/archetype_saturation_log.json`. This is feedback only; no action taken yet.\n4. **Integration & Test:** Seed `loop_summary.json` with a history showing archetype saturation. Run an analysis loop (`loop_0028`) that triggers the detector.\n5. **Functional Validation:** Verify `archetype_feedback_loop.py` executed. Verify `archetype_saturation_log.json` contains an entry correctly identifying the saturated archetype and level based on the seeded history.\n6. **Update Status:** If validation succeeds, update this batch entry to set `verified: true`.\nRecovery: Debug saturation detection logic or history analysis. Ensure logging occurs correctly.Repo Sync Protocol Note:Before executing this batch, check whether the previous batch prompt resulted in a merged PR.  If no PR was created or merged, do not run `git pull` or reset the local repo.  Proceed with the current workspace state to preserve continuity of in-progress execution.",
    "components_to_build_or_verify": [
      "app/validators/archetype_feedback_loop.py",
      "app/memory/archetype_saturation_log.json"
    ],
    "expected_artifacts": [
      "/home/ubuntu/personal-ai-agent/app/validators/archetype_feedback_loop.py",
      "/home/ubuntu/personal-ai-agent/app/memory/archetype_saturation_log.json",
      "/home/ubuntu/logs/loop_0028_execution.log"
    ],
    "verification_steps": [
      "Confirm saturation detector executed.",
      "Confirm `archetype_saturation_log.json` correctly identifies saturation from seeded history.",
      "Update `verified` status for batch 22.1 to `true`."
    ],
    "dependencies": [
      "22.0"
    ],
    "verified": false
  }
]
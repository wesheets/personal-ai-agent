{
  "phase_id": 23,
  "phase_title": "Phase 23: Uncertainty, Schema Review, Simplification & Invariants",
  "batches": [
    {
      "batch_id": "23.0",
      "title": "Implement Uncertainty Index & Introduce Simplification Incentives",
      "prompt": "Objective: Implement uncertainty calculation and initialize surfaces for simplification incentives.\n1. **Dependency Check:** Ensure Phase 22 is complete. Ensure `pessimist_agent.py` exists.\n2. **Define Uncertainty Factors:** Formalize calculation logic for `uncertainty_index` (0.0-1.0).\n3. **Implement Index Calculation:** Modify `pessimist_agent.py` (or `uncertainty_evaluator.py`) to calculate this index. Ensure output includes `uncertainty_index`.\n4. **Build Simplification Incentive Surface:** Create `app/memory/simplification_incentives.json` and schema.\n5. **Integration & Test:** Run loops (`loop_0033a`, `loop_0033b`) triggering low/high uncertainty.\n6. **Functional Validation:** Verify `uncertainty_index` calculated/logged. Verify incentive surface/schema created.\n7. **Log Wiring & Validate:** Follow standard procedures.\n8. **Update Status:** If validation succeeds, set `verified: true`. Recovery: Debug calculation or surface creation.",
      "components_to_build_or_verify": [
        "app/agents/pessimist_agent.py",
        "app/validators/uncertainty_evaluator.py",
        "app/memory/simplification_incentives.json",
        "app/schemas/simplification_incentives.schema.json"
      ],
      "expected_artifacts": [
        "/home/ubuntu/personal-ai-agent/app/memory/loop_justification_log.json",
        "/home/ubuntu/personal-ai-agent/app/memory/simplification_incentives.json",
        "/home/ubuntu/personal-ai-agent/app/schemas/simplification_incentives.schema.json",
        "/home/ubuntu/logs/loop_0033a_execution.log",
        "/home/ubuntu/logs/loop_0033b_execution.log"
      ],
      "verification_steps": [
        "Confirm `uncertainty_index` calculated and logged.",
        "Confirm simplification incentive surface/schema created.",
        "Confirm wiring validation passed.",
        "Update `verified` status for batch 23.0 to `true`."
      ],
      "dependencies": [
        "22.x"
      ],
      "verified": false
    },
    {
      "batch_id": "23.1",
      "title": "Implement Uncertainty Assessor & Simplification Incentive Logic",
      "prompt": "Objective: Implement agent logic for assessing uncertainty and proposing simplifications.\n1. **Dependency Check:** Ensure batch 23.0 is `verified: true`.\n2. **Implement Assessor Agent (Optional):** If needed, create/enhance `uncertainty_assessor_agent.py`.\n3. **Implement Simplification Incentive Logic:** Modify agents (e.g., Architect, Simplification Agent scaffold) to identify/propose simplifications. Implement logic to award tokens/budget (update `agent_cognitive_budget.json`) based on `simplification_incentives.json` rules upon successful validation.\n4. **Integration & Test:** Run loop (`loop_0034a`) proposing simplification. Run loop (`loop_0034b`) simulating success and budget update.\n5. **Functional Validation:** Verify proposals generated. Verify budget updated correctly based on incentive rules.\n6. **Log Wiring & Validate:** Follow standard procedures.\n7. **Update Status:** If validation succeeds, set `verified: true`. Recovery: Debug proposal/incentive logic.",
      "components_to_build_or_verify": [
        "app/validators/uncertainty_evaluator.py",
        "app/agents/uncertainty_assessor_agent.py",
        "app/agents/architect_agent.py",
        "app/memory/agent_cognitive_budget.json"
      ],
      "expected_artifacts": [
        "/home/ubuntu/personal-ai-agent/app/memory/agent_cognitive_budget.json",
        "/home/ubuntu/logs/loop_0034a_execution.log",
        "/home/ubuntu/logs/loop_0034b_execution.log"
      ],
      "verification_steps": [
        "Confirm simplification proposals generated.",
        "Confirm agent budget updated based on incentive rules.",
        "Confirm wiring validation passed.",
        "Update `verified` status for batch 23.1 to `true`."
      ],
      "dependencies": [
        "23.0",
        "21.1",
        "21.4"
      ],
      "verified": false
    },
    {
      "batch_id": "23.2",
      "title": "Implement Schema Change Review & Activate Uncertainty Escalation",
      "prompt": "Objective: Integrate schema change review and activate high uncertainty escalation influence.\n1. **Dependency Check:** Ensure batches 20.3, 22.2, 23.0 are `verified: true`.\n2. **Implement Schema Change Review:** Modify Critic/Pessimist/Controller to read proposals from `schema_change_request.json`. Implement review process (potentially involving Operator gate). Approved changes trigger schema updates (logged).\n3. **Activate Uncertainty Escalation:** Modify `loop_controller.py`. After Pessimist reports uncertainty (23.0), check if `uncertainty_index` > threshold. If true, *actively* halt loop, log to `uncertainty_escalation_log.json` (create if needed + schema), route plan to Operator Review Gate flagged as high uncertainty. Log the halt/escalation action clearly.\n4. **Integration & Test:** Run loop (`loop_0035a`) proposing schema change, test review flow. Run loop (`loop_0035b`) triggering high uncertainty escalation.\n5. **Functional Validation:** Verify schema review functions. Verify high uncertainty loop *actively* halted, logged, and escalated to Operator, with logs confirming the action.\n6. **Log Wiring & Validate:** Follow standard procedures.\n7. **Update Status:** If validation succeeds, set `verified: true`. Recovery: Debug schema review or uncertainty escalation activation logic.",
      "components_to_build_or_verify": [
        "app/agents/critic_agent.py",
        "app/agents/pessimist_agent.py",
        "app/controllers/loop_controller.py",
        "app/memory/schema_change_request.json",
        "app/memory/uncertainty_escalation_log.json",
        "app/schemas/uncertainty_escalation_log.schema.json"
      ],
      "expected_artifacts": [
        "/home/ubuntu/personal-ai-agent/app/memory/uncertainty_escalation_log.json",
        "Logs demonstrating active halt/escalation due to uncertainty",
        "/home/ubuntu/logs/loop_0035a_execution.log",
        "/home/ubuntu/logs/loop_0035b_execution.log",
        "/home/ubuntu/review_queue/plan_0035b.json"
      ],
      "verification_steps": [
        "Confirm schema change review process works.",
        "Confirm high uncertainty escalation actively halts, logs, and routes to Operator.",
        "Confirm wiring validation passed.",
        "Update `verified` status for batch 23.2 to `true`."
      ],
      "dependencies": [
        "20.3",
        "22.2",
        "23.0"
      ],
      "verified": false
    },
    {
      "batch_id": "23.3",
      "title": "Introduce Cognitive Invariant Ledger",
      "prompt": "Objective: Initialize surfaces for defining and tracking cognitive invariants.\n1. **Dependency Check:** Ensure batch 23.2 is `verified: true`.\n2. **Build Invariant Ledger Surface:** Create `app/memory/promethios_invariants.json` and schema.\n3. **Build Violation Log Surface:** Create `app/memory/invariant_violation_log.json` and schema.\n4. **Define Initial Invariant(s):** Populate `promethios_invariants.json` with initial core invariants, including complexity budget adherence (linking to Phase 22). Example: `{\"id\": \"complexity_budget_adherence\", ...}`.\n5. **Functional Validation:** Verify surfaces/schemas created. Verify initial invariants defined.\n6. **Log Wiring & Validate:** Follow standard procedures.\n7. **Update Status:** If validation succeeds, set `verified: true`. Recovery: Debug surface/schema creation or invariant definition.",
      "components_to_build_or_verify": [
        "app/memory/promethios_invariants.json",
        "app/schemas/promethios_invariants.schema.json",
        "app/memory/invariant_violation_log.json",
        "app/schemas/invariant_violation_log.schema.json"
      ],
      "expected_artifacts": [
        "/home/ubuntu/personal-ai-agent/app/memory/promethios_invariants.json",
        "/home/ubuntu/personal-ai-agent/app/schemas/promethios_invariants.schema.json",
        "/home/ubuntu/personal-ai-agent/app/memory/invariant_violation_log.json",
        "/home/ubuntu/personal-ai-agent/app/schemas/invariant_violation_log.schema.json"
      ],
      "verification_steps": [
        "Confirm invariant surfaces/schemas created.",
        "Confirm initial invariants defined, including complexity budget.",
        "Confirm wiring validation passed.",
        "Update `verified` status for batch 23.3 to `true`."
      ],
      "dependencies": [
        "23.2",
        "22.0"
      ],
      "verified": false
    },
    {
      "batch_id": "23.4",
      "title": "Phase 23 Mini-Validation: Active Uncertainty Escalation",
      "prompt": "Objective: Validate the *active influence* of the Uncertainty Escalation mechanism implemented/activated in Phase 23.2.\n1. **Dependency Check:** Ensure batch 23.2 is `verified: true`.\n2. **Define Scenario:** Create a test loop scenario (`loop_0036`) designed specifically to generate high uncertainty (e.g., novel task, conflicting beliefs, low justification strength) exceeding the defined threshold.\n3. **Execute Scenario:** Run `loop_0036`.\n4. **Functional Validation:** Analyze logs (`loop_0036_execution.log`, `uncertainty_escalation_log.json`, Operator review queue). Verify that: a) the loop was actively halted due to high uncertainty, b) the escalation was logged correctly, c) the plan was routed to the Operator review queue, d) the logs clearly state uncertainty as the reason for the halt/escalation.\n5. **Log Wiring & Validate:** Follow standard procedures.\n6. **Update Status:** If validation succeeds, set `verified: true`. Recovery: Debug uncertainty escalation activation logic in 23.2 or scenario design.",
      "components_to_build_or_verify": [
        "Loop execution environment",
        "Logging surfaces",
        "Operator review queue mechanism"
      ],
      "expected_artifacts": [
        "/home/ubuntu/logs/loop_0036_execution.log",
        "/home/ubuntu/personal-ai-agent/app/memory/uncertainty_escalation_log.json",
        "Entry in Operator review queue for loop_0036 plan",
        "Logs clearly demonstrating active halt/escalation due to uncertainty."
      ],
      "verification_steps": [
        "Confirm loop scenario executed.",
        "Confirm logs and review queue show active halt/escalation due to uncertainty.",
        "Confirm wiring validation passed.",
        "Update `verified` status for batch 23.4 to `true`."
      ],
      "dependencies": [
        "23.2"
      ],
      "verified": false
    }
  ]
}


import { useState, useEffect } from 'react';
import './SystemPanels.css';

export default function SystemSummaryPanel({ projectId }) {
  const [summary, setSummary] = useState('');
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    const fetchSummary = async () => {
      try {
        setLoading(true);
        const res = await fetch(`/api/system/summary?project_id=${projectId}`);
        if (!res.ok) {
          throw new Error(`Failed to fetch summary: ${res.status}`);
        }
        const data = await res.json();
        setSummary(data.summary);
        setError(null);
      } catch (err) {
        console.error('Error fetching system summary:', err);
        setError('Failed to load system summary');
      } finally {
        setLoading(false);
      }
    };

    fetchSummary();
    
    // Set up polling interval
    const intervalId = setInterval(fetchSummary, 15000); // Poll every 15 seconds
    
    // Clean up interval on component unmount
    return () => clearInterval(intervalId);
  }, [projectId]);

  if (loading && !summary) {
    return (
      <div className="system-panel">
        <div className="system-panel-header">
          <span className="icon">ðŸ§ </span>
          <h3>System Summary</h3>
        </div>
        <div className="animate-pulse system-panel-content">Generating summary...</div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="system-panel">
        <div className="system-panel-header">
          <span className="icon">ðŸ§ </span>
          <h3>System Summary</h3>
        </div>
        <div className="system-panel-content status-error">{error}</div>
      </div>
    );
  }

  return (
    <div className="system-panel">
      <div className="system-panel-header">
        <span className="icon">ðŸ§ </span>
        <h3>System Summary</h3>
      </div>
      
      {summary ? (
        <div className="system-panel-content">
          <p className="system-summary">{summary}</p>
          <div className="system-panel-footer">
            Generated by SAGE â€¢ Last updated: {new Date().toLocaleTimeString()}
          </div>
        </div>
      ) : (
        <div className="system-panel-content">No summary available yet. The system will generate one as agents work on your project.</div>
      )}
      
      <div className="system-panel-footer">
        <button 
          onClick={async () => {
            try {
              setLoading(true);
              const res = await fetch(`/api/system/summary`, {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                },
                body: JSON.stringify({ project_id: projectId }),
              });
              if (!res.ok) {
                throw new Error(`Failed to trigger summary generation: ${res.status}`);
              }
              // Wait a moment for the summary to generate
              setTimeout(async () => {
                const getRes = await fetch(`/api/system/summary?project_id=${projectId}`);
                if (getRes.ok) {
                  const data = await getRes.json();
                  setSummary(data.summary);
                }
                setLoading(false);
              }, 2000);
            } catch (err) {
              console.error('Error triggering summary generation:', err);
              setError('Failed to generate new summary');
              setLoading(false);
            }
          }}
          className="system-panel-button"
        >
          Refresh Summary
        </button>
      </div>
    </div>
  );
}

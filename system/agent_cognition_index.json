{
  "agents": [
    {
      "name": "ReflectionChainWeaver",
      "input_schema": [
        "reflection_id",
        "max_depth",
        "max_iterations",
        "goal_context"
      ],
      "output_schema": [
        "chain_id",
        "reflection_id",
        "nodes",
        "edges",
        "summary",
        "status"
      ],
      "registered_module": "reflection_registry.py",
      "status": "active",
      "api_surface": "/api/reflection",
      "memory_tag": "phase4.0_sprint1_cognitive_reflection_chain_activation"
    },
    {
      "name": "PlanChainer",
      "input_schema": [
        "reflection_id",
        "goal",
        "max_steps",
        "parameters"
      ],
      "output_schema": [
        "chain_id",
        "reflection_id",
        "steps",
        "estimated_completion_time",
        "status",
        "created_at"
      ],
      "registered_module": "plan_registry.py",
      "status": "active",
      "api_surface": "/api/plan"
    },
    {
      "name": "ReflectionScanner",
      "input_schema": [
        "scan_depth",
        "include_agents",
        "include_modules",
        "include_schemas",
        "filters"
      ],
      "output_schema": [
        "scan_id",
        "timestamp",
        "status",
        "reflection_nodes",
        "summary"
      ],
      "registered_module": "reflection_registry.py",
      "status": "active",
      "api_surface": "/api/reflection"
    },
    {
      "name": "ReflectionAnalyzer",
      "input_schema": [
        "reflection_id"
      ],
      "output_schema": [
        "ReflectionAnalysisResult",
        "ReflectionSummary"
      ],
      "registered_module": "reflection_registry.py",
      "status": "active",
      "api_surface": "/api/reflection"
    },
    {
      "name": "PlanExecutor",
      "input_schema": [
        "plan_id",
        "parameters",
        "timeout"
      ],
      "output_schema": [
        "execution_id",
        "plan_id",
        "status",
        "message",
        "started_at"
      ],
      "registered_module": "plan_registry.py",
      "status": "active",
      "api_surface": "/api/plan"
    },
    {
      "name": "PlanStatusRetriever",
      "input_schema": [
        "execution_id"
      ],
      "output_schema": [
        "execution_id",
        "plan_id",
        "status",
        "progress",
        "current_step",
        "message",
        "started_at",
        "updated_at"
      ],
      "registered_module": "plan_registry.py",
      "status": "active",
      "api_surface": "/api/plan"
    },
    {
      "name": "DriftAutoHealer",
      "input_schema": [
        "loop_id",
        "agent",
        "drift_log_id",
        "healing_strategy",
        "parameters"
      ],
      "output_schema": [
        "healing_id",
        "status",
        "loop_id",
        "agent",
        "healing_strategy",
        "started_at",
        "message"
      ],
      "registered_module": "drift_registry.py",
      "status": "active",
      "api_surface": "/api/drift"
    },
    {
      "name": "DriftLogRetriever",
      "input_schema": [
        "loop_id",
        "agent"
      ],
      "output_schema": [
        "status",
        "loop_id",
        "agent",
        "entries",
        "count"
      ],
      "registered_module": "drift_registry.py",
      "status": "active",
      "api_surface": "/api/drift"
    },
    {
      "name": "ReflectionTrigger",
      "input_schema": [
        "source",
        "context",
        "priority"
      ],
      "output_schema": [
        "reflection_id",
        "status",
        "message",
        "timestamp"
      ],
      "registered_module": "reflection_registry.py",
      "status": "active",
      "api_surface": "/api/reflection"
    },
    {
      "name": "ReflectionRetriever",
      "input_schema": [
        "reflection_id"
      ],
      "output_schema": [
        "reflection_id",
        "status",
        "source",
        "insights",
        "recommendations",
        "timestamp"
      ],
      "registered_module": "reflection_registry.py",
      "status": "active",
      "api_surface": "/api/reflection"
    },
    {
      "name": "DriftReporter",
      "input_schema": [
        "loop_id",
        "agent",
        "current_output_tag",
        "previous_output_tag",
        "snapshot_id",
        "threshold"
      ],
      "output_schema": [
        "status",
        "drift_log",
        "recommended_action"
      ],
      "registered_module": "drift_registry.py",
      "status": "active",
      "api_surface": "/api/drift"
    },
    {
      "name": "PlanCreator",
      "input_schema": [
        "title",
        "description",
        "steps"
      ],
      "output_schema": [
        "status",
        "message",
        "plan_id",
        "title",
        "description",
        "steps",
        "created_at"
      ],
      "registered_module": "plan_registry.py",
      "status": "active",
      "api_surface": "/api/plan"
    },
    {
      "name": "PlanRetriever",
      "input_schema": [
        "plan_id"
      ],
      "output_schema": [
        "status",
        "plan_id",
        "title",
        "description",
        "steps",
        "created_at"
      ],
      "registered_module": "plan_registry.py",
      "status": "active",
      "api_surface": "/api/plan"
    },
    {
      "name": "Ash",
      "input_schema": [
        "objective",
        "memory_trace"
      ],
      "output_schema": [
        "reflection",
        "action_plan"
      ],
      "registered_module": "agent_registry.py",
      "status": "active",
      "api_surface": "/api/agent"
    },
    {
      "name": "Ash",
      "input_schema": [
        "objective",
        "memory_trace"
      ],
      "output_schema": [
        "reflection",
        "risk_assessment"
      ],
      "registered_module": "agent_registry.py",
      "status": "active",
      "api_surface": "/api/agent"
    },
    {
      "name": "CEOAgent",
      "input_schema": [
        "loop_summary",
        "beliefs",
        "memory"
      ],
      "output_schema": [
        "ceo_insight",
        "satisfaction_trend"
      ],
      "registered_module": "agent_registry.py",
      "status": "active",
      "api_surface": "/api/agent"
    },
    {
      "name": "Core.Forge",
      "input_schema": [
        "objective",
        "memory_trace"
      ],
      "output_schema": [
        "reflection",
        "action_plan"
      ],
      "registered_module": "agent_registry.py",
      "status": "active",
      "api_surface": "/api/agent"
    },
    {
      "name": "Critic",
      "input_schema": [
        "loop_id",
        "agent_outputs",
        "project_id"
      ],
      "output_schema": [
        "status",
        "reflection",
        "scores",
        "rejection",
        "rejection_reason"
      ],
      "registered_module": "agent_registry.py",
      "status": "active",
      "api_surface": "/api/agent"
    },
    {
      "name": "CTO",
      "input_schema": [
        "project_id",
        "tools"
      ],
      "output_schema": [
        "status",
        "issues_found",
        "issues",
        "summary"
      ],
      "registered_module": "agent_registry.py",
      "status": "active",
      "api_surface": "/api/agent"
    },
    {
      "name": "Debugger",
      "input_schema": [
        "loop_id",
        "failure_logs",
        "memory",
        "loop_context"
      ],
      "output_schema": [
        "updated_memory",
        "failure_type",
        "patch_plan",
        "next_agent",
        "suggested_fix"
      ],
      "registered_module": "agent_registry.py",
      "status": "active",
      "api_surface": "/api/agent"
    },
    {
      "name": "GUARDIAN",
      "input_schema": [
        "alert_type",
        "severity",
        "description"
      ],
      "output_schema": [
        "status",
        "alert_id",
        "actions_taken",
        "system_status"
      ],
      "registered_module": "agent_registry.py",
      "status": "active",
      "api_surface": "/api/agent"
    },
    {
      "name": "HAL 9000",
      "input_schema": [
        "objective",
        "memory_trace"
      ],
      "output_schema": [
        "reflection",
        "action_plan"
      ],
      "registered_module": "agent_registry.py",
      "status": "active",
      "api_surface": "/api/agent"
    },
    {
      "name": "Historian",
      "input_schema": [
        "loop_id",
        "loop_summary",
        "recent_loops",
        "beliefs",
        "memory"
      ],
      "output_schema": [
        "updated_memory",
        "alignment_score",
        "missing_beliefs",
        "suggestion"
      ],
      "registered_module": "agent_registry.py",
      "status": "active",
      "api_surface": "/api/agent"
    },
    {
      "name": "MemoryAgent",
      "input_schema": [
        "objective",
        "memory_trace"
      ],
      "output_schema": [
        "reflection",
        "memory_summary"
      ],
      "registered_module": "agent_registry.py",
      "status": "active",
      "api_surface": "/api/memory"
    },
    {
      "name": "NOVA",
      "input_schema": [
        "task",
        "project_id",
        "tools"
      ],
      "output_schema": [
        "status",
        "message",
        "files_created",
        "ui_components"
      ],
      "registered_module": "agent_registry.py",
      "status": "active",
      "api_surface": "/api/agent"
    },
    {
      "name": "OBSERVER",
      "input_schema": [
        "task",
        "date",
        "tools"
      ],
      "output_schema": [
        "status",
        "message",
        "entry",
        "log_path"
      ],
      "registered_module": "agent_registry.py",
      "status": "active",
      "api_surface": "/api/agent"
    },
    {
      "name": "OpsAgent",
      "input_schema": [
        "objective",
        "memory_trace"
      ],
      "output_schema": [
        "reflection",
        "action_plan"
      ],
      "registered_module": "agent_registry.py",
      "status": "active",
      "api_surface": "/api/agent"
    },
    {
      "name": "Orchestrator",
      "input_schema": [
        "task",
        "project_id"
      ],
      "output_schema": [
        "status",
        "output",
        "next_agent",
        "trigger_result",
        "decisions"
      ],
      "registered_module": "agent_registry.py",
      "status": "active",
      "api_surface": "/api/agent"
    },
    {
      "name": "Pessimist",
      "input_schema": [
        "loop_id",
        "summary"
      ],
      "output_schema": [
        "assessment",
        "bias_analysis",
        "status"
      ],
      "registered_module": "agent_registry.py",
      "status": "active",
      "api_surface": "/api/reflection"
    },
    {
      "name": "Sage",
      "input_schema": [
        "loop_id",
        "summary_text",
        "project_id"
      ],
      "output_schema": [
        "status",
        "belief_scores",
        "reflection_text",
        "timestamp"
      ],
      "registered_module": "agent_registry.py",
      "status": "active",
      "api_surface": "/api/reflection"
    },
    {
      "name": "SITEGEN",
      "input_schema": [
        "task",
        "project_id",
        "site_parameters",
        "tools"
      ],
      "output_schema": [
        "status",
        "message",
        "analysis",
        "layout",
        "market_fit",
        "recommendations"
      ],
      "registered_module": "agent_registry.py",
      "status": "active",
      "api_surface": "/api/agent"
    },
    {
      "name": "TRAINER",
      "input_schema": [
        "task",
        "model_id",
        "project_id",
        "dataset_id",
        "parameters",
        "tools"
      ],
      "output_schema": [
        "status",
        "message",
        "metrics",
        "model_info",
        "recommendations"
      ],
      "registered_module": "agent_registry.py",
      "status": "active",
      "api_surface": "/api/train"
    },
    {
      "name": "LoopManager",
      "input_schema": [
        "loop_id",
        "action",
        "parameters"
      ],
      "output_schema": [
        "status",
        "message",
        "loop_state"
      ],
      "registered_module": "agent_registry.py",
      "status": "active",
      "api_surface": "/api/loop"
    },
    {
      "name": "DriftMonitor",
      "input_schema": [
        "system_state",
        "baseline",
        "threshold"
      ],
      "output_schema": [
        "status",
        "drift_detected",
        "drift_metrics",
        "recommendations"
      ],
      "registered_module": "agent_registry.py",
      "status": "active",
      "api_surface": "/api/drift"
    },
    {
      "name": "PlanManager",
      "input_schema": [
        "title",
        "description",
        "steps"
      ],
      "output_schema": [
        "status",
        "plan_id",
        "message"
      ],
      "registered_module": "agent_registry.py",
      "status": "active",
      "api_surface": "/api/plan"
    },
    {
      "name": "ExecutionEngine",
      "input_schema": [
        "command",
        "parameters",
        "timeout"
      ],
      "output_schema": [
        "status",
        "execution_id",
        "message",
        "progress"
      ],
      "registered_module": "agent_registry.py",
      "status": "active",
      "api_surface": "/api/execute"
    },
    {
      "name": "SnapshotManager",
      "input_schema": [
        "memory_id",
        "snapshot_type",
        "metadata"
      ],
      "output_schema": [
        "status",
        "snapshot_id",
        "message",
        "timestamp"
      ],
      "registered_module": "agent_registry.py",
      "status": "active",
      "api_surface": "/api/snapshot"
    },
    {
      "name": "ProjectManager",
      "input_schema": [
        "project_id",
        "action",
        "parameters"
      ],
      "output_schema": [
        "status",
        "message",
        "project_state"
      ],
      "registered_module": "agent_registry.py",
      "status": "active",
      "api_surface": "/api/project"
    },
    {
      "name": "AgentRegistry",
      "input_schema": [
        "query_type",
        "filters"
      ],
      "output_schema": [
        "status",
        "agents",
        "count",
        "message"
      ],
      "registered_module": "agent_registry.py",
      "status": "active",
      "api_surface": "/api/agent"
    },
    {
      "name": "MemoryStore",
      "input_schema": [
        "key",
        "value",
        "metadata"
      ],
      "output_schema": [
        "status",
        "memory_id",
        "key",
        "message"
      ],
      "registered_module": "memory_registry.py",
      "status": "active",
      "api_surface": "/api/memory"
    },
    {
      "name": "MemoryRetriever",
      "input_schema": [
        "key"
      ],
      "output_schema": [
        "status",
        "key",
        "value",
        "memory_id",
        "timestamp"
      ],
      "registered_module": "memory_registry.py",
      "status": "active",
      "api_surface": "/api/memory"
    },
    {
      "name": "LoopCreator",
      "input_schema": [
        "plan_id",
        "loop_type",
        "metadata"
      ],
      "output_schema": [
        "status",
        "loop_id",
        "plan_id",
        "message"
      ],
      "registered_module": "loop_registry.py",
      "status": "active",
      "api_surface": "/api/loop"
    },
    {
      "name": "LoopRetriever",
      "input_schema": [
        "loop_id"
      ],
      "output_schema": [
        "status",
        "loop_id",
        "plan_id",
        "loop_type",
        "timestamp"
      ],
      "registered_module": "loop_registry.py",
      "status": "active",
      "api_surface": "/api/loop"
    }
  ],
  "memory_tag": "phase4.0_sprint1_cognitive_reflection_chain_activation"
}


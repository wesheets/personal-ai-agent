"""
Schema Registry
This module defines the registry of all schemas in the Promethios system.
"""
from pydantic import BaseModel, Field
from typing import List, Optional

class SchemaEntry(BaseModel):
    """Schema entry in the registry."""
    name: str = Field(..., description="Name of the schema")
    file: str = Field(..., description="Path to the file that defines the schema")
    status: str = Field(..., description="Status of the schema (active or planned)")
    used_by: List[str] = Field(default_factory=list, description="List of modules that use this schema")

class SchemaRegistry(BaseModel):
    """Schema registry containing all schemas in the system."""
    schemas: List[SchemaEntry] = Field(default_factory=list, description="List of all schemas")

# Initialize the schema registry
SCHEMA_REGISTRY = SchemaRegistry(schemas=[
    SchemaEntry(name="AgentAllocation", file="schemas/ceo_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="AgentConfigError", file="schemas/agent_config_schema.py", status="active", used_by=["routes/agent_config_routes.py"]),
    SchemaEntry(name="AgentConfigGetRequest", file="schemas/agent_config_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="AgentConfigGetResponse", file="schemas/agent_config_schema.py", status="active", used_by=["routes/agent_config_routes.py"]),
    SchemaEntry(name="AgentConfigRequest", file="schemas/agent_config_schema.py", status="active", used_by=["routes/agent_config_routes.py"]),
    SchemaEntry(name="AgentConfigResponse", file="schemas/agent_config_schema.py", status="active", used_by=["routes/agent_config_routes.py"]),
    SchemaEntry(name="AgentContextError", file="schemas/agent_context_schema.py", status="active", used_by=["routes/agent_context_routes.py"]),
    SchemaEntry(name="AgentContextRequest", file="api/modules/agent_context_models.py", status="active", used_by=["routes/agent_context_routes.py", "api/modules/agent_context.py", "api/modules/agent_context_models.py"]),
    SchemaEntry(name="AgentContextRequest", file="schemas/agent_context_schema.py", status="active", used_by=["routes/agent_context_routes.py", "api/modules/agent_context.py", "api/modules/agent_context_models.py"]),
    SchemaEntry(name="AgentContextResponse", file="api/modules/agent_context_models.py", status="active", used_by=["routes/agent_context_routes.py", "api/modules/agent_context.py", "api/modules/agent_context_models.py"]),
    SchemaEntry(name="AgentContextResponse", file="schemas/agent_context_schema.py", status="active", used_by=["routes/agent_context_routes.py", "api/modules/agent_context.py", "api/modules/agent_context_models.py"]),
    SchemaEntry(name="AgentContract", file="schemas/agent_contract_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="AgentPermissionViolation", file="schemas/loop_trace.py", status="planned", used_by=[]),
    SchemaEntry(name="AgentStep", file="models/workflow.py", status="planned", used_by=[]),
    SchemaEntry(name="AgentStepMetadata", file="models/workflow.py", status="planned", used_by=[]),
    SchemaEntry(name="AgentStepReflection", file="models/workflow.py", status="planned", used_by=[]),
    SchemaEntry(name="AshAnalysisRequest", file="schemas/ash_schema.py", status="active", used_by=["routes/ash_routes.py"]),
    SchemaEntry(name="AshAnalysisResult", file="schemas/ash_schema.py", status="active", used_by=["routes/ash_routes.py"]),
    SchemaEntry(name="AshErrorResult", file="schemas/ash_schema.py", status="active", used_by=["routes/ash_routes.py"]),
    SchemaEntry(name="AshTestRequest", file="schemas/ash_schema.py", status="active", used_by=["routes/ash_routes.py"]),
    SchemaEntry(name="AshTestResult", file="schemas/ash_schema.py", status="active", used_by=["routes/ash_routes.py"]),
    SchemaEntry(name="BeliefAlignmentScore", file="schemas/historian_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="BeliefChallengeRequest", file="schemas/self_challenge_schema.py", status="active", used_by=["routes/self_routes.py"]),
    SchemaEntry(name="BeliefInsight", file="schemas/sage_beliefs_schema.py", status="active", used_by=["routes/sage_beliefs_routes.py"]),
    SchemaEntry(name="BeliefReinforcementRequest", file="schemas/self_reinforcement_schema.py", status="active", used_by=["routes/self_routes.py"]),
    SchemaEntry(name="BeliefRevisionRequest", file="schemas/self_revision_schema.py", status="active", used_by=["routes/self_routes.py"]),
    SchemaEntry(name="BeliefScore", file="schemas/sage_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="BiasAnalysis", file="schemas/pessimist_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="BiasTag", file="schemas/loop_trace.py", status="planned", used_by=[]),
    SchemaEntry(name="BiasTagDetail", file="schemas/pessimist_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="CEOErrorResult", file="schemas/ceo_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="CEOPlanResult", file="schemas/ceo_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="CEOReviewRequest", file="schemas/ceo_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="CTOAuditRequest", file="schemas/cto_schema.py", status="active", used_by=["routes/cto_routes.py"]),
    SchemaEntry(name="CTOAuditResult", file="schemas/cto_schema.py", status="active", used_by=["routes/cto_routes.py"]),
    SchemaEntry(name="CTOErrorResult", file="schemas/cto_schema.py", status="active", used_by=["routes/cto_routes.py"]),
    SchemaEntry(name="CTOIssue", file="schemas/cto_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="ComponentBuildResult", file="schemas/forge_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="ComponentHealth", file="schemas/health_monitor_schema.py", status="active", used_by=["modules/health_monitor.py"]),
    SchemaEntry(name="ContractValidationRequest", file="schemas/agent_contract_schema.py", status="active", used_by=["routes/orchestrator_contract_routes.py"]),
    SchemaEntry(name="ContractValidationResponse", file="schemas/agent_contract_schema.py", status="active", used_by=["routes/orchestrator_contract_routes.py"]),
    SchemaEntry(name="ContractViolation", file="schemas/agent_contract_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="CriticErrorResult", file="schemas/critic_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="CriticLogReasonRequest", file="schemas/critic_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="CriticLogReasonResult", file="schemas/critic_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="CriticRejectRequest", file="schemas/critic_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="CriticRejectResult", file="schemas/critic_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="CriticReviewRequest", file="schemas/critic_schema.py", status="active", used_by=["routes/critic_review_routes.py"]),
    SchemaEntry(name="CriticReviewResult", file="schemas/critic_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="CriticScores", file="schemas/critic_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="CriticUsage", file="schemas/critic_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="DebuggerReport", file="schemas/debugger_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="DebuggerTraceRequest", file="schemas/debugger_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="DebuggerTraceResult", file="schemas/debugger_schema.py", status="active", used_by=["routes/debugger_routes.py"]),
    SchemaEntry(name="DelegationResult", file="schemas/orchestrator_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="DriftMonitorRequest", file="schemas/drift_schema.py", status="active", used_by=["routes/drift_routes.py", "modules/orchestrator_drift_integration.py"]),
    SchemaEntry(name="DriftMonitorResponse", file="schemas/drift_schema.py", status="active", used_by=["routes/drift_routes.py"]),
    SchemaEntry(name="ExportError", file="schemas/export_schema.py", status="active", used_by=["routes/export_routes.py"]),
    SchemaEntry(name="ExportRequest", file="schemas/export_schema.py", status="active", used_by=["routes/export_routes.py"]),
    SchemaEntry(name="ExportResponse", file="schemas/export_schema.py", status="active", used_by=["routes/export_routes.py"]),
    SchemaEntry(name="ExportStatusRequest", file="schemas/export_schema.py", status="active", used_by=["routes/export_routes.py"]),
    SchemaEntry(name="ExportStatusResponse", file="schemas/export_schema.py", status="active", used_by=["routes/export_routes.py"]),
    SchemaEntry(name="FallbackBehavior", file="schemas/agent_config_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="FixError", file="schemas/fix_schema.py", status="active", used_by=["routes/fix_routes.py"]),
    SchemaEntry(name="FixRequest", file="schemas/fix_schema.py", status="active", used_by=["routes/fix_routes.py"]),
    SchemaEntry(name="FixResponse", file="schemas/fix_schema.py", status="active", used_by=["routes/fix_routes.py"]),
    SchemaEntry(name="FixRollbackRequest", file="schemas/fix_schema.py", status="active", used_by=["routes/fix_routes.py"]),
    SchemaEntry(name="FixRollbackResponse", file="schemas/fix_schema.py", status="active", used_by=["routes/fix_routes.py"]),
    SchemaEntry(name="FixStatusRequest", file="schemas/fix_schema.py", status="active", used_by=["routes/fix_routes.py"]),
    SchemaEntry(name="FixStatusResponse", file="schemas/fix_schema.py", status="active", used_by=["routes/fix_routes.py"]),
    SchemaEntry(name="ForgeBuildRequest", file="schemas/forge_schema.py", status="active", used_by=["routes/forge_build_routes.py", "routes/forge_routes.py"]),
    SchemaEntry(name="ForgeBuildResult", file="schemas/forge_schema.py", status="active", used_by=["routes/forge_routes.py"]),
    SchemaEntry(name="ForgeRevisionRequest", file="schemas/forge_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="ForgeRevisionResult", file="schemas/forge_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="GuardianAlertRequest", file="schemas/guardian_schema.py", status="active", used_by=["routes/guardian_routes.py"]),
    SchemaEntry(name="GuardianErrorResult", file="schemas/guardian_schema.py", status="active", used_by=["routes/guardian_routes.py"]),
    SchemaEntry(name="GuardianResponse", file="schemas/guardian_schema.py", status="active", used_by=["routes/guardian_routes.py"]),
    SchemaEntry(name="GuardianRollbackRequest", file="schemas/guardian_schema.py", status="active", used_by=["routes/guardian_routes.py"]),
    SchemaEntry(name="GuardianRollbackResult", file="schemas/guardian_schema.py", status="active", used_by=["routes/guardian_routes.py"]),
    SchemaEntry(name="HealingActionResult", file="schemas/health_monitor_schema.py", status="active", used_by=["modules/health_monitor.py"]),
    SchemaEntry(name="HealthCheckRequest", file="schemas/health_monitor_schema.py", status="active", used_by=["routes/health_monitor_routes.py", "modules/health_monitor.py"]),
    SchemaEntry(name="HealthCheckResponse", file="schemas/health_monitor_schema.py", status="active", used_by=["routes/health_monitor_routes.py", "modules/health_monitor.py"]),
    SchemaEntry(name="HealthMetric", file="schemas/health_monitor_schema.py", status="active", used_by=["modules/health_monitor.py"]),
    SchemaEntry(name="HealthMonitorConfigRequest", file="schemas/health_monitor_schema.py", status="active", used_by=["routes/health_monitor_routes.py", "modules/health_monitor.py"]),
    SchemaEntry(name="HealthMonitorConfigResponse", file="schemas/health_monitor_schema.py", status="active", used_by=["routes/health_monitor_routes.py", "modules/health_monitor.py"]),
    SchemaEntry(name="HistorianAlert", file="schemas/historian_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="HistorianDriftRequest", file="schemas/historian_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="HistorianDriftResult", file="schemas/historian_schema.py", status="active", used_by=["routes/historian_routes.py"]),
    SchemaEntry(name="LastAgentAction", file="schemas/agent_context_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="LoopCompleteRequest", file="schemas/loop_trace.py", status="active", used_by=["routes/orchestrator_routes.py"]),
    SchemaEntry(name="LoopDebugRequest", file="schemas/debug_schema.py", status="active", used_by=["routes/debug_routes.py"]),
    SchemaEntry(name="LoopDebugResult", file="schemas/debug_schema.py", status="active", used_by=["routes/debug_routes.py"]),
    SchemaEntry(name="LoopDriftLog", file="schemas/drift_schema.py", status="active", used_by=["routes/drift_routes.py"]),
    SchemaEntry(name="LoopIssue", file="schemas/debug_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="LoopReflectionResult", file="schemas/loop_trace.py", status="planned", used_by=[]),
    SchemaEntry(name="LoopResponseRequest", file="schemas/loop_schema.py", status="active", used_by=["routes/loop_routes.py"]),
    SchemaEntry(name="LoopResponseResult", file="schemas/loop_schema.py", status="active", used_by=["routes/loop_routes.py"]),
    SchemaEntry(name="LoopSnapshot", file="schemas/loop_snapshot_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="LoopState", file="schemas/agent_context_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="LoopTraceItem", file="schemas/loop_trace.py", status="planned", used_by=[]),
    SchemaEntry(name="LoopValidationError", file="schemas/loop_validation_schema.py", status="active", used_by=["routes/loop_validation_routes.py", "modules/loop_validation.py"]),
    SchemaEntry(name="LoopValidationRequest", file="schemas/loop_validation_schema.py", status="active", used_by=["routes/loop_validation_routes.py", "modules/loop_validation.py"]),
    SchemaEntry(name="LoopValidationResult", file="schemas/loop_validation_schema.py", status="active", used_by=["routes/loop_validation_routes.py", "modules/loop_validation.py"]),
    SchemaEntry(name="MaintenancePrediction", file="schemas/health_monitor_schema.py", status="active", used_by=["modules/health_monitor.py"]),
    SchemaEntry(name="MemoryAddRequest", file="schemas/memory_schema.py", status="active", used_by=["routes/memory_api_routes.py", "api/memory.py"]),
    SchemaEntry(name="MemoryAddResponse", file="schemas/memory_schema.py", status="active", used_by=["routes/memory_api_routes.py"]),
    SchemaEntry(name="MemoryEmbedBatchRequest", file="schemas/memory_embed_schema.py", status="active", used_by=["routes/memory_embed_routes.py"]),
    SchemaEntry(name="MemoryEmbedBatchResponse", file="schemas/memory_embed_schema.py", status="active", used_by=["routes/memory_embed_routes.py"]),
    SchemaEntry(name="MemoryEmbedError", file="schemas/memory_embed_schema.py", status="active", used_by=["routes/memory_embed_routes.py"]),
    SchemaEntry(name="MemoryEmbedRequest", file="schemas/memory_embed_schema.py", status="active", used_by=["routes/memory_embed_routes.py"]),
    SchemaEntry(name="MemoryEmbedResponse", file="schemas/memory_embed_schema.py", status="active", used_by=["routes/memory_embed_routes.py"]),
    SchemaEntry(name="MemoryEntry", file="schemas/memory_recall_schema.py", status="active", used_by=["api/memory_viewer.py"]),
    SchemaEntry(name="MemoryEntry", file="schemas/memory_schema.py", status="active", used_by=["api/memory_viewer.py"]),
    SchemaEntry(name="MemoryItem", file="schemas/memory.py", status="active", used_by=["modules/memory_thread.py", "api/agent/memory.py"]),
    SchemaEntry(name="MemoryRecallError", file="schemas/memory_recall_schema.py", status="active", used_by=["routes/memory_recall_routes.py"]),
    SchemaEntry(name="MemoryRecallRequest", file="schemas/memory_recall_schema.py", status="active", used_by=["routes/memory_recall_routes.py"]),
    SchemaEntry(name="MemoryRecallResponse", file="schemas/memory_recall_schema.py", status="active", used_by=["routes/memory_recall_routes.py"]),
    SchemaEntry(name="MemorySearchRequest", file="schemas/memory_schema.py", status="active", used_by=["routes/memory_api_routes.py", "api/memory.py"]),
    SchemaEntry(name="MemorySearchResponse", file="schemas/memory_schema.py", status="active", used_by=["routes/memory_api_routes.py", "api/memory.py"]),
    SchemaEntry(name="MemoryUsage", file="schemas/agent_context_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="ModelInfo", file="schemas/trainer_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="NovaUIRequest", file="schemas/nova_schema.py", status="active", used_by=["routes/nova_routes.py"]),
    SchemaEntry(name="NovaUIRequestFallback", file="schemas/nova_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="NovaUIResult", file="schemas/nova_schema.py", status="active", used_by=["routes/nova_routes.py"]),
    SchemaEntry(name="NovaUIResultFallback", file="schemas/nova_schema.py", status="active", used_by=["routes/nova_routes.py"]),
    SchemaEntry(name="ObservationEntry", file="schemas/observer_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="ObserverErrorResult", file="schemas/observer_schema.py", status="active", used_by=["routes/observer_routes.py"]),
    SchemaEntry(name="ObserverTaskRequest", file="schemas/observer_schema.py", status="active", used_by=["routes/observer_routes.py"]),
    SchemaEntry(name="ObserverTaskResult", file="schemas/observer_schema.py", status="active", used_by=["routes/observer_routes.py"]),
    SchemaEntry(name="OrchestratorConsultRequest", file="schemas/orchestrator_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="OrchestratorDecision", file="schemas/orchestrator_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="OrchestratorErrorResult", file="schemas/orchestrator_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="OrchestratorInterpretRequest", file="schemas/orchestrator_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="OrchestratorPlan", file="schemas/orchestrator_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="OrchestratorPlanRequest", file="schemas/orchestrator_schema.py", status="active", used_by=["routes/orchestrator_plan_routes.py"]),
    SchemaEntry(name="OrchestratorPlanResult", file="schemas/orchestrator_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="OutputPolicyRequest", file="schemas/output_policy_schema.py", status="active", used_by=["routes/output_policy_routes.py", "modules/output_policy_enforcer.py"]),
    SchemaEntry(name="OutputPolicyResult", file="schemas/output_policy_schema.py", status="active", used_by=["routes/output_policy_routes.py", "modules/output_policy_enforcer.py"]),
    SchemaEntry(name="PatchPlan", file="schemas/debugger_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="PatchProjectStateRequest", file="models/project_state.py", status="planned", used_by=[]),
    SchemaEntry(name="PessimistAssessment", file="schemas/pessimist_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="PessimistCheckRequest", file="schemas/pessimist_schema.py", status="active", used_by=["routes/pessimist_routes.py", "modules/pessimist_evaluation.py"]),
    SchemaEntry(name="PessimistCheckResult", file="schemas/pessimist_schema.py", status="active", used_by=["routes/pessimist_routes.py", "modules/pessimist_evaluation.py"]),
    SchemaEntry(name="PessimistErrorResult", file="schemas/pessimist_schema.py", status="active", used_by=["routes/pessimist_routes.py"]),
    SchemaEntry(name="PessimistEvaluateRequest", file="schemas/pessimist_evaluation_schema.py", status="active", used_by=["routes/pessimist_evaluation_routes.py"]),
    SchemaEntry(name="PessimistEvaluateResponse", file="schemas/pessimist_evaluation_schema.py", status="active", used_by=["routes/pessimist_evaluation_routes.py"]),
    SchemaEntry(name="PlanGenerateError", file="schemas/plan_generate_schema.py", status="active", used_by=["routes/plan_generate_routes.py"]),
    SchemaEntry(name="PlanGenerateRequest", file="api/modules/plan_models.py", status="active", used_by=["routes/plan_generate_routes.py", "api/modules/plan.py", "api/modules/plan_models.py"]),
    SchemaEntry(name="PlanGenerateRequest", file="schemas/plan_generate_schema.py", status="active", used_by=["routes/plan_generate_routes.py", "api/modules/plan.py", "api/modules/plan_models.py"]),
    SchemaEntry(name="PlanGenerateResponse", file="api/modules/plan_models.py", status="active", used_by=["routes/plan_generate_routes.py", "api/modules/plan.py", "api/modules/plan_models.py"]),
    SchemaEntry(name="PlanGenerateResponse", file="schemas/plan_generate_schema.py", status="active", used_by=["routes/plan_generate_routes.py", "api/modules/plan.py", "api/modules/plan_models.py"]),
    SchemaEntry(name="PlanStep", file="schemas/orchestrator_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="PlanStep", file="schemas/plan_generate_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="PolicyLogEntry", file="schemas/output_policy_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="PolicyLogRequest", file="schemas/output_policy_schema.py", status="active", used_by=["routes/output_policy_routes.py"]),
    SchemaEntry(name="PolicyLogResponse", file="schemas/output_policy_schema.py", status="active", used_by=["routes/output_policy_routes.py"]),
    SchemaEntry(name="PredictiveMaintenanceRequest", file="schemas/health_monitor_schema.py", status="active", used_by=["routes/health_monitor_routes.py", "modules/health_monitor.py"]),
    SchemaEntry(name="PredictiveMaintenanceResponse", file="schemas/health_monitor_schema.py", status="active", used_by=["routes/health_monitor_routes.py", "modules/health_monitor.py"]),
    SchemaEntry(name="ProjectContext", file="api/modules/agent_context_models.py", status="active", used_by=["api/modules/agent_context.py", "api/modules/agent_context_models.py"]),
    SchemaEntry(name="ProjectInitiateRequest", file="api/modules/project_models.py", status="active", used_by=["api/modules/project.py", "api/modules/project_models.py"]),
    SchemaEntry(name="ProjectInitiateResponse", file="api/modules/project_models.py", status="active", used_by=["api/modules/project.py", "api/modules/project_models.py"]),
    SchemaEntry(name="RepairSuggestion", file="schemas/debug_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="RerunDecision", file="schemas/loop_trace.py", status="planned", used_by=[]),
    SchemaEntry(name="RerunDecision", file="schemas/rerun_decision.py", status="planned", used_by=[]),
    SchemaEntry(name="ResolutionResult", file="schemas/orchestrator_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="RespondRequest", file="api/modules/respond_models.py", status="active", used_by=["api/respond.py", "api/modules/respond.py", "api/modules/respond_models.py"]),
    SchemaEntry(name="RespondResponse", file="api/modules/respond_models.py", status="active", used_by=["api/modules/respond.py", "api/modules/respond_models.py"]),
    SchemaEntry(name="RiskAssessment", file="schemas/pessimist_evaluation_schema.py", status="active", used_by=["routes/pessimist_evaluation_routes.py"]),
    SchemaEntry(name="RiskFactor", file="schemas/ash_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="SageBeliefRequest", file="schemas/sage_beliefs_schema.py", status="active", used_by=["routes/sage_beliefs_routes.py"]),
    SchemaEntry(name="SageBeliefResponse", file="schemas/sage_beliefs_schema.py", status="active", used_by=["routes/sage_beliefs_routes.py"]),
    SchemaEntry(name="SageErrorResult", file="schemas/sage_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="SageReviewRequest", file="schemas/sage_schema.py", status="active", used_by=["routes/sage_routes.py"]),
    SchemaEntry(name="SageReviewResult", file="schemas/sage_schema.py", status="active", used_by=["routes/sage_routes.py"]),
    SchemaEntry(name="SageScoreBeliefRequest", file="schemas/sage_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="SageScoreBeliefResult", file="schemas/sage_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="SageSummarizeRequest", file="schemas/sage_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="SageSummarizeResult", file="schemas/sage_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="SchemaEntry", file="registries/schema_registry.py", status="planned", used_by=[]),
    SchemaEntry(name="SchemaRegistry", file="registries/schema_registry.py", status="planned", used_by=[]),
    SchemaEntry(name="SelfHealingRequest", file="schemas/health_monitor_schema.py", status="active", used_by=["routes/health_monitor_routes.py", "modules/health_monitor.py"]),
    SchemaEntry(name="SelfHealingResponse", file="schemas/health_monitor_schema.py", status="active", used_by=["routes/health_monitor_routes.py", "modules/health_monitor.py"]),
    SchemaEntry(name="SelfInquiryRequest", file="schemas/self_reflection_schema.py", status="active", used_by=["routes/self_routes.py"]),
    SchemaEntry(name="SiteGenErrorResult", file="schemas/sitegen_schema.py", status="active", used_by=["routes/sitegen_routes.py"]),
    SchemaEntry(name="SiteGenTaskRequest", file="schemas/sitegen_schema.py", status="active", used_by=["routes/sitegen_routes.py"]),
    SchemaEntry(name="SiteGenTaskResult", file="schemas/sitegen_schema.py", status="active", used_by=["routes/sitegen_routes.py"]),
    SchemaEntry(name="SiteLayout", file="schemas/sitegen_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="SnapshotResponse", file="schemas/loop_snapshot_schema.py", status="active", used_by=["routes/snapshot_routes.py"]),
    SchemaEntry(name="SnapshotRestoreRequest", file="schemas/loop_snapshot_schema.py", status="active", used_by=["routes/snapshot_routes.py"]),
    SchemaEntry(name="SnapshotSaveRequest", file="schemas/loop_snapshot_schema.py", status="active", used_by=["routes/snapshot_routes.py"]),
    SchemaEntry(name="StartLoopRequest", file="models/loop.py", status="planned", used_by=[]),
    SchemaEntry(name="StreamCloseRequest", file="schemas/delegate_stream_schema.py", status="active", used_by=["routes/delegate_stream_routes.py"]),
    SchemaEntry(name="StreamCloseResponse", file="schemas/delegate_stream_schema.py", status="active", used_by=["routes/delegate_stream_routes.py"]),
    SchemaEntry(name="StreamError", file="schemas/delegate_stream_schema.py", status="active", used_by=["routes/delegate_stream_routes.py"]),
    SchemaEntry(name="StreamEvent", file="schemas/delegate_stream_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="StreamRequest", file="schemas/delegate_stream_schema.py", status="active", used_by=["routes/delegate_stream_routes.py"]),
    SchemaEntry(name="StreamResponse", file="schemas/delegate_stream_schema.py", status="active", used_by=["routes/delegate_stream_routes.py"]),
    SchemaEntry(name="StreamStatusRequest", file="schemas/delegate_stream_schema.py", status="active", used_by=["routes/delegate_stream_routes.py"]),
    SchemaEntry(name="StreamStatusResponse", file="schemas/delegate_stream_schema.py", status="active", used_by=["routes/delegate_stream_routes.py"]),
    SchemaEntry(name="SummarizationRequest", file="schemas/memory.py", status="active", used_by=["modules/memory_summarize.py", "api/orchestrator/status.py"]),
    SchemaEntry(name="SystemHealthSummary", file="schemas/health_monitor_schema.py", status="active", used_by=["modules/health_monitor.py"]),
    SchemaEntry(name="TaskItem", file="api/modules/agent_context_models.py", status="active", used_by=["api/modules/agent_context.py", "api/modules/agent_context_models.py"]),
    SchemaEntry(name="TaskPlan", file="api/modules/plan_models.py", status="active", used_by=["api/modules/plan.py", "api/modules/plan_models.py"]),
    SchemaEntry(name="TestResult", file="schemas/ash_schema.py", status="active", used_by=["modules/loop_ci_test_runner.py"]),
    SchemaEntry(name="ThreadRequest", file="schemas/memory.py", status="active", used_by=["modules/memory_thread.py"]),
    SchemaEntry(name="ToolPermission", file="schemas/agent_config_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="TrainError", file="schemas/train_schema.py", status="active", used_by=["routes/train_routes.py"]),
    SchemaEntry(name="TrainRequest", file="schemas/train_schema.py", status="active", used_by=["routes/train_routes.py"]),
    SchemaEntry(name="TrainResponse", file="schemas/train_schema.py", status="active", used_by=["routes/train_routes.py"]),
    SchemaEntry(name="TrainStatusRequest", file="schemas/train_schema.py", status="active", used_by=["routes/train_routes.py"]),
    SchemaEntry(name="TrainStatusResponse", file="schemas/train_schema.py", status="active", used_by=["routes/train_routes.py"]),
    SchemaEntry(name="TrainerErrorResult", file="schemas/trainer_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="TrainerTaskRequest", file="schemas/trainer_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="TrainerTaskResult", file="schemas/trainer_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="TrainingMetrics", file="schemas/train_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="TrainingMetrics", file="schemas/trainer_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="TriggerResult", file="schemas/orchestrator_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="UIComponent", file="schemas/nova_schema.py", status="planned", used_by=[]),
    SchemaEntry(name="UserContextGetRequest", file="api/modules/user_context_models.py", status="active", used_by=["api/modules/user_context_models.py"]),
    SchemaEntry(name="UserContextGetResponse", file="api/modules/user_context_models.py", status="active", used_by=["api/modules/user_context.py", "api/modules/user_context_models.py"]),
    SchemaEntry(name="UserContextRegisterRequest", file="api/modules/user_context_models.py", status="active", used_by=["api/modules/user_context.py", "api/modules/user_context_models.py"]),
    SchemaEntry(name="UserContextRegisterResponse", file="api/modules/user_context_models.py", status="active", used_by=["api/modules/user_context.py", "api/modules/user_context_models.py"]),
    SchemaEntry(name="UserGoalPlanRequest", file="api/modules/plan_models.py", status="active", used_by=["api/modules/plan.py", "api/modules/plan_models.py", "api/modules/project.py"]),
    SchemaEntry(name="UserGoalPlanResponse", file="api/modules/plan_models.py", status="active", used_by=["api/modules/plan.py", "api/modules/plan_models.py"]),
    SchemaEntry(name="UserGoalPlanTask", file="api/modules/plan_models.py", status="active", used_by=["api/modules/plan.py", "api/modules/plan_models.py"]),
    SchemaEntry(name="ValidateSchemaHashRequest", file="schemas/validate_schema_hash.py", status="planned", used_by=[]),
    SchemaEntry(name="ValidateSchemaHashResult", file="schemas/validate_schema_hash.py", status="planned", used_by=[]),
    SchemaEntry(name="ValidationIssue", file="schemas/loop_validation_schema.py", status="active", used_by=["modules/loop_validation.py"]),
    SchemaEntry(name="ValidationRecommendation", file="schemas/loop_validation_schema.py", status="active", used_by=["modules/loop_validation.py"]),
    SchemaEntry(name="WorkflowResponse", file="models/workflow.py", status="planned", used_by=[]),
    SchemaEntry(name="hal_agent", file="schemas/hal_agent.schema.json", status="active", used_by=["routes/debug_hal_schema.py"]),
    SchemaEntry(name="hal_agent", file="schemas/schemas/hal_agent.schema.json", status="active", used_by=["routes/debug_hal_schema.py"]),
    SchemaEntry(name="loop_trace", file="loop/debug/loop_trace.schema.json", status="planned", used_by=[]),
])

# For backward compatibility, also provide the schemas as a list
SCHEMA_LIST = SCHEMA_REGISTRY.schemas

"""
Schema Registry
This module defines the registry of all schemas in the Promethios system.
"""
from pydantic import BaseModel, Field
from typing import List, Optional

class SchemaEntry(BaseModel):
    """Schema entry in the registry."""
    name: str = Field(..., description="Name of the schema")
    file: str = Field(..., description="File where the schema is defined")
    status: str = Field(..., description="Status of the schema (active or scaffolded)")
    used_by: List[str] = Field(default_factory=list, description="List of modules using this schema")

class SchemaRegistry(BaseModel):
    """Schema registry containing all schemas in the system."""
    schemas: List[SchemaEntry] = Field(default_factory=list, description="List of all schemas")

# Initialize the schema registry
SCHEMA_REGISTRY = SchemaRegistry(schemas=[
    SchemaEntry(
        name="AgentAllocation",
        file="schemas/ceo_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentAllocation",
        file="schemas/ceo_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentAllocation",
        file="schemas/ceo_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentAllocation",
        file="schemas/ceo_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentAssignment",
        file="core/agent_coordinator.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentAssignment",
        file="core/agent_coordinator.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentCapability",
        file="core/agent_router.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentCapability",
        file="core/agent_router.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentConfig",
        file="api/orchestrator/scope.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentConfig",
        file="api/orchestrator/scope.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentConfig",
        file="modules/orchestrator_scope.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentConfig",
        file="modules/orchestrator_scope.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentConfigError",
        file="schemas/agent_config_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentConfigError",
        file="schemas/agent_config_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentConfigError",
        file="schemas/agent_config_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentConfigError",
        file="schemas/agent_config_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentConfigGetRequest",
        file="schemas/agent_config_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentConfigGetRequest",
        file="schemas/agent_config_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentConfigGetRequest",
        file="schemas/agent_config_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentConfigGetRequest",
        file="schemas/agent_config_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentConfigGetResponse",
        file="schemas/agent_config_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentConfigGetResponse",
        file="schemas/agent_config_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentConfigGetResponse",
        file="schemas/agent_config_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentConfigGetResponse",
        file="schemas/agent_config_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentConfigRequest",
        file="schemas/agent_config_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentConfigRequest",
        file="schemas/agent_config_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentConfigRequest",
        file="schemas/agent_config_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentConfigRequest",
        file="schemas/agent_config_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentConfigResponse",
        file="schemas/agent_config_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentConfigResponse",
        file="schemas/agent_config_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentConfigResponse",
        file="schemas/agent_config_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentConfigResponse",
        file="schemas/agent_config_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentContextError",
        file="schemas/agent_context_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentContextError",
        file="schemas/agent_context_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentContextError",
        file="schemas/agent_context_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentContextError",
        file="schemas/agent_context_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentContextRequest",
        file="schemas/agent_context_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentContextRequest",
        file="schemas/agent_context_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentContextRequest",
        file="api/modules/agent_context_models.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentContextRequest",
        file="api/modules/agent_context_models.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentContextRequest",
        file="schemas/agent_context_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentContextRequest",
        file="schemas/agent_context_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentContextResponse",
        file="schemas/agent_context_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentContextResponse",
        file="schemas/agent_context_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentContextResponse",
        file="api/modules/agent_context_models.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentContextResponse",
        file="api/modules/agent_context_models.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentContextResponse",
        file="schemas/agent_context_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentContextResponse",
        file="schemas/agent_context_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentContract",
        file="schemas/agent_contract_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentContract",
        file="schemas/agent_contract_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentContract",
        file="schemas/agent_contract_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentContract",
        file="schemas/agent_contract_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentCreateRequest",
        file="api/modules/agent.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentCreateRequest",
        file="api/modules/agent.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentCreateRequest",
        file="modules/agent_create.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentCreateRequest",
        file="modules/agent_create.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentCreateResponse",
        file="modules/agent_create.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentCreateResponse",
        file="modules/agent_create.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentCreationSuggestion",
        file="modules/orchestrator_scope.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentCreationSuggestion",
        file="modules/orchestrator_scope.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentDelegateRequest",
        file="api/modules/agent.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentDelegateRequest",
        file="api/modules/agent.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentDelegateRequest",
        file="modules/delegate.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentDelegateRequest",
        file="modules/delegate.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentLoopRequest",
        file="api/modules/agent.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentLoopRequest",
        file="api/modules/agent.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentPermissionViolation",
        file="schemas/loop_trace.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentPermissionViolation",
        file="schemas/loop_trace.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentPermissionViolation",
        file="schemas/loop_trace.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentPermissionViolation",
        file="schemas/loop_trace.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentPresentResponse",
        file="modules/agent_present.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentPresentResponse",
        file="modules/agent_present.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentProfile",
        file="core/agent_router.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentProfile",
        file="core/agent_router.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentRequest",
        file="api/agent.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentRequest",
        file="api/agent.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentResponse",
        file="api/agent.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentResponse",
        file="api/agent.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentRunRequest",
        file="api/modules/agent.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentRunRequest",
        file="api/modules/agent.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentStatusModel",
        file="api/control.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentStatusModel",
        file="api/control.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentStatusResponseModel",
        file="api/control.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentStatusResponseModel",
        file="api/control.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentStep",
        file="models/workflow.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentStep",
        file="models/workflow.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentStepMetadata",
        file="models/workflow.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentStepMetadata",
        file="models/workflow.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentStepReflection",
        file="models/workflow.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentStepReflection",
        file="models/workflow.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentTaskRequest",
        file="api/control.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AgentTaskRequest",
        file="api/control.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AshAnalysisRequest",
        file="schemas/ash_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AshAnalysisRequest",
        file="schemas/ash_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AshAnalysisRequest",
        file="schemas/ash_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AshAnalysisRequest",
        file="schemas/ash_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AshAnalysisResult",
        file="schemas/ash_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AshAnalysisResult",
        file="schemas/ash_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AshAnalysisResult",
        file="schemas/ash_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AshAnalysisResult",
        file="schemas/ash_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AshErrorResult",
        file="schemas/ash_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AshErrorResult",
        file="schemas/ash_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AshErrorResult",
        file="schemas/ash_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AshErrorResult",
        file="schemas/ash_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AshTestRequest",
        file="schemas/ash_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AshTestRequest",
        file="schemas/ash_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AshTestRequest",
        file="schemas/ash_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AshTestRequest",
        file="schemas/ash_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AshTestResult",
        file="schemas/ash_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AshTestResult",
        file="schemas/ash_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AshTestResult",
        file="schemas/ash_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="AshTestResult",
        file="schemas/ash_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="Base64Input",
        file="core/input_gateway.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="Base64Input",
        file="core/input_gateway.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="BehaviorFeedbackData",
        file="core/behavior_manager.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="BehaviorFeedbackData",
        file="core/behavior_manager.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="BeliefAlignmentScore",
        file="schemas/historian_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="BeliefAlignmentScore",
        file="schemas/historian_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="BeliefAlignmentScore",
        file="schemas/historian_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="BeliefAlignmentScore",
        file="schemas/historian_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="BeliefChallengeRequest",
        file="schemas/self_challenge_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="BeliefChallengeRequest",
        file="schemas/self_challenge_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="BeliefChallengeRequest",
        file="schemas/self_challenge_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="BeliefChallengeRequest",
        file="schemas/self_challenge_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="BeliefInsight",
        file="schemas/sage_beliefs_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="BeliefInsight",
        file="schemas/sage_beliefs_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="BeliefInsight",
        file="schemas/sage_beliefs_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="BeliefInsight",
        file="schemas/sage_beliefs_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="BeliefReinforcementRequest",
        file="schemas/self_reinforcement_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="BeliefReinforcementRequest",
        file="schemas/self_reinforcement_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="BeliefReinforcementRequest",
        file="schemas/self_reinforcement_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="BeliefReinforcementRequest",
        file="schemas/self_reinforcement_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="BeliefRevisionRequest",
        file="schemas/self_revision_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="BeliefRevisionRequest",
        file="schemas/self_revision_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="BeliefRevisionRequest",
        file="schemas/self_revision_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="BeliefRevisionRequest",
        file="schemas/self_revision_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="BeliefScore",
        file="schemas/sage_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="BeliefScore",
        file="schemas/sage_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="BeliefScore",
        file="schemas/sage_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="BeliefScore",
        file="schemas/sage_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="BiasAnalysis",
        file="schemas/pessimist_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="BiasAnalysis",
        file="schemas/pessimist_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="BiasAnalysis",
        file="schemas/pessimist_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="BiasAnalysis",
        file="schemas/pessimist_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="BiasTag",
        file="schemas/loop_trace.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="BiasTag",
        file="schemas/loop_trace.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="BiasTag",
        file="schemas/loop_trace.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="BiasTag",
        file="schemas/loop_trace.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="BiasTagDetail",
        file="schemas/pessimist_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="BiasTagDetail",
        file="schemas/pessimist_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="BiasTagDetail",
        file="schemas/pessimist_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="BiasTagDetail",
        file="schemas/pessimist_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="BuildRequest",
        file="modules/orchestrator_build.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="BuildRequest",
        file="modules/orchestrator_build.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="BuildResponse",
        file="modules/orchestrator_build.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="BuildResponse",
        file="modules/orchestrator_build.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="BuilderRequest",
        file="api/agent/builder.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="BuilderRequest",
        file="api/agent/builder.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="BuilderResponse",
        file="api/agent/builder.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="BuilderResponse",
        file="api/agent/builder.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CEOErrorResult",
        file="schemas/ceo_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CEOErrorResult",
        file="schemas/ceo_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CEOErrorResult",
        file="schemas/ceo_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CEOErrorResult",
        file="schemas/ceo_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CEOPlanResult",
        file="schemas/ceo_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CEOPlanResult",
        file="schemas/ceo_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CEOPlanResult",
        file="schemas/ceo_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CEOPlanResult",
        file="schemas/ceo_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CEOReviewRequest",
        file="schemas/ceo_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CEOReviewRequest",
        file="schemas/ceo_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CEOReviewRequest",
        file="schemas/ceo_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CEOReviewRequest",
        file="schemas/ceo_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CTOAuditRequest",
        file="schemas/cto_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CTOAuditRequest",
        file="schemas/cto_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CTOAuditRequest",
        file="schemas/cto_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CTOAuditRequest",
        file="schemas/cto_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CTOAuditResult",
        file="schemas/cto_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CTOAuditResult",
        file="schemas/cto_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CTOAuditResult",
        file="schemas/cto_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CTOAuditResult",
        file="schemas/cto_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CTOErrorResult",
        file="schemas/cto_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CTOErrorResult",
        file="schemas/cto_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CTOErrorResult",
        file="schemas/cto_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CTOErrorResult",
        file="schemas/cto_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CTOIssue",
        file="schemas/cto_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CTOIssue",
        file="schemas/cto_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CTOIssue",
        file="schemas/cto_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CTOIssue",
        file="schemas/cto_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ChainStep",
        file="core/execution_chain_logger.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ChainStep",
        file="core/execution_chain_logger.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ComponentBuildResult",
        file="schemas/forge_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ComponentBuildResult",
        file="schemas/forge_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ComponentBuildResult",
        file="schemas/forge_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ComponentBuildResult",
        file="schemas/forge_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ComponentHealth",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ComponentHealth",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ComponentHealth",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ComponentHealth",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ContractValidationRequest",
        file="schemas/agent_contract_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ContractValidationRequest",
        file="schemas/agent_contract_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ContractValidationRequest",
        file="schemas/agent_contract_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ContractValidationRequest",
        file="schemas/agent_contract_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ContractValidationResponse",
        file="schemas/agent_contract_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ContractValidationResponse",
        file="schemas/agent_contract_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ContractValidationResponse",
        file="schemas/agent_contract_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ContractValidationResponse",
        file="schemas/agent_contract_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ContractViolation",
        file="schemas/agent_contract_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ContractViolation",
        file="schemas/agent_contract_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ContractViolation",
        file="schemas/agent_contract_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ContractViolation",
        file="schemas/agent_contract_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ControlModeModel",
        file="api/control.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ControlModeModel",
        file="api/control.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CriticErrorResult",
        file="schemas/critic_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CriticErrorResult",
        file="schemas/critic_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CriticErrorResult",
        file="schemas/critic_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CriticErrorResult",
        file="schemas/critic_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CriticLogReasonRequest",
        file="schemas/critic_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CriticLogReasonRequest",
        file="schemas/critic_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CriticLogReasonRequest",
        file="schemas/critic_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CriticLogReasonRequest",
        file="schemas/critic_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CriticLogReasonResult",
        file="schemas/critic_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CriticLogReasonResult",
        file="schemas/critic_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CriticLogReasonResult",
        file="schemas/critic_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CriticLogReasonResult",
        file="schemas/critic_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CriticRejectRequest",
        file="schemas/critic_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CriticRejectRequest",
        file="schemas/critic_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CriticRejectRequest",
        file="schemas/critic_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CriticRejectRequest",
        file="schemas/critic_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CriticRejectResult",
        file="schemas/critic_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CriticRejectResult",
        file="schemas/critic_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CriticRejectResult",
        file="schemas/critic_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CriticRejectResult",
        file="schemas/critic_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CriticReviewRequest",
        file="schemas/critic_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CriticReviewRequest",
        file="schemas/critic_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CriticReviewRequest",
        file="routes/critic_review_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CriticReviewRequest",
        file="routes/critic_review_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CriticReviewRequest",
        file="schemas/critic_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CriticReviewRequest",
        file="schemas/critic_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CriticReviewResponse",
        file="routes/critic_review_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CriticReviewResponse",
        file="routes/critic_review_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CriticReviewResult",
        file="schemas/critic_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CriticReviewResult",
        file="schemas/critic_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CriticReviewResult",
        file="schemas/critic_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CriticReviewResult",
        file="schemas/critic_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CriticScores",
        file="schemas/critic_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CriticScores",
        file="schemas/critic_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CriticScores",
        file="schemas/critic_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CriticScores",
        file="schemas/critic_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CriticUsage",
        file="schemas/critic_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CriticUsage",
        file="schemas/critic_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CriticUsage",
        file="schemas/critic_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="CriticUsage",
        file="schemas/critic_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="DebuggerReport",
        file="schemas/debugger_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="DebuggerReport",
        file="schemas/debugger_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="DebuggerReport",
        file="schemas/debugger_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="DebuggerReport",
        file="schemas/debugger_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="DebuggerTraceRequest",
        file="schemas/debugger_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="DebuggerTraceRequest",
        file="schemas/debugger_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="DebuggerTraceRequest",
        file="schemas/debugger_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="DebuggerTraceRequest",
        file="schemas/debugger_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="DebuggerTraceResult",
        file="schemas/debugger_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="DebuggerTraceResult",
        file="schemas/debugger_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="DebuggerTraceResult",
        file="schemas/debugger_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="DebuggerTraceResult",
        file="schemas/debugger_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="DelegatedTask",
        file="modules/orchestrator_build.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="DelegatedTask",
        file="modules/orchestrator_build.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="DelegationRequest",
        file="api/agent.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="DelegationRequest",
        file="api/agent.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="DelegationRequest",
        file="api/modules/delegate.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="DelegationRequest",
        file="api/modules/delegate.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="DelegationResponse",
        file="api/agent.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="DelegationResponse",
        file="api/agent.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="DelegationResult",
        file="schemas/orchestrator_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="DelegationResult",
        file="schemas/orchestrator_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="DelegationResult",
        file="schemas/orchestrator_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="DelegationResult",
        file="schemas/orchestrator_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="DriftMonitorRequest",
        file="schemas/drift_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="DriftMonitorRequest",
        file="schemas/drift_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="DriftMonitorRequest",
        file="schemas/drift_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="DriftMonitorRequest",
        file="schemas/drift_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="DriftMonitorResponse",
        file="schemas/drift_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="DriftMonitorResponse",
        file="schemas/drift_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="DriftMonitorResponse",
        file="schemas/drift_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="DriftMonitorResponse",
        file="schemas/drift_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="EditPromptModel",
        file="api/control.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="EditPromptModel",
        file="api/control.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="EscalationData",
        file="core/escalation_manager.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="EscalationData",
        file="core/escalation_manager.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ExecuteChainRequest",
        file="modules/plan/execute_chain.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ExecuteChainRequest",
        file="modules/plan/execute_chain.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ExecuteChainResponse",
        file="modules/plan/execute_chain.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ExecuteChainResponse",
        file="modules/plan/execute_chain.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ExecutionChain",
        file="core/execution_chain_logger.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ExecutionChain",
        file="core/execution_chain_logger.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ExportError",
        file="schemas/export_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ExportError",
        file="schemas/export_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ExportError",
        file="schemas/export_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ExportError",
        file="schemas/export_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ExportRequest",
        file="schemas/export_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ExportRequest",
        file="schemas/export_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ExportRequest",
        file="schemas/export_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ExportRequest",
        file="schemas/export_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ExportResponse",
        file="schemas/export_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ExportResponse",
        file="schemas/export_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ExportResponse",
        file="schemas/export_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ExportResponse",
        file="schemas/export_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ExportStatusRequest",
        file="schemas/export_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ExportStatusRequest",
        file="schemas/export_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ExportStatusRequest",
        file="schemas/export_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ExportStatusRequest",
        file="schemas/export_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ExportStatusResponse",
        file="schemas/export_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ExportStatusResponse",
        file="schemas/export_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ExportStatusResponse",
        file="schemas/export_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ExportStatusResponse",
        file="schemas/export_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="FallbackBehavior",
        file="schemas/agent_config_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="FallbackBehavior",
        file="schemas/agent_config_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="FallbackBehavior",
        file="schemas/agent_config_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="FallbackBehavior",
        file="schemas/agent_config_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="FallbackRequest",
        file="modules/agent_fallback.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="FallbackRequest",
        file="modules/agent_fallback.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="FallbackResponse",
        file="modules/agent_fallback.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="FallbackResponse",
        file="modules/agent_fallback.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="FeedbackRequest",
        file="api/performance.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="FeedbackRequest",
        file="api/performance.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="FeedbackRequest",
        file="api/modules/feedback.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="FeedbackRequest",
        file="api/modules/feedback.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="FixError",
        file="schemas/fix_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="FixError",
        file="schemas/fix_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="FixError",
        file="schemas/fix_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="FixError",
        file="schemas/fix_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="FixRequest",
        file="schemas/fix_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="FixRequest",
        file="schemas/fix_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="FixRequest",
        file="schemas/fix_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="FixRequest",
        file="schemas/fix_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="FixResponse",
        file="schemas/fix_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="FixResponse",
        file="schemas/fix_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="FixResponse",
        file="schemas/fix_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="FixResponse",
        file="schemas/fix_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="FixRollbackRequest",
        file="schemas/fix_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="FixRollbackRequest",
        file="schemas/fix_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="FixRollbackRequest",
        file="schemas/fix_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="FixRollbackRequest",
        file="schemas/fix_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="FixRollbackResponse",
        file="schemas/fix_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="FixRollbackResponse",
        file="schemas/fix_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="FixRollbackResponse",
        file="schemas/fix_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="FixRollbackResponse",
        file="schemas/fix_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="FixStatusRequest",
        file="schemas/fix_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="FixStatusRequest",
        file="schemas/fix_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="FixStatusRequest",
        file="schemas/fix_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="FixStatusRequest",
        file="schemas/fix_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="FixStatusResponse",
        file="schemas/fix_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="FixStatusResponse",
        file="schemas/fix_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="FixStatusResponse",
        file="schemas/fix_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="FixStatusResponse",
        file="schemas/fix_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ForgeBuildRequest",
        file="schemas/forge_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ForgeBuildRequest",
        file="schemas/forge_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ForgeBuildRequest",
        file="routes/forge_build_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ForgeBuildRequest",
        file="routes/forge_build_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ForgeBuildRequest",
        file="schemas/forge_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ForgeBuildRequest",
        file="schemas/forge_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ForgeBuildResponse",
        file="routes/forge_build_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ForgeBuildResponse",
        file="routes/forge_build_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ForgeBuildResult",
        file="schemas/forge_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ForgeBuildResult",
        file="schemas/forge_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ForgeBuildResult",
        file="schemas/forge_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ForgeBuildResult",
        file="schemas/forge_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ForgeRevisionRequest",
        file="schemas/forge_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ForgeRevisionRequest",
        file="schemas/forge_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ForgeRevisionRequest",
        file="schemas/forge_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ForgeRevisionRequest",
        file="schemas/forge_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ForgeRevisionResult",
        file="schemas/forge_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ForgeRevisionResult",
        file="schemas/forge_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ForgeRevisionResult",
        file="schemas/forge_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ForgeRevisionResult",
        file="schemas/forge_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ForwardEscalationRequest",
        file="api/performance.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ForwardEscalationRequest",
        file="api/performance.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="GoalModel",
        file="api/goals.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="GoalModel",
        file="api/goals.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="GuardianAlertRequest",
        file="schemas/guardian_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="GuardianAlertRequest",
        file="schemas/guardian_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="GuardianAlertRequest",
        file="schemas/guardian_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="GuardianAlertRequest",
        file="schemas/guardian_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="GuardianErrorResult",
        file="schemas/guardian_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="GuardianErrorResult",
        file="schemas/guardian_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="GuardianErrorResult",
        file="schemas/guardian_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="GuardianErrorResult",
        file="schemas/guardian_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="GuardianResponse",
        file="schemas/guardian_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="GuardianResponse",
        file="schemas/guardian_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="GuardianResponse",
        file="schemas/guardian_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="GuardianResponse",
        file="schemas/guardian_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="GuardianRollbackRequest",
        file="schemas/guardian_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="GuardianRollbackRequest",
        file="schemas/guardian_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="GuardianRollbackRequest",
        file="schemas/guardian_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="GuardianRollbackRequest",
        file="schemas/guardian_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="GuardianRollbackResult",
        file="schemas/guardian_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="GuardianRollbackResult",
        file="schemas/guardian_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="GuardianRollbackResult",
        file="schemas/guardian_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="GuardianRollbackResult",
        file="schemas/guardian_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="HealingActionResult",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="HealingActionResult",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="HealingActionResult",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="HealingActionResult",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="HealthCheckRequest",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="HealthCheckRequest",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="HealthCheckRequest",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="HealthCheckRequest",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="HealthCheckResponse",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="HealthCheckResponse",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="HealthCheckResponse",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="HealthCheckResponse",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="HealthMetric",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="HealthMetric",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="HealthMetric",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="HealthMetric",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="HealthMonitorConfigRequest",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="HealthMonitorConfigRequest",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="HealthMonitorConfigRequest",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="HealthMonitorConfigRequest",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="HealthMonitorConfigResponse",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="HealthMonitorConfigResponse",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="HealthMonitorConfigResponse",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="HealthMonitorConfigResponse",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="HistorianAlert",
        file="schemas/historian_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="HistorianAlert",
        file="schemas/historian_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="HistorianAlert",
        file="schemas/historian_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="HistorianAlert",
        file="schemas/historian_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="HistorianDriftRequest",
        file="schemas/historian_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="HistorianDriftRequest",
        file="schemas/historian_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="HistorianDriftRequest",
        file="schemas/historian_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="HistorianDriftRequest",
        file="schemas/historian_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="HistorianDriftResult",
        file="schemas/historian_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="HistorianDriftResult",
        file="schemas/historian_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="HistorianDriftResult",
        file="schemas/historian_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="HistorianDriftResult",
        file="schemas/historian_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="InstructionSchema",
        file="api/orchestrator/consult.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="InstructionSchema",
        file="api/orchestrator/consult.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LastAgentAction",
        file="schemas/agent_context_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LastAgentAction",
        file="schemas/agent_context_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LastAgentAction",
        file="schemas/agent_context_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LastAgentAction",
        file="schemas/agent_context_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopCompleteRequest",
        file="schemas/loop_trace.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopCompleteRequest",
        file="schemas/loop_trace.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopCompleteRequest",
        file="routes/orchestrator_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopCompleteRequest",
        file="routes/orchestrator_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopCompleteRequest",
        file="schemas/loop_trace.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopCompleteRequest",
        file="schemas/loop_trace.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopCompletionRequest",
        file="routes/loop_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopCompletionRequest",
        file="routes/loop_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopCompletionResponse",
        file="routes/loop_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopCompletionResponse",
        file="routes/loop_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopDebugRequest",
        file="schemas/debug_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopDebugRequest",
        file="schemas/debug_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopDebugRequest",
        file="schemas/debug_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopDebugRequest",
        file="schemas/debug_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopDebugResult",
        file="schemas/debug_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopDebugResult",
        file="schemas/debug_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopDebugResult",
        file="schemas/debug_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopDebugResult",
        file="schemas/debug_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopDriftLog",
        file="schemas/drift_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopDriftLog",
        file="schemas/drift_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopDriftLog",
        file="schemas/drift_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopDriftLog",
        file="schemas/drift_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopIssue",
        file="schemas/debug_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopIssue",
        file="schemas/debug_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopIssue",
        file="schemas/debug_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopIssue",
        file="schemas/debug_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopPlanRequest",
        file="routes/loop_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopPlanRequest",
        file="routes/loop_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopPlanResponse",
        file="routes/loop_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopPlanResponse",
        file="routes/loop_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopReflectionResult",
        file="schemas/loop_trace.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopReflectionResult",
        file="schemas/loop_trace.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopReflectionResult",
        file="schemas/loop_trace.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopReflectionResult",
        file="schemas/loop_trace.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopResetResponse",
        file="routes/loop_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopResetResponse",
        file="routes/loop_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopResponseRequest",
        file="schemas/loop_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopResponseRequest",
        file="schemas/loop_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopResponseRequest",
        file="schemas/loop_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopResponseRequest",
        file="schemas/loop_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopResponseResult",
        file="schemas/loop_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopResponseResult",
        file="schemas/loop_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopResponseResult",
        file="schemas/loop_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopResponseResult",
        file="schemas/loop_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopSnapshot",
        file="schemas/loop_snapshot_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopSnapshot",
        file="schemas/loop_snapshot_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopSnapshot",
        file="schemas/loop_snapshot_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopSnapshot",
        file="schemas/loop_snapshot_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopState",
        file="schemas/agent_context_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopState",
        file="schemas/agent_context_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopState",
        file="schemas/agent_context_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopState",
        file="schemas/agent_context_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopTraceItem",
        file="schemas/loop_trace.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopTraceItem",
        file="schemas/loop_trace.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopTraceItem",
        file="schemas/loop_trace.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopTraceItem",
        file="schemas/loop_trace.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopTraceRequest",
        file="routes/loop_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopTraceRequest",
        file="routes/loop_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopTraceResponse",
        file="routes/loop_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopTraceResponse",
        file="routes/loop_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopValidateRequest",
        file="routes/loop_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopValidateRequest",
        file="routes/loop_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopValidateRequest",
        file="routes/orchestrator_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopValidateRequest",
        file="routes/orchestrator_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopValidateResponse",
        file="routes/loop_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopValidateResponse",
        file="routes/loop_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopValidationError",
        file="schemas/loop_validation_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopValidationError",
        file="schemas/loop_validation_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopValidationError",
        file="schemas/loop_validation_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopValidationError",
        file="schemas/loop_validation_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopValidationRequest",
        file="schemas/loop_validation_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopValidationRequest",
        file="schemas/loop_validation_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopValidationRequest",
        file="schemas/loop_validation_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopValidationRequest",
        file="schemas/loop_validation_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopValidationResult",
        file="schemas/loop_validation_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopValidationResult",
        file="schemas/loop_validation_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopValidationResult",
        file="schemas/loop_validation_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="LoopValidationResult",
        file="schemas/loop_validation_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MaintenancePrediction",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MaintenancePrediction",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MaintenancePrediction",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MaintenancePrediction",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryAddRequest",
        file="schemas/memory_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryAddRequest",
        file="schemas/memory_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryAddRequest",
        file="schemas/memory_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryAddRequest",
        file="schemas/memory_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryAddResponse",
        file="schemas/memory_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryAddResponse",
        file="schemas/memory_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryAddResponse",
        file="schemas/memory_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryAddResponse",
        file="schemas/memory_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryAgentRequest",
        file="api/agent/memory.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryAgentRequest",
        file="api/agent/memory.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryAgentResponse",
        file="api/agent/memory.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryAgentResponse",
        file="api/agent/memory.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryDeleteRequest",
        file="routes/core_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryDeleteRequest",
        file="routes/core_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryDiff",
        file="modules/live_memory_inspection.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryDiff",
        file="modules/live_memory_inspection.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryEmbedBatchRequest",
        file="schemas/memory_embed_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryEmbedBatchRequest",
        file="schemas/memory_embed_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryEmbedBatchRequest",
        file="schemas/memory_embed_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryEmbedBatchRequest",
        file="schemas/memory_embed_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryEmbedBatchResponse",
        file="schemas/memory_embed_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryEmbedBatchResponse",
        file="schemas/memory_embed_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryEmbedBatchResponse",
        file="schemas/memory_embed_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryEmbedBatchResponse",
        file="schemas/memory_embed_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryEmbedError",
        file="schemas/memory_embed_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryEmbedError",
        file="schemas/memory_embed_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryEmbedError",
        file="schemas/memory_embed_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryEmbedError",
        file="schemas/memory_embed_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryEmbedRequest",
        file="schemas/memory_embed_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryEmbedRequest",
        file="schemas/memory_embed_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryEmbedRequest",
        file="schemas/memory_embed_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryEmbedRequest",
        file="schemas/memory_embed_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryEmbedResponse",
        file="schemas/memory_embed_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryEmbedResponse",
        file="schemas/memory_embed_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryEmbedResponse",
        file="schemas/memory_embed_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryEmbedResponse",
        file="schemas/memory_embed_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryEntry",
        file="schemas/memory_recall_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryEntry",
        file="schemas/memory_recall_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryEntry",
        file="schemas/memory_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryEntry",
        file="schemas/memory_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryEntry",
        file="schemas/memory_recall_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryEntry",
        file="schemas/memory_recall_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryEntry",
        file="schemas/memory_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryEntry",
        file="schemas/memory_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryEntryModel",
        file="api/memory_viewer.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryEntryModel",
        file="api/memory_viewer.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryExportRequest",
        file="routes/orchestrator_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryExportRequest",
        file="routes/orchestrator_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryFilter",
        file="modules/live_memory_inspection.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryFilter",
        file="modules/live_memory_inspection.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryInspectionRequest",
        file="routes/orchestrator_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryInspectionRequest",
        file="routes/orchestrator_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryItem",
        file="schemas/memory.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryItem",
        file="schemas/memory.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryItem",
        file="api/agent/memory.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryItem",
        file="api/agent/memory.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryItem",
        file="schemas/memory.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryItem",
        file="schemas/memory.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryQueryRequest",
        file="api/agent/memory.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryQueryRequest",
        file="api/agent/memory.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryQueryResponse",
        file="api/agent/memory.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryQueryResponse",
        file="api/agent/memory.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryReadRequest",
        file="routes/core_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryReadRequest",
        file="routes/core_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryRecallError",
        file="schemas/memory_recall_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryRecallError",
        file="schemas/memory_recall_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryRecallError",
        file="schemas/memory_recall_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryRecallError",
        file="schemas/memory_recall_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryRecallRequest",
        file="schemas/memory_recall_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryRecallRequest",
        file="schemas/memory_recall_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryRecallRequest",
        file="schemas/memory_recall_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryRecallRequest",
        file="schemas/memory_recall_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryRecallResponse",
        file="schemas/memory_recall_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryRecallResponse",
        file="schemas/memory_recall_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryRecallResponse",
        file="schemas/memory_recall_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryRecallResponse",
        file="schemas/memory_recall_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryResponse",
        file="api/memory.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryResponse",
        file="api/memory.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemorySearchRequest",
        file="schemas/memory_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemorySearchRequest",
        file="schemas/memory_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemorySearchRequest",
        file="schemas/memory_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemorySearchRequest",
        file="schemas/memory_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemorySearchResponse",
        file="schemas/memory_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemorySearchResponse",
        file="schemas/memory_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemorySearchResponse",
        file="schemas/memory_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemorySearchResponse",
        file="schemas/memory_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemorySnapshotRequest",
        file="routes/orchestrator_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemorySnapshotRequest",
        file="routes/orchestrator_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryStoreRequest",
        file="api/agent/memory.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryStoreRequest",
        file="api/agent/memory.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryUpdatePriorityRequest",
        file="api/memory.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryUpdatePriorityRequest",
        file="api/memory.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryUsage",
        file="schemas/agent_context_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryUsage",
        file="schemas/agent_context_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryUsage",
        file="schemas/agent_context_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryUsage",
        file="schemas/agent_context_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryWriteRequest",
        file="routes/core_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="MemoryWriteRequest",
        file="routes/core_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ModeSelectionRequest",
        file="routes/orchestrator_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ModeSelectionRequest",
        file="routes/orchestrator_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ModelInfo",
        file="schemas/trainer_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ModelInfo",
        file="schemas/trainer_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ModelInfo",
        file="schemas/trainer_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ModelInfo",
        file="schemas/trainer_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="NovaUIRequest",
        file="schemas/nova_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="NovaUIRequest",
        file="schemas/nova_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="NovaUIRequest",
        file="schemas/nova_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="NovaUIRequest",
        file="schemas/nova_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="NovaUIRequestFallback",
        file="schemas/nova_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="NovaUIRequestFallback",
        file="schemas/nova_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="NovaUIRequestFallback",
        file="schemas/nova_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="NovaUIRequestFallback",
        file="schemas/nova_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="NovaUIResult",
        file="schemas/nova_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="NovaUIResult",
        file="schemas/nova_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="NovaUIResult",
        file="schemas/nova_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="NovaUIResult",
        file="schemas/nova_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="NovaUIResultFallback",
        file="schemas/nova_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="NovaUIResultFallback",
        file="schemas/nova_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="NovaUIResultFallback",
        file="schemas/nova_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="NovaUIResultFallback",
        file="schemas/nova_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="NudgeData",
        file="core/nudge_manager.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="NudgeData",
        file="core/nudge_manager.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ObservationEntry",
        file="schemas/observer_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ObservationEntry",
        file="schemas/observer_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ObservationEntry",
        file="schemas/observer_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ObservationEntry",
        file="schemas/observer_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ObserverErrorResult",
        file="schemas/observer_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ObserverErrorResult",
        file="schemas/observer_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ObserverErrorResult",
        file="schemas/observer_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ObserverErrorResult",
        file="schemas/observer_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ObserverTaskRequest",
        file="schemas/observer_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ObserverTaskRequest",
        file="schemas/observer_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ObserverTaskRequest",
        file="schemas/observer_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ObserverTaskRequest",
        file="schemas/observer_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ObserverTaskResult",
        file="schemas/observer_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ObserverTaskResult",
        file="schemas/observer_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ObserverTaskResult",
        file="schemas/observer_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ObserverTaskResult",
        file="schemas/observer_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="OpsRequest",
        file="api/agent/ops.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="OpsRequest",
        file="api/agent/ops.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="OpsResponse",
        file="api/agent/ops.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="OpsResponse",
        file="api/agent/ops.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="OrchestratorChain",
        file="core/orchestrator.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="OrchestratorChain",
        file="core/orchestrator.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="OrchestratorConsultRequest",
        file="schemas/orchestrator_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="OrchestratorConsultRequest",
        file="schemas/orchestrator_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="OrchestratorConsultRequest",
        file="schemas/orchestrator_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="OrchestratorConsultRequest",
        file="schemas/orchestrator_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="OrchestratorDecision",
        file="schemas/orchestrator_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="OrchestratorDecision",
        file="schemas/orchestrator_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="OrchestratorDecision",
        file="schemas/orchestrator_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="OrchestratorDecision",
        file="schemas/orchestrator_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="OrchestratorErrorResult",
        file="schemas/orchestrator_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="OrchestratorErrorResult",
        file="schemas/orchestrator_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="OrchestratorErrorResult",
        file="schemas/orchestrator_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="OrchestratorErrorResult",
        file="schemas/orchestrator_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="OrchestratorInterpretRequest",
        file="schemas/orchestrator_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="OrchestratorInterpretRequest",
        file="schemas/orchestrator_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="OrchestratorInterpretRequest",
        file="schemas/orchestrator_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="OrchestratorInterpretRequest",
        file="schemas/orchestrator_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="OrchestratorPlan",
        file="schemas/orchestrator_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="OrchestratorPlan",
        file="schemas/orchestrator_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="OrchestratorPlan",
        file="schemas/orchestrator_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="OrchestratorPlan",
        file="schemas/orchestrator_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="OrchestratorPlanRequest",
        file="schemas/orchestrator_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="OrchestratorPlanRequest",
        file="schemas/orchestrator_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="OrchestratorPlanRequest",
        file="routes/orchestrator_plan_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="OrchestratorPlanRequest",
        file="routes/orchestrator_plan_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="OrchestratorPlanRequest",
        file="schemas/orchestrator_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="OrchestratorPlanRequest",
        file="schemas/orchestrator_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="OrchestratorPlanResult",
        file="schemas/orchestrator_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="OrchestratorPlanResult",
        file="schemas/orchestrator_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="OrchestratorPlanResult",
        file="schemas/orchestrator_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="OrchestratorPlanResult",
        file="schemas/orchestrator_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="OrchestratorStep",
        file="core/orchestrator.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="OrchestratorStep",
        file="core/orchestrator.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="OutputPolicyRequest",
        file="schemas/output_policy_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="OutputPolicyRequest",
        file="schemas/output_policy_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="OutputPolicyRequest",
        file="schemas/output_policy_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="OutputPolicyRequest",
        file="schemas/output_policy_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="OutputPolicyResult",
        file="schemas/output_policy_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="OutputPolicyResult",
        file="schemas/output_policy_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="OutputPolicyResult",
        file="schemas/output_policy_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="OutputPolicyResult",
        file="schemas/output_policy_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PatchPlan",
        file="schemas/debugger_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PatchPlan",
        file="schemas/debugger_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PatchPlan",
        file="schemas/debugger_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PatchPlan",
        file="schemas/debugger_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PatchProjectStateRequest",
        file="models/project_state.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PatchProjectStateRequest",
        file="models/project_state.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PendingTask",
        file="core/task_persistence.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PendingTask",
        file="core/task_persistence.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PerformanceResponse",
        file="api/performance.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PerformanceResponse",
        file="api/performance.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PersonaReflectRequest",
        file="routes/loop_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PersonaReflectRequest",
        file="routes/loop_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PersonaReflectResponse",
        file="routes/loop_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PersonaReflectResponse",
        file="routes/loop_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PersonaSwitchRequest",
        file="routes/persona_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PersonaSwitchRequest",
        file="routes/persona_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PessimistAssessment",
        file="schemas/pessimist_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PessimistAssessment",
        file="schemas/pessimist_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PessimistAssessment",
        file="schemas/pessimist_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PessimistAssessment",
        file="schemas/pessimist_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PessimistCheckRequest",
        file="schemas/pessimist_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PessimistCheckRequest",
        file="schemas/pessimist_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PessimistCheckRequest",
        file="schemas/pessimist_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PessimistCheckRequest",
        file="schemas/pessimist_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PessimistCheckResult",
        file="schemas/pessimist_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PessimistCheckResult",
        file="schemas/pessimist_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PessimistCheckResult",
        file="schemas/pessimist_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PessimistCheckResult",
        file="schemas/pessimist_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PessimistErrorResult",
        file="schemas/pessimist_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PessimistErrorResult",
        file="schemas/pessimist_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PessimistErrorResult",
        file="schemas/pessimist_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PessimistErrorResult",
        file="schemas/pessimist_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PessimistEvaluateRequest",
        file="schemas/pessimist_evaluation_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PessimistEvaluateRequest",
        file="schemas/pessimist_evaluation_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PessimistEvaluateRequest",
        file="routes/pessimist_evaluation_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PessimistEvaluateRequest",
        file="routes/pessimist_evaluation_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PessimistEvaluateRequest",
        file="schemas/pessimist_evaluation_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PessimistEvaluateRequest",
        file="schemas/pessimist_evaluation_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PessimistEvaluateResponse",
        file="schemas/pessimist_evaluation_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PessimistEvaluateResponse",
        file="schemas/pessimist_evaluation_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PessimistEvaluateResponse",
        file="routes/pessimist_evaluation_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PessimistEvaluateResponse",
        file="routes/pessimist_evaluation_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PessimistEvaluateResponse",
        file="schemas/pessimist_evaluation_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PessimistEvaluateResponse",
        file="schemas/pessimist_evaluation_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PlanGenerateError",
        file="schemas/plan_generate_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PlanGenerateError",
        file="schemas/plan_generate_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PlanGenerateError",
        file="schemas/plan_generate_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PlanGenerateError",
        file="schemas/plan_generate_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PlanGenerateRequest",
        file="schemas/plan_generate_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PlanGenerateRequest",
        file="schemas/plan_generate_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PlanGenerateRequest",
        file="api/modules/plan_models.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PlanGenerateRequest",
        file="api/modules/plan_models.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PlanGenerateRequest",
        file="schemas/plan_generate_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PlanGenerateRequest",
        file="schemas/plan_generate_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PlanGenerateResponse",
        file="schemas/plan_generate_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PlanGenerateResponse",
        file="schemas/plan_generate_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PlanGenerateResponse",
        file="api/modules/plan_models.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PlanGenerateResponse",
        file="api/modules/plan_models.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PlanGenerateResponse",
        file="schemas/plan_generate_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PlanGenerateResponse",
        file="schemas/plan_generate_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PlanStep",
        file="schemas/orchestrator_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PlanStep",
        file="schemas/orchestrator_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PlanStep",
        file="schemas/plan_generate_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PlanStep",
        file="schemas/plan_generate_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PlanStep",
        file="schemas/orchestrator_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PlanStep",
        file="schemas/orchestrator_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PlanStep",
        file="schemas/plan_generate_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PlanStep",
        file="schemas/plan_generate_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PlannerRequest",
        file="api/agent/planner.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PlannerRequest",
        file="api/agent/planner.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PlannerResponse",
        file="api/agent/planner.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PlannerResponse",
        file="api/agent/planner.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PolicyLogEntry",
        file="schemas/output_policy_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PolicyLogEntry",
        file="schemas/output_policy_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PolicyLogEntry",
        file="schemas/output_policy_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PolicyLogEntry",
        file="schemas/output_policy_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PolicyLogRequest",
        file="schemas/output_policy_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PolicyLogRequest",
        file="schemas/output_policy_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PolicyLogRequest",
        file="schemas/output_policy_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PolicyLogRequest",
        file="schemas/output_policy_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PolicyLogResponse",
        file="schemas/output_policy_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PolicyLogResponse",
        file="schemas/output_policy_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PolicyLogResponse",
        file="schemas/output_policy_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PolicyLogResponse",
        file="schemas/output_policy_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PredictiveMaintenanceRequest",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PredictiveMaintenanceRequest",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PredictiveMaintenanceRequest",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PredictiveMaintenanceRequest",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PredictiveMaintenanceResponse",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PredictiveMaintenanceResponse",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PredictiveMaintenanceResponse",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PredictiveMaintenanceResponse",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PresentRequest",
        file="modules/orchestrator_present.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PresentRequest",
        file="modules/orchestrator_present.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PresentResponse",
        file="modules/orchestrator_present.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="PresentResponse",
        file="modules/orchestrator_present.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ProjectContext",
        file="api/modules/agent_context_models.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ProjectContext",
        file="api/modules/agent_context_models.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ProjectInitiateRequest",
        file="api/modules/project_models.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ProjectInitiateRequest",
        file="api/modules/project_models.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ProjectInitiateResponse",
        file="api/modules/project_models.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ProjectInitiateResponse",
        file="api/modules/project_models.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ProjectInput",
        file="api/projects/projects.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ProjectInput",
        file="api/projects/projects.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ProjectOutput",
        file="api/projects/projects.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ProjectOutput",
        file="api/projects/projects.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ProjectStartRequest",
        file="api/orchestrator/start_project.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ProjectStartRequest",
        file="api/orchestrator/start_project.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ProjectStartRequest",
        file="api/project/start.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ProjectStartRequest",
        file="api/project/start.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ProjectSummarizeRequest",
        file="api/modules/project_summary.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ProjectSummarizeRequest",
        file="api/modules/project_summary.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ReflectRequest",
        file="modules/agent_reflect.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ReflectRequest",
        file="modules/agent_reflect.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ReflectResponse",
        file="modules/agent_reflect.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ReflectResponse",
        file="modules/agent_reflect.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ReflectionRequest",
        file="modules/reflect.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ReflectionRequest",
        file="modules/reflect.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="RepairSuggestion",
        file="schemas/debug_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="RepairSuggestion",
        file="schemas/debug_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="RepairSuggestion",
        file="schemas/debug_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="RepairSuggestion",
        file="schemas/debug_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ReportRequest",
        file="api/modules/observer.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ReportRequest",
        file="api/modules/observer.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="RerunDecision",
        file="schemas/loop_trace.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="RerunDecision",
        file="schemas/loop_trace.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="RerunDecision",
        file="schemas/rerun_decision.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="RerunDecision",
        file="schemas/rerun_decision.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="RerunDecision",
        file="schemas/loop_trace.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="RerunDecision",
        file="schemas/loop_trace.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="RerunDecision",
        file="schemas/rerun_decision.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="RerunDecision",
        file="schemas/rerun_decision.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ResearchRequest",
        file="api/agent/research.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ResearchRequest",
        file="api/agent/research.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ResearchResponse",
        file="api/agent/research.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ResearchResponse",
        file="api/agent/research.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ResolutionResult",
        file="schemas/orchestrator_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ResolutionResult",
        file="schemas/orchestrator_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ResolutionResult",
        file="schemas/orchestrator_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ResolutionResult",
        file="schemas/orchestrator_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ResolveEscalationRequest",
        file="api/performance.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ResolveEscalationRequest",
        file="api/performance.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="RespondRequest",
        file="api/respond.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="RespondRequest",
        file="api/respond.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="RespondRequest",
        file="api/modules/respond_models.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="RespondRequest",
        file="api/modules/respond_models.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="RespondResponse",
        file="api/modules/respond_models.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="RespondResponse",
        file="api/modules/respond_models.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="RetryData",
        file="core/confidence_retry.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="RetryData",
        file="core/confidence_retry.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ReviewRequest",
        file="modules/critic/review.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ReviewRequest",
        file="modules/critic/review.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ReviewRequest",
        file="modules/review/task.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ReviewRequest",
        file="modules/review/task.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ReviewResponse",
        file="modules/critic/review.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ReviewResponse",
        file="modules/critic/review.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ReviewScores",
        file="modules/critic/review.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ReviewScores",
        file="modules/critic/review.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="RiskAssessment",
        file="schemas/pessimist_evaluation_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="RiskAssessment",
        file="schemas/pessimist_evaluation_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="RiskAssessment",
        file="routes/pessimist_evaluation_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="RiskAssessment",
        file="routes/pessimist_evaluation_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="RiskAssessment",
        file="schemas/pessimist_evaluation_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="RiskAssessment",
        file="schemas/pessimist_evaluation_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="RiskFactor",
        file="schemas/ash_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="RiskFactor",
        file="schemas/ash_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="RiskFactor",
        file="schemas/ash_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="RiskFactor",
        file="schemas/ash_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SaasPlanRequest",
        file="modules/plan/scope.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SaasPlanRequest",
        file="modules/plan/scope.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SaasPlanResponse",
        file="modules/plan/scope.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SaasPlanResponse",
        file="modules/plan/scope.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SageBeliefRequest",
        file="schemas/sage_beliefs_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SageBeliefRequest",
        file="schemas/sage_beliefs_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SageBeliefRequest",
        file="schemas/sage_beliefs_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SageBeliefRequest",
        file="schemas/sage_beliefs_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SageBeliefResponse",
        file="schemas/sage_beliefs_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SageBeliefResponse",
        file="schemas/sage_beliefs_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SageBeliefResponse",
        file="schemas/sage_beliefs_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SageBeliefResponse",
        file="schemas/sage_beliefs_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SageErrorResult",
        file="schemas/sage_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SageErrorResult",
        file="schemas/sage_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SageErrorResult",
        file="schemas/sage_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SageErrorResult",
        file="schemas/sage_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SageReviewRequest",
        file="schemas/sage_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SageReviewRequest",
        file="schemas/sage_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SageReviewRequest",
        file="schemas/sage_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SageReviewRequest",
        file="schemas/sage_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SageReviewResult",
        file="schemas/sage_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SageReviewResult",
        file="schemas/sage_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SageReviewResult",
        file="schemas/sage_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SageReviewResult",
        file="schemas/sage_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SageScoreBeliefRequest",
        file="schemas/sage_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SageScoreBeliefRequest",
        file="schemas/sage_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SageScoreBeliefRequest",
        file="schemas/sage_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SageScoreBeliefRequest",
        file="schemas/sage_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SageScoreBeliefResult",
        file="schemas/sage_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SageScoreBeliefResult",
        file="schemas/sage_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SageScoreBeliefResult",
        file="schemas/sage_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SageScoreBeliefResult",
        file="schemas/sage_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SageSummarizeRequest",
        file="schemas/sage_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SageSummarizeRequest",
        file="schemas/sage_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SageSummarizeRequest",
        file="schemas/sage_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SageSummarizeRequest",
        file="schemas/sage_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SageSummarizeResult",
        file="schemas/sage_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SageSummarizeResult",
        file="schemas/sage_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SageSummarizeResult",
        file="schemas/sage_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SageSummarizeResult",
        file="schemas/sage_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SchemaConfig",
        file="api/orchestrator/scope.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SchemaConfig",
        file="api/orchestrator/scope.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SchemaConfig",
        file="modules/orchestrator_scope.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SchemaConfig",
        file="modules/orchestrator_scope.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ScopeRequest",
        file="api/orchestrator/scope.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ScopeRequest",
        file="api/orchestrator/scope.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ScopeRequest",
        file="modules/orchestrator_scope.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ScopeRequest",
        file="modules/orchestrator_scope.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ScopeResponse",
        file="api/orchestrator/scope.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ScopeResponse",
        file="api/orchestrator/scope.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ScopeResponse",
        file="modules/orchestrator_scope.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ScopeResponse",
        file="modules/orchestrator_scope.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SelfHealingRequest",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SelfHealingRequest",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SelfHealingRequest",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SelfHealingRequest",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SelfHealingResponse",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SelfHealingResponse",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SelfHealingResponse",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SelfHealingResponse",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SelfInquiryRequest",
        file="schemas/self_reflection_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SelfInquiryRequest",
        file="schemas/self_reflection_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SelfInquiryRequest",
        file="schemas/self_reflection_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SelfInquiryRequest",
        file="schemas/self_reflection_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SiteGenErrorResult",
        file="schemas/sitegen_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SiteGenErrorResult",
        file="schemas/sitegen_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SiteGenErrorResult",
        file="schemas/sitegen_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SiteGenErrorResult",
        file="schemas/sitegen_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SiteGenTaskRequest",
        file="schemas/sitegen_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SiteGenTaskRequest",
        file="schemas/sitegen_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SiteGenTaskRequest",
        file="schemas/sitegen_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SiteGenTaskRequest",
        file="schemas/sitegen_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SiteGenTaskResult",
        file="schemas/sitegen_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SiteGenTaskResult",
        file="schemas/sitegen_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SiteGenTaskResult",
        file="schemas/sitegen_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SiteGenTaskResult",
        file="schemas/sitegen_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SiteLayout",
        file="schemas/sitegen_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SiteLayout",
        file="schemas/sitegen_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SiteLayout",
        file="schemas/sitegen_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SiteLayout",
        file="schemas/sitegen_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="Slide",
        file="modules/orchestrator_present.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="Slide",
        file="modules/orchestrator_present.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SnapshotResponse",
        file="schemas/loop_snapshot_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SnapshotResponse",
        file="schemas/loop_snapshot_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SnapshotResponse",
        file="schemas/loop_snapshot_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SnapshotResponse",
        file="schemas/loop_snapshot_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SnapshotRestoreRequest",
        file="schemas/loop_snapshot_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SnapshotRestoreRequest",
        file="schemas/loop_snapshot_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SnapshotRestoreRequest",
        file="schemas/loop_snapshot_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SnapshotRestoreRequest",
        file="schemas/loop_snapshot_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SnapshotSaveRequest",
        file="schemas/loop_snapshot_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SnapshotSaveRequest",
        file="schemas/loop_snapshot_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SnapshotSaveRequest",
        file="schemas/loop_snapshot_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SnapshotSaveRequest",
        file="schemas/loop_snapshot_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="StartLoopRequest",
        file="models/loop.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="StartLoopRequest",
        file="models/loop.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="StreamCloseRequest",
        file="schemas/delegate_stream_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="StreamCloseRequest",
        file="schemas/delegate_stream_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="StreamCloseRequest",
        file="schemas/delegate_stream_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="StreamCloseRequest",
        file="schemas/delegate_stream_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="StreamCloseResponse",
        file="schemas/delegate_stream_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="StreamCloseResponse",
        file="schemas/delegate_stream_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="StreamCloseResponse",
        file="schemas/delegate_stream_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="StreamCloseResponse",
        file="schemas/delegate_stream_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="StreamError",
        file="schemas/delegate_stream_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="StreamError",
        file="schemas/delegate_stream_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="StreamError",
        file="schemas/delegate_stream_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="StreamError",
        file="schemas/delegate_stream_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="StreamEvent",
        file="schemas/delegate_stream_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="StreamEvent",
        file="schemas/delegate_stream_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="StreamEvent",
        file="schemas/delegate_stream_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="StreamEvent",
        file="schemas/delegate_stream_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="StreamRequest",
        file="schemas/delegate_stream_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="StreamRequest",
        file="schemas/delegate_stream_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="StreamRequest",
        file="schemas/delegate_stream_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="StreamRequest",
        file="schemas/delegate_stream_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="StreamResponse",
        file="schemas/delegate_stream_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="StreamResponse",
        file="schemas/delegate_stream_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="StreamResponse",
        file="schemas/delegate_stream_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="StreamResponse",
        file="schemas/delegate_stream_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="StreamStatusRequest",
        file="schemas/delegate_stream_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="StreamStatusRequest",
        file="schemas/delegate_stream_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="StreamStatusRequest",
        file="schemas/delegate_stream_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="StreamStatusRequest",
        file="schemas/delegate_stream_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="StreamStatusResponse",
        file="schemas/delegate_stream_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="StreamStatusResponse",
        file="schemas/delegate_stream_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="StreamStatusResponse",
        file="schemas/delegate_stream_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="StreamStatusResponse",
        file="schemas/delegate_stream_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SummarizationRequest",
        file="schemas/memory.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SummarizationRequest",
        file="schemas/memory.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SummarizationRequest",
        file="schemas/memory.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SummarizationRequest",
        file="schemas/memory.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SystemHealthSummary",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SystemHealthSummary",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SystemHealthSummary",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="SystemHealthSummary",
        file="schemas/health_monitor_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TaskData",
        file="api/agent.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TaskData",
        file="api/agent.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TaskDefinition",
        file="modules/orchestrator_build.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TaskDefinition",
        file="modules/orchestrator_build.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TaskDelegationModel",
        file="api/control.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TaskDelegationModel",
        file="api/control.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TaskExecuteRequest",
        file="api/agent.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TaskExecuteRequest",
        file="api/agent.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TaskItem",
        file="api/modules/agent_context_models.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TaskItem",
        file="api/modules/agent_context_models.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TaskMetadata",
        file="core/task_tagger.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TaskMetadata",
        file="core/task_tagger.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TaskModel",
        file="api/goals.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TaskModel",
        file="api/goals.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TaskPlan",
        file="api/modules/plan_models.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TaskPlan",
        file="api/modules/plan_models.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TaskRequirement",
        file="modules/agent_verify.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TaskRequirement",
        file="modules/agent_verify.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TaskResultRequest",
        file="modules/task_result.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TaskResultRequest",
        file="modules/task_result.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TaskResultResponse",
        file="modules/task_result.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TaskResultResponse",
        file="modules/task_result.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TaskStatusInput",
        file="api/task/status.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TaskStatusInput",
        file="api/task/status.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TaskStatusOutput",
        file="api/task/status.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TaskStatusOutput",
        file="api/task/status.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TaskStatusQuery",
        file="api/task/status.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TaskStatusQuery",
        file="api/task/status.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TestPayload",
        file="api/orchestrator/scope.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TestPayload",
        file="api/orchestrator/scope.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TestPayload",
        file="modules/orchestrator_scope.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TestPayload",
        file="modules/orchestrator_scope.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TestResult",
        file="schemas/ash_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TestResult",
        file="schemas/ash_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TestResult",
        file="schemas/ash_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TestResult",
        file="schemas/ash_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TextInput",
        file="core/input_gateway.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TextInput",
        file="core/input_gateway.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ThreadRequest",
        file="schemas/memory.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ThreadRequest",
        file="schemas/memory.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ThreadRequest",
        file="schemas/memory.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ThreadRequest",
        file="schemas/memory.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ToneProfile",
        file="modules/agent_create.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ToneProfile",
        file="modules/agent_create.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ToneProfile",
        file="modules/agent_present.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ToneProfile",
        file="modules/agent_present.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ToneProfile",
        file="modules/orchestrator_scope.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ToneProfile",
        file="modules/orchestrator_scope.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ToolPermission",
        file="schemas/agent_config_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ToolPermission",
        file="schemas/agent_config_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ToolPermission",
        file="schemas/agent_config_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ToolPermission",
        file="schemas/agent_config_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TrainError",
        file="schemas/train_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TrainError",
        file="schemas/train_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TrainError",
        file="schemas/train_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TrainError",
        file="schemas/train_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TrainMemory",
        file="api/modules/train.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TrainMemory",
        file="api/modules/train.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TrainRequest",
        file="schemas/train_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TrainRequest",
        file="schemas/train_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TrainRequest",
        file="schemas/train_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TrainRequest",
        file="schemas/train_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TrainResponse",
        file="schemas/train_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TrainResponse",
        file="schemas/train_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TrainResponse",
        file="schemas/train_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TrainResponse",
        file="schemas/train_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TrainStatusRequest",
        file="schemas/train_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TrainStatusRequest",
        file="schemas/train_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TrainStatusRequest",
        file="schemas/train_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TrainStatusRequest",
        file="schemas/train_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TrainStatusResponse",
        file="schemas/train_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TrainStatusResponse",
        file="schemas/train_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TrainStatusResponse",
        file="schemas/train_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TrainStatusResponse",
        file="schemas/train_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TrainerErrorResult",
        file="schemas/trainer_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TrainerErrorResult",
        file="schemas/trainer_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TrainerErrorResult",
        file="schemas/trainer_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TrainerErrorResult",
        file="schemas/trainer_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TrainerTaskRequest",
        file="schemas/trainer_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TrainerTaskRequest",
        file="schemas/trainer_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TrainerTaskRequest",
        file="schemas/trainer_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TrainerTaskRequest",
        file="schemas/trainer_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TrainerTaskResult",
        file="schemas/trainer_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TrainerTaskResult",
        file="schemas/trainer_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TrainerTaskResult",
        file="schemas/trainer_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TrainerTaskResult",
        file="schemas/trainer_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TrainingMetrics",
        file="schemas/train_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TrainingMetrics",
        file="schemas/train_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TrainingMetrics",
        file="schemas/trainer_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TrainingMetrics",
        file="schemas/trainer_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TrainingMetrics",
        file="schemas/train_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TrainingMetrics",
        file="schemas/train_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TrainingMetrics",
        file="schemas/trainer_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TrainingMetrics",
        file="schemas/trainer_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TrainingRequest",
        file="api/modules/train.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TrainingRequest",
        file="api/modules/train.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TriggerResult",
        file="schemas/orchestrator_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TriggerResult",
        file="schemas/orchestrator_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TriggerResult",
        file="schemas/orchestrator_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TriggerResult",
        file="schemas/orchestrator_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TrustEvaluationRequest",
        file="routes/trust_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TrustEvaluationRequest",
        file="routes/trust_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TrustEvaluationResponse",
        file="routes/trust_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="TrustEvaluationResponse",
        file="routes/trust_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="UIComponent",
        file="schemas/nova_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="UIComponent",
        file="schemas/nova_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="UIComponent",
        file="schemas/nova_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="UIComponent",
        file="schemas/nova_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="UnmatchedTask",
        file="modules/orchestrator_scope.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="UnmatchedTask",
        file="modules/orchestrator_scope.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="UserContextGetRequest",
        file="api/modules/user_context_models.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="UserContextGetRequest",
        file="api/modules/user_context_models.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="UserContextGetResponse",
        file="api/modules/user_context_models.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="UserContextGetResponse",
        file="api/modules/user_context_models.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="UserContextRegisterRequest",
        file="api/modules/user_context_models.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="UserContextRegisterRequest",
        file="api/modules/user_context_models.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="UserContextRegisterResponse",
        file="api/modules/user_context_models.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="UserContextRegisterResponse",
        file="api/modules/user_context_models.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="UserGoalPlanRequest",
        file="api/modules/plan_models.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="UserGoalPlanRequest",
        file="api/modules/plan_models.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="UserGoalPlanResponse",
        file="api/modules/plan_models.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="UserGoalPlanResponse",
        file="api/modules/plan_models.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="UserGoalPlanTask",
        file="api/modules/plan_models.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="UserGoalPlanTask",
        file="api/modules/plan_models.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ValidateSchemaHashRequest",
        file="schemas/validate_schema_hash.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ValidateSchemaHashRequest",
        file="schemas/validate_schema_hash.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ValidateSchemaHashRequest",
        file="schemas/validate_schema_hash.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ValidateSchemaHashRequest",
        file="schemas/validate_schema_hash.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ValidateSchemaHashResult",
        file="schemas/validate_schema_hash.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ValidateSchemaHashResult",
        file="schemas/validate_schema_hash.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ValidateSchemaHashResult",
        file="schemas/validate_schema_hash.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ValidateSchemaHashResult",
        file="schemas/validate_schema_hash.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ValidationIssue",
        file="schemas/loop_validation_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ValidationIssue",
        file="schemas/loop_validation_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ValidationIssue",
        file="schemas/loop_validation_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ValidationIssue",
        file="schemas/loop_validation_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ValidationRecommendation",
        file="schemas/loop_validation_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ValidationRecommendation",
        file="schemas/loop_validation_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ValidationRecommendation",
        file="schemas/loop_validation_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="ValidationRecommendation",
        file="schemas/loop_validation_schema.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="VerifyTaskRequest",
        file="modules/agent_verify.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="VerifyTaskRequest",
        file="modules/agent_verify.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="VerifyTaskResponse",
        file="modules/agent_verify.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="VerifyTaskResponse",
        file="modules/agent_verify.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="VisualizationRequest",
        file="routes/orchestrator_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="VisualizationRequest",
        file="routes/orchestrator_routes.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="WorkflowResponse",
        file="models/workflow.py",
        status="active",
        used_by=[]
    ),
    SchemaEntry(
        name="WorkflowResponse",
        file="models/workflow.py",
        status="active",
        used_by=[]
    ),
])

# For backward compatibility, also provide the schemas as a list
SCHEMA_LIST = SCHEMA_REGISTRY.schemas

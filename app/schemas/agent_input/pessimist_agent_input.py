from pydantic import BaseModel, Field
from typing import Optional, Dict, Any

class PessimistRiskAssessmentInput(BaseModel):
    loop_id: str = Field(..., description="The ID of the current loop.")
    plan_file_path: str = Field(..., description="Absolute path to the proposed plan JSON file generated by the Architect and approved by the Critic.")
    # Optional context fields, similar to Critic, if needed for more advanced risk assessment
    # intent_data: Optional[Dict[str, Any]] = Field(default=None, description="The full intent data for the current loop.")
    # belief_surface_path: Optional[str] = Field(default="/home/ubuntu/personal-ai-agent/app/memory/belief_surface.json", description="Path to the belief surface file.")
    # promethios_creed_path: Optional[str] = Field(default="/home/ubuntu/personal-ai-agent/app/memory/promethios_creed.json", description="Path to the Promethios creed file.")


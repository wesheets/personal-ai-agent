{
  "agents": {
    "hal": {
      "tools": [
        "openai_generate_code",
        "memory_read",
        "memory_write"
      ],
      "schema_wrapped": true,
      "fallbacks": [
        "openai_fallback",
        "schema_fallback"
      ],
      "checksum": "initial"
    },
    "orchestrator": {
      "tools": [
        "memory_read",
        "memory_write",
        "plan_next_agent"
      ],
      "schema_wrapped": true,
      "fallbacks": [
        "schema_fallback"
      ],
      "checksum": "initial"
    }
  },
  "schemas": {
    "LoopResponseRequest": {
      "file": "app/schemas/loop_schema.py",
      "bound_to_routes": [
        "/loop/respond"
      ],
      "version": "v1.0.0",
      "checksum": "initial"
    },
    "LoopResponseResult": {
      "file": "app/schemas/loop_schema.py",
      "bound_to_routes": [
        "/loop/respond"
      ],
      "version": "v1.0.0",
      "checksum": "initial"
    }
  },
  "routes": {
    "/loop/respond": {
      "method": "POST",
      "schema": "LoopResponseRequest",
      "status": "registered",
      "errors": []
    },
    "/loop/snapshot/save": {
      "method": "POST",
      "schema": "SnapshotSaveRequest",
      "status": "active",
      "errors": []
    },
    "/loop/snapshot/restore": {
      "method": "POST",
      "schema": "SnapshotRestoreRequest",
      "status": "active",
      "errors": []
    },
    "/loop/snapshot/list": {
      "method": "GET",
      "schema": "None",
      "status": "active",
      "errors": []
    },
    "/orchestrator/plan": {
      "method": "POST",
      "schema": "OrchestratorPlanRequest",
      "status": "active",
      "errors": []
    },
    "/orchestrator/validate_contract": {
      "method": "POST",
      "schema": "ContractValidationRequest",
      "status": "active",
      "errors": []
    },
    "/orchestrator/validate_delegation": {
      "method": "POST",
      "schema": "DelegationValidationRequest",
      "status": "active",
      "errors": []
    },
    "/policy/enforce": {
      "method": "POST",
      "schema": "OutputPolicyRequest",
      "status": "tested",
      "errors": []
    },
    "/policy/logs": {
      "method": "POST",
      "schema": "PolicyLogRequest",
      "status": "tested",
      "errors": []
    }
  },
  "modules": {
    "hal_openai": {
      "file": "app/modules/hal_openai.py",
      "wrapped_with_schema": true,
      "last_updated": "2025-04-24T23:47:07.446977"
    }
  },
  "memory": {
    "schema_hashes": {},
    "fallback_logging_enabled": true
  },
  "hardening_layers": {
    "schema_checksum_tracking": true,
    "schema_discovery_fallback": true,
    "test_route_integrity": false,
    "agent_contract_enforcement": true
  },
  "manifest_meta": {
    "version": "1.0.0",
    "created_at": "2025-04-24T23:47:07.446977",
    "last_updated": "2025-04-24T23:47:07.960943",
    "boot_events": [
      {
        "timestamp": "2025-04-24T23:47:07.816573",
        "version": "1.0.0"
      },
      {
        "timestamp": "2025-04-24T23:47:07.897987",
        "version": "1.0.0"
      }
    ],
    "loaded_routes": [
      "agent_config_routes",
      "agent_context_routes",
      "memory_recall_routes",
      "memory_embed_routes",
      "plan_generate_routes",
      "train_routes",
      "export_routes",
      "fix_routes",
      "delegate_stream_routes",
      "app_memory_routes",
      "loop_routes",
      "routes_orchestrator_routes",
      "core_routes",
      "agent_routes",
      "persona_routes",
      "debug_routes",
      "historian_routes",
      "debugger_routes",
      "critic_routes",
      "sage_routes",
      "guardian_routes",
      "pessimist_routes",
      "nova_routes",
      "cto_routes",
      "observer_routes",
      "sitegen_routes",
      "reflection_routes",
      "trust_routes",
      "snapshot_routes",
      "orchestrator_plan_routes",
      "health_monitor_routes",
      "self_routes",
      "orchestrator_contract_routes",
      "ash_routes",
      "dashboard_routes",
      "forge_routes",
      "loop_validation_routes",
      "output_policy_routes",
      "pessimist_evaluation_routes"
    ]
  }
}
from fastapi import APIRouter, Query
import logging

# Configure logging
logger = logging.getLogger("routes.system_summary_routes")

router = APIRouter()

@router.post("/summary")
def generate_system_summary(project_id: str):
    """
    Generates a new narrative summary of system activities for a specific project.
    
    This endpoint triggers the SAGE agent to create a fresh summary of the project's
    current state and activities, regardless of whether a recent summary exists.
    
    Args:
        project_id: The project identifier
        
    Returns:
        Dict containing the newly generated narrative summary and metadata
    """
    try:
        from agents.sage_agent import run_sage_agent
        logger.info(f"Generating new system summary for project: {project_id}")
        summary = run_sage_agent(project_id)
        return {
            "project_id": project_id,
            "summary": summary,
            "status": "success"
        }
    except ImportError:
        logger.warning(f"Could not import sage_agent, using fallback implementation")
        # Fallback implementation when sage_agent is not available
        summary = f"System summary for project {project_id} (generated by fallback implementation)"
        return {
            "project_id": project_id,
            "summary": summary,
            "status": "success"
        }
    except Exception as e:
        logger.error(f"Error generating system summary: {str(e)}")
        return {
            "status": "error",
            "message": f"Summary generation failed: {str(e)}"
        }
